ARM GAS  /tmp/ccJp40Yk.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"usbh_conf.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.HAL_HCD_MspInit,"ax",%progbits
  22              		.align	2
  23              		.global	HAL_HCD_MspInit
  24              		.thumb
  25              		.thumb_func
  27              	HAL_HCD_MspInit:
  28              	.LFB124:
  29              		.file 1 "Src/usbh_conf.c"
   1:Src/usbh_conf.c **** /**
   2:Src/usbh_conf.c ****   ******************************************************************************
   3:Src/usbh_conf.c ****   * @file            : usbh_conf.c
   4:Src/usbh_conf.c ****   * @version         : v1.0_Cube
   5:Src/usbh_conf.c ****   * @brief           : This file implements the board support package for the USB host library
   6:Src/usbh_conf.c ****   ******************************************************************************
   7:Src/usbh_conf.c ****   * This notice applies to any and all portions of this file
   8:Src/usbh_conf.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/usbh_conf.c ****   * USER CODE END. Other portions of this file, whether 
  10:Src/usbh_conf.c ****   * inserted by the user or by software development tools
  11:Src/usbh_conf.c ****   * are owned by their respective copyright owners.
  12:Src/usbh_conf.c ****   *
  13:Src/usbh_conf.c ****   * Copyright (c) 2017 STMicroelectronics International N.V. 
  14:Src/usbh_conf.c ****   * All rights reserved.
  15:Src/usbh_conf.c ****   *
  16:Src/usbh_conf.c ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/usbh_conf.c ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/usbh_conf.c ****   *
  19:Src/usbh_conf.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/usbh_conf.c ****   *    this list of conditions and the following disclaimer.
  21:Src/usbh_conf.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/usbh_conf.c ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/usbh_conf.c ****   *    and/or other materials provided with the distribution.
  24:Src/usbh_conf.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/usbh_conf.c ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/usbh_conf.c ****   *    derived from this software without specific written permission.
  27:Src/usbh_conf.c ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/usbh_conf.c ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/usbh_conf.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
ARM GAS  /tmp/ccJp40Yk.s 			page 2


  30:Src/usbh_conf.c ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/usbh_conf.c ****   *    this license is void and will automatically terminate your rights under 
  32:Src/usbh_conf.c ****   *    this license. 
  33:Src/usbh_conf.c ****   *
  34:Src/usbh_conf.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/usbh_conf.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/usbh_conf.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/usbh_conf.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/usbh_conf.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/usbh_conf.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/usbh_conf.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/usbh_conf.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/usbh_conf.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/usbh_conf.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/usbh_conf.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/usbh_conf.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/usbh_conf.c ****   *
  47:Src/usbh_conf.c ****   ******************************************************************************
  48:Src/usbh_conf.c **** */
  49:Src/usbh_conf.c **** /* Includes ------------------------------------------------------------------*/
  50:Src/usbh_conf.c **** #include "usbh_core.h"
  51:Src/usbh_conf.c **** 
  52:Src/usbh_conf.c **** HCD_HandleTypeDef hhcd_USB_OTG_FS;
  53:Src/usbh_conf.c **** void _Error_Handler(char * file, int line);
  54:Src/usbh_conf.c **** 
  55:Src/usbh_conf.c **** /*******************************************************************************
  56:Src/usbh_conf.c ****                        LL Driver Callbacks (HCD -> USB Host Library)
  57:Src/usbh_conf.c **** *******************************************************************************/
  58:Src/usbh_conf.c **** /* MSP Init */
  59:Src/usbh_conf.c **** 
  60:Src/usbh_conf.c **** void HAL_HCD_MspInit(HCD_HandleTypeDef* hcdHandle)
  61:Src/usbh_conf.c **** {
  30              		.loc 1 61 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 24
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  62:Src/usbh_conf.c ****   GPIO_InitTypeDef GPIO_InitStruct;
  63:Src/usbh_conf.c ****   if(hcdHandle->Instance==USB_OTG_FS)
  35              		.loc 1 63 0
  36 0000 0368     		ldr	r3, [r0]
  37 0002 B3F1A04F 		cmp	r3, #1342177280
  38 0006 29D1     		bne	.L4
  61:Src/usbh_conf.c ****   GPIO_InitTypeDef GPIO_InitStruct;
  39              		.loc 1 61 0
  40 0008 10B5     		push	{r4, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 4, -8
  44              		.cfi_offset 14, -4
  45 000a 86B0     		sub	sp, sp, #24
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 32
  64:Src/usbh_conf.c ****   {
  65:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspInit 0 */
  66:Src/usbh_conf.c **** 
  67:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspInit 0 */
ARM GAS  /tmp/ccJp40Yk.s 			page 3


  68:Src/usbh_conf.c ****   
  69:Src/usbh_conf.c ****     /**USB_OTG_FS GPIO Configuration    
  70:Src/usbh_conf.c ****     PA11     ------> USB_OTG_FS_DM
  71:Src/usbh_conf.c ****     PA12     ------> USB_OTG_FS_DP 
  72:Src/usbh_conf.c ****     */
  73:Src/usbh_conf.c ****     GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;
  48              		.loc 1 73 0
  49 000c 4FF4C053 		mov	r3, #6144
  50 0010 0193     		str	r3, [sp, #4]
  74:Src/usbh_conf.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  51              		.loc 1 74 0
  52 0012 0223     		movs	r3, #2
  53 0014 0293     		str	r3, [sp, #8]
  75:Src/usbh_conf.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  54              		.loc 1 75 0
  55 0016 0024     		movs	r4, #0
  56 0018 0394     		str	r4, [sp, #12]
  76:Src/usbh_conf.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  57              		.loc 1 76 0
  58 001a 0323     		movs	r3, #3
  59 001c 0493     		str	r3, [sp, #16]
  77:Src/usbh_conf.c ****     GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
  60              		.loc 1 77 0
  61 001e 0A23     		movs	r3, #10
  62 0020 0593     		str	r3, [sp, #20]
  78:Src/usbh_conf.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  63              		.loc 1 78 0
  64 0022 01A9     		add	r1, sp, #4
  65 0024 0E48     		ldr	r0, .L5
  66              	.LVL1:
  67 0026 FFF7FEFF 		bl	HAL_GPIO_Init
  68              	.LVL2:
  79:Src/usbh_conf.c **** 
  80:Src/usbh_conf.c ****     /* Peripheral clock enable */
  81:Src/usbh_conf.c ****     __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
  69              		.loc 1 81 0
  70 002a 0E4B     		ldr	r3, .L5+4
  71 002c 5A6B     		ldr	r2, [r3, #52]
  72 002e 42F08002 		orr	r2, r2, #128
  73 0032 5A63     		str	r2, [r3, #52]
  74              	.LBB2:
  75 0034 0094     		str	r4, [sp]
  76 0036 5A6C     		ldr	r2, [r3, #68]
  77 0038 42F48042 		orr	r2, r2, #16384
  78 003c 5A64     		str	r2, [r3, #68]
  79 003e 5B6C     		ldr	r3, [r3, #68]
  80 0040 03F48043 		and	r3, r3, #16384
  81 0044 0093     		str	r3, [sp]
  82 0046 009B     		ldr	r3, [sp]
  83              	.LBE2:
  82:Src/usbh_conf.c **** 
  83:Src/usbh_conf.c ****     /* Peripheral interrupt init */
  84:Src/usbh_conf.c ****     HAL_NVIC_SetPriority(OTG_FS_IRQn, 0, 0);
  84              		.loc 1 84 0
  85 0048 2246     		mov	r2, r4
  86 004a 2146     		mov	r1, r4
  87 004c 4320     		movs	r0, #67
ARM GAS  /tmp/ccJp40Yk.s 			page 4


  88 004e FFF7FEFF 		bl	HAL_NVIC_SetPriority
  89              	.LVL3:
  85:Src/usbh_conf.c ****     HAL_NVIC_EnableIRQ(OTG_FS_IRQn);
  90              		.loc 1 85 0
  91 0052 4320     		movs	r0, #67
  92 0054 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  93              	.LVL4:
  86:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspInit 1 */
  87:Src/usbh_conf.c **** 
  88:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspInit 1 */
  89:Src/usbh_conf.c ****   }
  90:Src/usbh_conf.c **** }
  94              		.loc 1 90 0
  95 0058 06B0     		add	sp, sp, #24
  96              	.LCFI2:
  97              		.cfi_def_cfa_offset 8
  98              		@ sp needed
  99 005a 10BD     		pop	{r4, pc}
 100              	.LVL5:
 101              	.L4:
 102              	.LCFI3:
 103              		.cfi_def_cfa_offset 0
 104              		.cfi_restore 4
 105              		.cfi_restore 14
 106 005c 7047     		bx	lr
 107              	.L6:
 108 005e 00BF     		.align	2
 109              	.L5:
 110 0060 00000240 		.word	1073872896
 111 0064 00380240 		.word	1073887232
 112              		.cfi_endproc
 113              	.LFE124:
 115              		.section	.text.HAL_HCD_MspDeInit,"ax",%progbits
 116              		.align	2
 117              		.global	HAL_HCD_MspDeInit
 118              		.thumb
 119              		.thumb_func
 121              	HAL_HCD_MspDeInit:
 122              	.LFB125:
  91:Src/usbh_conf.c **** 
  92:Src/usbh_conf.c **** void HAL_HCD_MspDeInit(HCD_HandleTypeDef* hcdHandle)
  93:Src/usbh_conf.c **** {
 123              		.loc 1 93 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              	.LVL6:
 128 0000 08B5     		push	{r3, lr}
 129              	.LCFI4:
 130              		.cfi_def_cfa_offset 8
 131              		.cfi_offset 3, -8
 132              		.cfi_offset 14, -4
  94:Src/usbh_conf.c ****   if(hcdHandle->Instance==USB_OTG_FS)
 133              		.loc 1 94 0
 134 0002 0368     		ldr	r3, [r0]
 135 0004 B3F1A04F 		cmp	r3, #1342177280
 136 0008 0CD1     		bne	.L7
ARM GAS  /tmp/ccJp40Yk.s 			page 5


  95:Src/usbh_conf.c ****   {
  96:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspDeInit 0 */
  97:Src/usbh_conf.c **** 
  98:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspDeInit 0 */
  99:Src/usbh_conf.c ****     /* Peripheral clock disable */
 100:Src/usbh_conf.c ****     __HAL_RCC_USB_OTG_FS_CLK_DISABLE();
 137              		.loc 1 100 0
 138 000a 074A     		ldr	r2, .L10
 139 000c 536B     		ldr	r3, [r2, #52]
 140 000e 23F08003 		bic	r3, r3, #128
 141 0012 5363     		str	r3, [r2, #52]
 101:Src/usbh_conf.c ****   
 102:Src/usbh_conf.c ****     /**USB_OTG_FS GPIO Configuration    
 103:Src/usbh_conf.c ****     PA11     ------> USB_OTG_FS_DM
 104:Src/usbh_conf.c ****     PA12     ------> USB_OTG_FS_DP 
 105:Src/usbh_conf.c ****     */
 106:Src/usbh_conf.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_11|GPIO_PIN_12);
 142              		.loc 1 106 0
 143 0014 4FF4C051 		mov	r1, #6144
 144 0018 0448     		ldr	r0, .L10+4
 145              	.LVL7:
 146 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 147              	.LVL8:
 107:Src/usbh_conf.c **** 
 108:Src/usbh_conf.c ****     /* Peripheral interrupt Deinit*/
 109:Src/usbh_conf.c ****     HAL_NVIC_DisableIRQ(OTG_FS_IRQn);
 148              		.loc 1 109 0
 149 001e 4320     		movs	r0, #67
 150 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 151              	.LVL9:
 152              	.L7:
 153 0024 08BD     		pop	{r3, pc}
 154              	.L11:
 155 0026 00BF     		.align	2
 156              	.L10:
 157 0028 00380240 		.word	1073887232
 158 002c 00000240 		.word	1073872896
 159              		.cfi_endproc
 160              	.LFE125:
 162              		.section	.text.HAL_HCD_SOF_Callback,"ax",%progbits
 163              		.align	2
 164              		.global	HAL_HCD_SOF_Callback
 165              		.thumb
 166              		.thumb_func
 168              	HAL_HCD_SOF_Callback:
 169              	.LFB126:
 110:Src/usbh_conf.c **** 
 111:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspDeInit 1 */
 112:Src/usbh_conf.c **** 
 113:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspDeInit 1 */
 114:Src/usbh_conf.c ****   }
 115:Src/usbh_conf.c **** }
 116:Src/usbh_conf.c **** 
 117:Src/usbh_conf.c **** /**
 118:Src/usbh_conf.c ****   * @brief  SOF callback.
 119:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 120:Src/usbh_conf.c ****   * @retval None
ARM GAS  /tmp/ccJp40Yk.s 			page 6


 121:Src/usbh_conf.c ****   */
 122:Src/usbh_conf.c **** void HAL_HCD_SOF_Callback(HCD_HandleTypeDef *hhcd)
 123:Src/usbh_conf.c **** {
 170              		.loc 1 123 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              	.LVL10:
 175 0000 08B5     		push	{r3, lr}
 176              	.LCFI5:
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 3, -8
 179              		.cfi_offset 14, -4
 124:Src/usbh_conf.c ****   USBH_LL_IncTimer (hhcd->pData);
 180              		.loc 1 124 0
 181 0002 D0F89402 		ldr	r0, [r0, #660]
 182              	.LVL11:
 183 0006 FFF7FEFF 		bl	USBH_LL_IncTimer
 184              	.LVL12:
 185 000a 08BD     		pop	{r3, pc}
 186              		.cfi_endproc
 187              	.LFE126:
 189              		.section	.text.HAL_HCD_Connect_Callback,"ax",%progbits
 190              		.align	2
 191              		.global	HAL_HCD_Connect_Callback
 192              		.thumb
 193              		.thumb_func
 195              	HAL_HCD_Connect_Callback:
 196              	.LFB127:
 125:Src/usbh_conf.c **** }
 126:Src/usbh_conf.c **** 
 127:Src/usbh_conf.c **** /**
 128:Src/usbh_conf.c ****   * @brief  SOF callback.
 129:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 130:Src/usbh_conf.c ****   * @retval None
 131:Src/usbh_conf.c ****   */
 132:Src/usbh_conf.c **** void HAL_HCD_Connect_Callback(HCD_HandleTypeDef *hhcd)
 133:Src/usbh_conf.c **** {
 197              		.loc 1 133 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              	.LVL13:
 202 0000 08B5     		push	{r3, lr}
 203              	.LCFI6:
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 3, -8
 206              		.cfi_offset 14, -4
 134:Src/usbh_conf.c ****   USBH_LL_Connect(hhcd->pData);
 207              		.loc 1 134 0
 208 0002 D0F89402 		ldr	r0, [r0, #660]
 209              	.LVL14:
 210 0006 FFF7FEFF 		bl	USBH_LL_Connect
 211              	.LVL15:
 212 000a 08BD     		pop	{r3, pc}
 213              		.cfi_endproc
 214              	.LFE127:
ARM GAS  /tmp/ccJp40Yk.s 			page 7


 216              		.section	.text.HAL_HCD_Disconnect_Callback,"ax",%progbits
 217              		.align	2
 218              		.global	HAL_HCD_Disconnect_Callback
 219              		.thumb
 220              		.thumb_func
 222              	HAL_HCD_Disconnect_Callback:
 223              	.LFB128:
 135:Src/usbh_conf.c **** }
 136:Src/usbh_conf.c **** 
 137:Src/usbh_conf.c **** /**
 138:Src/usbh_conf.c ****   * @brief  SOF callback.
 139:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 140:Src/usbh_conf.c ****   * @retval None
 141:Src/usbh_conf.c ****   */
 142:Src/usbh_conf.c **** void HAL_HCD_Disconnect_Callback(HCD_HandleTypeDef *hhcd)
 143:Src/usbh_conf.c **** {
 224              		.loc 1 143 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              	.LVL16:
 229 0000 08B5     		push	{r3, lr}
 230              	.LCFI7:
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 3, -8
 233              		.cfi_offset 14, -4
 144:Src/usbh_conf.c ****   USBH_LL_Disconnect(hhcd->pData);
 234              		.loc 1 144 0
 235 0002 D0F89402 		ldr	r0, [r0, #660]
 236              	.LVL17:
 237 0006 FFF7FEFF 		bl	USBH_LL_Disconnect
 238              	.LVL18:
 239 000a 08BD     		pop	{r3, pc}
 240              		.cfi_endproc
 241              	.LFE128:
 243              		.section	.text.HAL_HCD_HC_NotifyURBChange_Callback,"ax",%progbits
 244              		.align	2
 245              		.global	HAL_HCD_HC_NotifyURBChange_Callback
 246              		.thumb
 247              		.thumb_func
 249              	HAL_HCD_HC_NotifyURBChange_Callback:
 250              	.LFB129:
 145:Src/usbh_conf.c **** } 
 146:Src/usbh_conf.c **** 
 147:Src/usbh_conf.c **** /**
 148:Src/usbh_conf.c ****   * @brief  Notify URB state change callback.
 149:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 150:Src/usbh_conf.c ****   * @retval None
 151:Src/usbh_conf.c ****   */
 152:Src/usbh_conf.c **** void HAL_HCD_HC_NotifyURBChange_Callback(HCD_HandleTypeDef *hhcd, uint8_t chnum, HCD_URBStateTypeDe
 153:Src/usbh_conf.c **** {
 251              		.loc 1 153 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255              		@ link register save eliminated.
 256              	.LVL19:
ARM GAS  /tmp/ccJp40Yk.s 			page 8


 257 0000 7047     		bx	lr
 258              		.cfi_endproc
 259              	.LFE129:
 261 0002 00BF     		.section	.text.USBH_LL_Init,"ax",%progbits
 262              		.align	2
 263              		.global	USBH_LL_Init
 264              		.thumb
 265              		.thumb_func
 267              	USBH_LL_Init:
 268              	.LFB130:
 154:Src/usbh_conf.c ****   /* To be used with OS to sync URB state with the global state machine */
 155:Src/usbh_conf.c **** #if (USBH_USE_OS == 1)   
 156:Src/usbh_conf.c ****   USBH_LL_NotifyURBChange(hhcd->pData);
 157:Src/usbh_conf.c **** #endif 
 158:Src/usbh_conf.c **** }
 159:Src/usbh_conf.c **** /*******************************************************************************
 160:Src/usbh_conf.c ****                        LL Driver Interface (USB Host Library --> HCD)
 161:Src/usbh_conf.c **** *******************************************************************************/
 162:Src/usbh_conf.c **** /**
 163:Src/usbh_conf.c ****   * @brief  USBH_LL_Init 
 164:Src/usbh_conf.c ****   *         Initialize the Low Level portion of the Host driver.
 165:Src/usbh_conf.c ****   * @param  phost: Host handle
 166:Src/usbh_conf.c ****   * @retval USBH Status
 167:Src/usbh_conf.c ****   */
 168:Src/usbh_conf.c **** USBH_StatusTypeDef  USBH_LL_Init (USBH_HandleTypeDef *phost)
 169:Src/usbh_conf.c **** {
 269              		.loc 1 169 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273              	.LVL20:
 170:Src/usbh_conf.c ****   /* Init USB_IP */
 171:Src/usbh_conf.c ****   if (phost->id == HOST_FS) {
 274              		.loc 1 171 0
 275 0000 90F88C35 		ldrb	r3, [r0, #1420]	@ zero_extendqisi2
 276 0004 012B     		cmp	r3, #1
 277 0006 22D1     		bne	.L23
 169:Src/usbh_conf.c ****   /* Init USB_IP */
 278              		.loc 1 169 0
 279 0008 10B5     		push	{r4, lr}
 280              	.LCFI8:
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 4, -8
 283              		.cfi_offset 14, -4
 284 000a 0446     		mov	r4, r0
 172:Src/usbh_conf.c ****   /* Link The driver to the stack */
 173:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.pData = phost;
 285              		.loc 1 173 0
 286 000c 1148     		ldr	r0, .L24
 287              	.LVL21:
 288 000e C0F89442 		str	r4, [r0, #660]
 174:Src/usbh_conf.c ****   phost->pData = &hhcd_USB_OTG_FS;
 289              		.loc 1 174 0
 290 0012 C4F89005 		str	r0, [r4, #1424]
 175:Src/usbh_conf.c **** 
 176:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Instance = USB_OTG_FS;
 291              		.loc 1 176 0
ARM GAS  /tmp/ccJp40Yk.s 			page 9


 292 0016 4FF0A043 		mov	r3, #1342177280
 293 001a 0360     		str	r3, [r0]
 177:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Host_channels = 8;
 294              		.loc 1 177 0
 295 001c 0823     		movs	r3, #8
 296 001e 8360     		str	r3, [r0, #8]
 178:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.speed = HCD_SPEED_FULL;
 297              		.loc 1 178 0
 298 0020 0323     		movs	r3, #3
 299 0022 C360     		str	r3, [r0, #12]
 179:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 300              		.loc 1 179 0
 301 0024 0023     		movs	r3, #0
 302 0026 0361     		str	r3, [r0, #16]
 180:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.phy_itface = HCD_PHY_EMBEDDED;
 303              		.loc 1 180 0
 304 0028 0222     		movs	r2, #2
 305 002a 8261     		str	r2, [r0, #24]
 181:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
 306              		.loc 1 181 0
 307 002c C361     		str	r3, [r0, #28]
 182:Src/usbh_conf.c ****   if (HAL_HCD_Init(&hhcd_USB_OTG_FS) != HAL_OK)
 308              		.loc 1 182 0
 309 002e FFF7FEFF 		bl	HAL_HCD_Init
 310              	.LVL22:
 311 0032 18B1     		cbz	r0, .L21
 183:Src/usbh_conf.c ****   {
 184:Src/usbh_conf.c ****     _Error_Handler(__FILE__, __LINE__);
 312              		.loc 1 184 0
 313 0034 B821     		movs	r1, #184
 314 0036 0848     		ldr	r0, .L24+4
 315 0038 FFF7FEFF 		bl	_Error_Handler
 316              	.LVL23:
 317              	.L21:
 185:Src/usbh_conf.c ****   }
 186:Src/usbh_conf.c **** 
 187:Src/usbh_conf.c ****   USBH_LL_SetTimer (phost, HAL_HCD_GetCurrentFrame(&hhcd_USB_OTG_FS));
 318              		.loc 1 187 0
 319 003c 0548     		ldr	r0, .L24
 320 003e FFF7FEFF 		bl	HAL_HCD_GetCurrentFrame
 321              	.LVL24:
 322 0042 0146     		mov	r1, r0
 323 0044 2046     		mov	r0, r4
 324 0046 FFF7FEFF 		bl	USBH_LL_SetTimer
 325              	.LVL25:
 188:Src/usbh_conf.c ****   }
 189:Src/usbh_conf.c ****   return USBH_OK;
 190:Src/usbh_conf.c **** }
 326              		.loc 1 190 0
 327 004a 0020     		movs	r0, #0
 328 004c 10BD     		pop	{r4, pc}
 329              	.LVL26:
 330              	.L23:
 331              	.LCFI9:
 332              		.cfi_def_cfa_offset 0
 333              		.cfi_restore 4
 334              		.cfi_restore 14
ARM GAS  /tmp/ccJp40Yk.s 			page 10


 335 004e 0020     		movs	r0, #0
 336              	.LVL27:
 337 0050 7047     		bx	lr
 338              	.L25:
 339 0052 00BF     		.align	2
 340              	.L24:
 341 0054 00000000 		.word	hhcd_USB_OTG_FS
 342 0058 00000000 		.word	.LC0
 343              		.cfi_endproc
 344              	.LFE130:
 346              		.section	.text.USBH_LL_DeInit,"ax",%progbits
 347              		.align	2
 348              		.global	USBH_LL_DeInit
 349              		.thumb
 350              		.thumb_func
 352              	USBH_LL_DeInit:
 353              	.LFB131:
 191:Src/usbh_conf.c **** 
 192:Src/usbh_conf.c **** /**
 193:Src/usbh_conf.c ****   * @brief  USBH_LL_DeInit 
 194:Src/usbh_conf.c ****   *         De-Initialize the Low Level portion of the Host driver.
 195:Src/usbh_conf.c ****   * @param  phost: Host handle
 196:Src/usbh_conf.c ****   * @retval USBH Status
 197:Src/usbh_conf.c ****   */
 198:Src/usbh_conf.c **** USBH_StatusTypeDef  USBH_LL_DeInit (USBH_HandleTypeDef *phost)
 199:Src/usbh_conf.c **** {
 354              		.loc 1 199 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358              	.LVL28:
 359 0000 08B5     		push	{r3, lr}
 360              	.LCFI10:
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 3, -8
 363              		.cfi_offset 14, -4
 364              	.LVL29:
 200:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 201:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 202:Src/usbh_conf.c ****  
 203:Src/usbh_conf.c ****   hal_status = HAL_HCD_DeInit(phost->pData);
 365              		.loc 1 203 0
 366 0002 D0F89005 		ldr	r0, [r0, #1424]
 367              	.LVL30:
 368 0006 FFF7FEFF 		bl	HAL_HCD_DeInit
 369              	.LVL31:
 204:Src/usbh_conf.c ****   
 205:Src/usbh_conf.c ****   switch (hal_status) {
 370              		.loc 1 205 0
 371 000a 10B1     		cbz	r0, .L28
 372 000c 0228     		cmp	r0, #2
 373 000e 02D0     		beq	.L29
 374 0010 03E0     		b	.L31
 375              	.L28:
 206:Src/usbh_conf.c ****     case HAL_OK :
 207:Src/usbh_conf.c ****       usb_status = USBH_OK;
 376              		.loc 1 207 0
ARM GAS  /tmp/ccJp40Yk.s 			page 11


 377 0012 0020     		movs	r0, #0
 378              	.LVL32:
 379 0014 08BD     		pop	{r3, pc}
 380              	.LVL33:
 381              	.L29:
 208:Src/usbh_conf.c ****     break;
 209:Src/usbh_conf.c ****     case HAL_ERROR :
 210:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 211:Src/usbh_conf.c ****     break;
 212:Src/usbh_conf.c ****     case HAL_BUSY :
 213:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 382              		.loc 1 213 0
 383 0016 0120     		movs	r0, #1
 384              	.LVL34:
 214:Src/usbh_conf.c ****     break;
 385              		.loc 1 214 0
 386 0018 08BD     		pop	{r3, pc}
 387              	.LVL35:
 388              	.L31:
 210:Src/usbh_conf.c ****     break;
 389              		.loc 1 210 0
 390 001a 0220     		movs	r0, #2
 391              	.LVL36:
 215:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 216:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 217:Src/usbh_conf.c ****     break;
 218:Src/usbh_conf.c ****     default :
 219:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 220:Src/usbh_conf.c ****     break;
 221:Src/usbh_conf.c ****   }
 222:Src/usbh_conf.c ****   return usb_status; 
 223:Src/usbh_conf.c **** }
 392              		.loc 1 223 0
 393 001c 08BD     		pop	{r3, pc}
 394              		.cfi_endproc
 395              	.LFE131:
 397 001e 00BF     		.section	.text.USBH_LL_Start,"ax",%progbits
 398              		.align	2
 399              		.global	USBH_LL_Start
 400              		.thumb
 401              		.thumb_func
 403              	USBH_LL_Start:
 404              	.LFB132:
 224:Src/usbh_conf.c **** 
 225:Src/usbh_conf.c **** /**
 226:Src/usbh_conf.c ****   * @brief  USBH_LL_Start 
 227:Src/usbh_conf.c ****   *         Start the Low Level portion of the Host driver.
 228:Src/usbh_conf.c ****   * @param  phost: Host handle
 229:Src/usbh_conf.c ****   * @retval USBH Status
 230:Src/usbh_conf.c ****   */
 231:Src/usbh_conf.c **** USBH_StatusTypeDef  USBH_LL_Start(USBH_HandleTypeDef *phost)
 232:Src/usbh_conf.c **** {
 405              		.loc 1 232 0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 0, uses_anonymous_args = 0
 409              	.LVL37:
ARM GAS  /tmp/ccJp40Yk.s 			page 12


 410 0000 08B5     		push	{r3, lr}
 411              	.LCFI11:
 412              		.cfi_def_cfa_offset 8
 413              		.cfi_offset 3, -8
 414              		.cfi_offset 14, -4
 415              	.LVL38:
 233:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 234:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 235:Src/usbh_conf.c ****  
 236:Src/usbh_conf.c ****   hal_status = HAL_HCD_Start(phost->pData);
 416              		.loc 1 236 0
 417 0002 D0F89005 		ldr	r0, [r0, #1424]
 418              	.LVL39:
 419 0006 FFF7FEFF 		bl	HAL_HCD_Start
 420              	.LVL40:
 237:Src/usbh_conf.c ****   
 238:Src/usbh_conf.c ****   switch (hal_status) {
 421              		.loc 1 238 0
 422 000a 10B1     		cbz	r0, .L35
 423 000c 0228     		cmp	r0, #2
 424 000e 02D0     		beq	.L36
 425 0010 03E0     		b	.L38
 426              	.L35:
 239:Src/usbh_conf.c ****     case HAL_OK :
 240:Src/usbh_conf.c ****       usb_status = USBH_OK;
 427              		.loc 1 240 0
 428 0012 0020     		movs	r0, #0
 429              	.LVL41:
 430 0014 08BD     		pop	{r3, pc}
 431              	.LVL42:
 432              	.L36:
 241:Src/usbh_conf.c ****     break;
 242:Src/usbh_conf.c ****     case HAL_ERROR :
 243:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 244:Src/usbh_conf.c ****     break;
 245:Src/usbh_conf.c ****     case HAL_BUSY :
 246:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 433              		.loc 1 246 0
 434 0016 0120     		movs	r0, #1
 435              	.LVL43:
 247:Src/usbh_conf.c ****     break;
 436              		.loc 1 247 0
 437 0018 08BD     		pop	{r3, pc}
 438              	.LVL44:
 439              	.L38:
 243:Src/usbh_conf.c ****     break;
 440              		.loc 1 243 0
 441 001a 0220     		movs	r0, #2
 442              	.LVL45:
 248:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 249:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 250:Src/usbh_conf.c ****     break;
 251:Src/usbh_conf.c ****     default :
 252:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 253:Src/usbh_conf.c ****     break;
 254:Src/usbh_conf.c ****   }
 255:Src/usbh_conf.c ****   return usb_status; 
ARM GAS  /tmp/ccJp40Yk.s 			page 13


 256:Src/usbh_conf.c **** }
 443              		.loc 1 256 0
 444 001c 08BD     		pop	{r3, pc}
 445              		.cfi_endproc
 446              	.LFE132:
 448 001e 00BF     		.section	.text.USBH_LL_Stop,"ax",%progbits
 449              		.align	2
 450              		.global	USBH_LL_Stop
 451              		.thumb
 452              		.thumb_func
 454              	USBH_LL_Stop:
 455              	.LFB133:
 257:Src/usbh_conf.c **** 
 258:Src/usbh_conf.c **** /**
 259:Src/usbh_conf.c ****   * @brief  USBH_LL_Stop 
 260:Src/usbh_conf.c ****   *         Stop the Low Level portion of the Host driver.
 261:Src/usbh_conf.c ****   * @param  phost: Host handle
 262:Src/usbh_conf.c ****   * @retval USBH Status
 263:Src/usbh_conf.c ****   */
 264:Src/usbh_conf.c **** USBH_StatusTypeDef  USBH_LL_Stop (USBH_HandleTypeDef *phost)
 265:Src/usbh_conf.c **** {
 456              		.loc 1 265 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460              	.LVL46:
 461 0000 08B5     		push	{r3, lr}
 462              	.LCFI12:
 463              		.cfi_def_cfa_offset 8
 464              		.cfi_offset 3, -8
 465              		.cfi_offset 14, -4
 466              	.LVL47:
 266:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 267:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 268:Src/usbh_conf.c ****  
 269:Src/usbh_conf.c ****   hal_status = HAL_HCD_Stop(phost->pData);
 467              		.loc 1 269 0
 468 0002 D0F89005 		ldr	r0, [r0, #1424]
 469              	.LVL48:
 470 0006 FFF7FEFF 		bl	HAL_HCD_Stop
 471              	.LVL49:
 270:Src/usbh_conf.c ****   
 271:Src/usbh_conf.c ****   switch (hal_status) {
 472              		.loc 1 271 0
 473 000a 10B1     		cbz	r0, .L42
 474 000c 0228     		cmp	r0, #2
 475 000e 02D0     		beq	.L43
 476 0010 03E0     		b	.L45
 477              	.L42:
 272:Src/usbh_conf.c ****     case HAL_OK :
 273:Src/usbh_conf.c ****       usb_status = USBH_OK;
 478              		.loc 1 273 0
 479 0012 0020     		movs	r0, #0
 480              	.LVL50:
 481 0014 08BD     		pop	{r3, pc}
 482              	.LVL51:
 483              	.L43:
ARM GAS  /tmp/ccJp40Yk.s 			page 14


 274:Src/usbh_conf.c ****     break;
 275:Src/usbh_conf.c ****     case HAL_ERROR :
 276:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 277:Src/usbh_conf.c ****     break;
 278:Src/usbh_conf.c ****     case HAL_BUSY :
 279:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 484              		.loc 1 279 0
 485 0016 0120     		movs	r0, #1
 486              	.LVL52:
 280:Src/usbh_conf.c ****     break;
 487              		.loc 1 280 0
 488 0018 08BD     		pop	{r3, pc}
 489              	.LVL53:
 490              	.L45:
 276:Src/usbh_conf.c ****     break;
 491              		.loc 1 276 0
 492 001a 0220     		movs	r0, #2
 493              	.LVL54:
 281:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 282:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 283:Src/usbh_conf.c ****     break;
 284:Src/usbh_conf.c ****     default :
 285:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 286:Src/usbh_conf.c ****     break;
 287:Src/usbh_conf.c ****   }
 288:Src/usbh_conf.c ****   return usb_status;  
 289:Src/usbh_conf.c **** }
 494              		.loc 1 289 0
 495 001c 08BD     		pop	{r3, pc}
 496              		.cfi_endproc
 497              	.LFE133:
 499 001e 00BF     		.section	.text.USBH_LL_GetSpeed,"ax",%progbits
 500              		.align	2
 501              		.global	USBH_LL_GetSpeed
 502              		.thumb
 503              		.thumb_func
 505              	USBH_LL_GetSpeed:
 506              	.LFB134:
 290:Src/usbh_conf.c **** 
 291:Src/usbh_conf.c **** /**
 292:Src/usbh_conf.c ****   * @brief  USBH_LL_GetSpeed 
 293:Src/usbh_conf.c ****   *         Return the USB Host Speed from the Low Level Driver.
 294:Src/usbh_conf.c ****   * @param  phost: Host handle
 295:Src/usbh_conf.c ****   * @retval USBH Speeds
 296:Src/usbh_conf.c ****   */
 297:Src/usbh_conf.c **** USBH_SpeedTypeDef USBH_LL_GetSpeed  (USBH_HandleTypeDef *phost)
 298:Src/usbh_conf.c **** {
 507              		.loc 1 298 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511              	.LVL55:
 512 0000 08B5     		push	{r3, lr}
 513              	.LCFI13:
 514              		.cfi_def_cfa_offset 8
 515              		.cfi_offset 3, -8
 516              		.cfi_offset 14, -4
ARM GAS  /tmp/ccJp40Yk.s 			page 15


 517              	.LVL56:
 299:Src/usbh_conf.c ****   USBH_SpeedTypeDef speed = USBH_SPEED_FULL;
 300:Src/usbh_conf.c ****     
 301:Src/usbh_conf.c ****   switch (HAL_HCD_GetCurrentSpeed(phost->pData))
 518              		.loc 1 301 0
 519 0002 D0F89005 		ldr	r0, [r0, #1424]
 520              	.LVL57:
 521 0006 FFF7FEFF 		bl	HAL_HCD_GetCurrentSpeed
 522              	.LVL58:
 523 000a 10B1     		cbz	r0, .L49
 524 000c 0228     		cmp	r0, #2
 525 000e 02D0     		beq	.L50
 526 0010 03E0     		b	.L52
 527              	.L49:
 302:Src/usbh_conf.c ****   {
 303:Src/usbh_conf.c ****   case 0 : 
 304:Src/usbh_conf.c ****     speed = USBH_SPEED_HIGH;
 528              		.loc 1 304 0
 529 0012 0020     		movs	r0, #0
 530 0014 08BD     		pop	{r3, pc}
 531              	.L50:
 532              	.LVL59:
 305:Src/usbh_conf.c ****     break;
 306:Src/usbh_conf.c ****     
 307:Src/usbh_conf.c ****   case 1 : 
 308:Src/usbh_conf.c ****     speed = USBH_SPEED_FULL;    
 309:Src/usbh_conf.c ****     break;
 310:Src/usbh_conf.c ****     
 311:Src/usbh_conf.c ****   case 2 : 
 312:Src/usbh_conf.c ****     speed = USBH_SPEED_LOW;    
 533              		.loc 1 312 0
 534 0016 0220     		movs	r0, #2
 313:Src/usbh_conf.c ****     break;
 535              		.loc 1 313 0
 536 0018 08BD     		pop	{r3, pc}
 537              	.LVL60:
 538              	.L52:
 308:Src/usbh_conf.c ****     break;
 539              		.loc 1 308 0
 540 001a 0120     		movs	r0, #1
 541              	.LVL61:
 314:Src/usbh_conf.c **** 	
 315:Src/usbh_conf.c ****   default:  
 316:Src/usbh_conf.c ****    speed = USBH_SPEED_FULL;    
 317:Src/usbh_conf.c ****     break;  
 318:Src/usbh_conf.c ****   }
 319:Src/usbh_conf.c ****   return  speed;
 320:Src/usbh_conf.c **** }
 542              		.loc 1 320 0
 543 001c 08BD     		pop	{r3, pc}
 544              		.cfi_endproc
 545              	.LFE134:
 547 001e 00BF     		.section	.text.USBH_LL_ResetPort,"ax",%progbits
 548              		.align	2
 549              		.global	USBH_LL_ResetPort
 550              		.thumb
 551              		.thumb_func
ARM GAS  /tmp/ccJp40Yk.s 			page 16


 553              	USBH_LL_ResetPort:
 554              	.LFB135:
 321:Src/usbh_conf.c **** 
 322:Src/usbh_conf.c **** /**
 323:Src/usbh_conf.c ****   * @brief  USBH_LL_ResetPort 
 324:Src/usbh_conf.c ****   *         Reset the Host Port of the Low Level Driver.
 325:Src/usbh_conf.c ****   * @param  phost: Host handle
 326:Src/usbh_conf.c ****   * @retval USBH Status
 327:Src/usbh_conf.c ****   */
 328:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_ResetPort (USBH_HandleTypeDef *phost) 
 329:Src/usbh_conf.c **** {
 555              		.loc 1 329 0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 0
 558              		@ frame_needed = 0, uses_anonymous_args = 0
 559              	.LVL62:
 560 0000 08B5     		push	{r3, lr}
 561              	.LCFI14:
 562              		.cfi_def_cfa_offset 8
 563              		.cfi_offset 3, -8
 564              		.cfi_offset 14, -4
 565              	.LVL63:
 330:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 331:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 332:Src/usbh_conf.c ****  
 333:Src/usbh_conf.c ****   hal_status = HAL_HCD_ResetPort(phost->pData);
 566              		.loc 1 333 0
 567 0002 D0F89005 		ldr	r0, [r0, #1424]
 568              	.LVL64:
 569 0006 FFF7FEFF 		bl	HAL_HCD_ResetPort
 570              	.LVL65:
 334:Src/usbh_conf.c ****   switch (hal_status) {
 571              		.loc 1 334 0
 572 000a 10B1     		cbz	r0, .L56
 573 000c 0228     		cmp	r0, #2
 574 000e 02D0     		beq	.L57
 575 0010 03E0     		b	.L59
 576              	.L56:
 335:Src/usbh_conf.c ****     case HAL_OK :
 336:Src/usbh_conf.c ****       usb_status = USBH_OK;
 577              		.loc 1 336 0
 578 0012 0020     		movs	r0, #0
 579              	.LVL66:
 580 0014 08BD     		pop	{r3, pc}
 581              	.LVL67:
 582              	.L57:
 337:Src/usbh_conf.c ****     break;
 338:Src/usbh_conf.c ****     case HAL_ERROR :
 339:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 340:Src/usbh_conf.c ****     break;
 341:Src/usbh_conf.c ****     case HAL_BUSY :
 342:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 583              		.loc 1 342 0
 584 0016 0120     		movs	r0, #1
 585              	.LVL68:
 343:Src/usbh_conf.c ****     break;
 586              		.loc 1 343 0
ARM GAS  /tmp/ccJp40Yk.s 			page 17


 587 0018 08BD     		pop	{r3, pc}
 588              	.LVL69:
 589              	.L59:
 339:Src/usbh_conf.c ****     break;
 590              		.loc 1 339 0
 591 001a 0220     		movs	r0, #2
 592              	.LVL70:
 344:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 345:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 346:Src/usbh_conf.c ****     break;
 347:Src/usbh_conf.c ****     default :
 348:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 349:Src/usbh_conf.c ****     break;
 350:Src/usbh_conf.c ****   }
 351:Src/usbh_conf.c ****   return usb_status;  
 352:Src/usbh_conf.c **** }
 593              		.loc 1 352 0
 594 001c 08BD     		pop	{r3, pc}
 595              		.cfi_endproc
 596              	.LFE135:
 598 001e 00BF     		.section	.text.USBH_LL_GetLastXferSize,"ax",%progbits
 599              		.align	2
 600              		.global	USBH_LL_GetLastXferSize
 601              		.thumb
 602              		.thumb_func
 604              	USBH_LL_GetLastXferSize:
 605              	.LFB136:
 353:Src/usbh_conf.c **** 
 354:Src/usbh_conf.c **** /**
 355:Src/usbh_conf.c ****   * @brief  USBH_LL_GetLastXferSize 
 356:Src/usbh_conf.c ****   *         Return the last transfered packet size.
 357:Src/usbh_conf.c ****   * @param  phost: Host handle
 358:Src/usbh_conf.c ****   * @param  pipe: Pipe index   
 359:Src/usbh_conf.c ****   * @retval Packet Size
 360:Src/usbh_conf.c ****   */
 361:Src/usbh_conf.c **** uint32_t USBH_LL_GetLastXferSize  (USBH_HandleTypeDef *phost, uint8_t pipe)  
 362:Src/usbh_conf.c **** {
 606              		.loc 1 362 0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 0
 609              		@ frame_needed = 0, uses_anonymous_args = 0
 610              	.LVL71:
 611 0000 08B5     		push	{r3, lr}
 612              	.LCFI15:
 613              		.cfi_def_cfa_offset 8
 614              		.cfi_offset 3, -8
 615              		.cfi_offset 14, -4
 363:Src/usbh_conf.c ****   return HAL_HCD_HC_GetXferCount(phost->pData, pipe);
 616              		.loc 1 363 0
 617 0002 D0F89005 		ldr	r0, [r0, #1424]
 618              	.LVL72:
 619 0006 FFF7FEFF 		bl	HAL_HCD_HC_GetXferCount
 620              	.LVL73:
 364:Src/usbh_conf.c **** }
 621              		.loc 1 364 0
 622 000a 08BD     		pop	{r3, pc}
 623              		.cfi_endproc
ARM GAS  /tmp/ccJp40Yk.s 			page 18


 624              	.LFE136:
 626              		.section	.text.USBH_LL_OpenPipe,"ax",%progbits
 627              		.align	2
 628              		.global	USBH_LL_OpenPipe
 629              		.thumb
 630              		.thumb_func
 632              	USBH_LL_OpenPipe:
 633              	.LFB137:
 365:Src/usbh_conf.c **** 
 366:Src/usbh_conf.c **** /**
 367:Src/usbh_conf.c ****   * @brief  USBH_LL_OpenPipe 
 368:Src/usbh_conf.c ****   *         Open a pipe of the Low Level Driver.
 369:Src/usbh_conf.c ****   * @param  phost: Host handle
 370:Src/usbh_conf.c ****   * @param  pipe_num: Pipe index
 371:Src/usbh_conf.c ****   * @param  epnum: Endpoint Number
 372:Src/usbh_conf.c ****   * @param  dev_address: Device USB address
 373:Src/usbh_conf.c ****   * @param  speed: Device Speed 
 374:Src/usbh_conf.c ****   * @param  ep_type: Endpoint Type
 375:Src/usbh_conf.c ****   * @param  mps: Endpoint Max Packet Size                 
 376:Src/usbh_conf.c ****   * @retval USBH Status
 377:Src/usbh_conf.c ****   */
 378:Src/usbh_conf.c **** USBH_StatusTypeDef   USBH_LL_OpenPipe    (USBH_HandleTypeDef *phost, 
 379:Src/usbh_conf.c ****                                       uint8_t pipe_num,
 380:Src/usbh_conf.c ****                                       uint8_t epnum,                                      
 381:Src/usbh_conf.c ****                                       uint8_t dev_address,
 382:Src/usbh_conf.c ****                                       uint8_t speed,
 383:Src/usbh_conf.c ****                                       uint8_t ep_type,
 384:Src/usbh_conf.c ****                                       uint16_t mps)
 385:Src/usbh_conf.c **** {
 634              		.loc 1 385 0
 635              		.cfi_startproc
 636              		@ args = 12, pretend = 0, frame = 0
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638              	.LVL74:
 639 0000 10B5     		push	{r4, lr}
 640              	.LCFI16:
 641              		.cfi_def_cfa_offset 8
 642              		.cfi_offset 4, -8
 643              		.cfi_offset 14, -4
 644 0002 84B0     		sub	sp, sp, #16
 645              	.LCFI17:
 646              		.cfi_def_cfa_offset 24
 647              	.LVL75:
 386:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 387:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 388:Src/usbh_conf.c ****  
 389:Src/usbh_conf.c ****   hal_status = HAL_HCD_HC_Init(phost->pData,
 648              		.loc 1 389 0
 649 0004 D0F89005 		ldr	r0, [r0, #1424]
 650              	.LVL76:
 651 0008 BDF82040 		ldrh	r4, [sp, #32]
 652 000c 0294     		str	r4, [sp, #8]
 653 000e 9DF81C40 		ldrb	r4, [sp, #28]	@ zero_extendqisi2
 654 0012 0194     		str	r4, [sp, #4]
 655 0014 9DF81840 		ldrb	r4, [sp, #24]	@ zero_extendqisi2
 656 0018 0094     		str	r4, [sp]
 657 001a FFF7FEFF 		bl	HAL_HCD_HC_Init
ARM GAS  /tmp/ccJp40Yk.s 			page 19


 658              	.LVL77:
 390:Src/usbh_conf.c ****                                pipe_num,
 391:Src/usbh_conf.c ****                                epnum,
 392:Src/usbh_conf.c ****                                dev_address,
 393:Src/usbh_conf.c ****                                speed,
 394:Src/usbh_conf.c ****                                ep_type,
 395:Src/usbh_conf.c ****                               mps);
 396:Src/usbh_conf.c ****   switch (hal_status) {
 659              		.loc 1 396 0
 660 001e 10B1     		cbz	r0, .L65
 661 0020 0228     		cmp	r0, #2
 662 0022 02D0     		beq	.L66
 663 0024 03E0     		b	.L68
 664              	.L65:
 397:Src/usbh_conf.c ****     case HAL_OK :
 398:Src/usbh_conf.c ****       usb_status = USBH_OK;
 665              		.loc 1 398 0
 666 0026 0020     		movs	r0, #0
 667              	.LVL78:
 668 0028 02E0     		b	.L64
 669              	.LVL79:
 670              	.L66:
 399:Src/usbh_conf.c ****     break;
 400:Src/usbh_conf.c ****     case HAL_ERROR :
 401:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 402:Src/usbh_conf.c ****     break;
 403:Src/usbh_conf.c ****     case HAL_BUSY :
 404:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 671              		.loc 1 404 0
 672 002a 0120     		movs	r0, #1
 673              	.LVL80:
 405:Src/usbh_conf.c ****     break;
 674              		.loc 1 405 0
 675 002c 00E0     		b	.L64
 676              	.LVL81:
 677              	.L68:
 401:Src/usbh_conf.c ****     break;
 678              		.loc 1 401 0
 679 002e 0220     		movs	r0, #2
 680              	.LVL82:
 681              	.L64:
 406:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 407:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 408:Src/usbh_conf.c ****     break;
 409:Src/usbh_conf.c ****     default :
 410:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 411:Src/usbh_conf.c ****     break;
 412:Src/usbh_conf.c ****   }
 413:Src/usbh_conf.c ****   return usb_status; 
 414:Src/usbh_conf.c **** }
 682              		.loc 1 414 0
 683 0030 04B0     		add	sp, sp, #16
 684              	.LCFI18:
 685              		.cfi_def_cfa_offset 8
 686              		@ sp needed
 687 0032 10BD     		pop	{r4, pc}
 688              		.cfi_endproc
ARM GAS  /tmp/ccJp40Yk.s 			page 20


 689              	.LFE137:
 691              		.section	.text.USBH_LL_ClosePipe,"ax",%progbits
 692              		.align	2
 693              		.global	USBH_LL_ClosePipe
 694              		.thumb
 695              		.thumb_func
 697              	USBH_LL_ClosePipe:
 698              	.LFB138:
 415:Src/usbh_conf.c **** 
 416:Src/usbh_conf.c **** /**
 417:Src/usbh_conf.c ****   * @brief  USBH_LL_ClosePipe 
 418:Src/usbh_conf.c ****   *         Close a pipe of the Low Level Driver.
 419:Src/usbh_conf.c ****   * @param  phost: Host handle
 420:Src/usbh_conf.c ****   * @param  pipe_num: Pipe index               
 421:Src/usbh_conf.c ****   * @retval USBH Status
 422:Src/usbh_conf.c ****   */
 423:Src/usbh_conf.c **** USBH_StatusTypeDef   USBH_LL_ClosePipe   (USBH_HandleTypeDef *phost, uint8_t pipe)   
 424:Src/usbh_conf.c **** {
 699              		.loc 1 424 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 703              	.LVL83:
 704 0000 08B5     		push	{r3, lr}
 705              	.LCFI19:
 706              		.cfi_def_cfa_offset 8
 707              		.cfi_offset 3, -8
 708              		.cfi_offset 14, -4
 709              	.LVL84:
 425:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 426:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 427:Src/usbh_conf.c ****  
 428:Src/usbh_conf.c ****   hal_status = HAL_HCD_HC_Halt(phost->pData, pipe);
 710              		.loc 1 428 0
 711 0002 D0F89005 		ldr	r0, [r0, #1424]
 712              	.LVL85:
 713 0006 FFF7FEFF 		bl	HAL_HCD_HC_Halt
 714              	.LVL86:
 429:Src/usbh_conf.c ****   switch (hal_status) {
 715              		.loc 1 429 0
 716 000a 10B1     		cbz	r0, .L72
 717 000c 0228     		cmp	r0, #2
 718 000e 02D0     		beq	.L73
 719 0010 03E0     		b	.L75
 720              	.L72:
 430:Src/usbh_conf.c ****     case HAL_OK :
 431:Src/usbh_conf.c ****       usb_status = USBH_OK;
 721              		.loc 1 431 0
 722 0012 0020     		movs	r0, #0
 723              	.LVL87:
 724 0014 08BD     		pop	{r3, pc}
 725              	.LVL88:
 726              	.L73:
 432:Src/usbh_conf.c ****     break;
 433:Src/usbh_conf.c ****     case HAL_ERROR :
 434:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 435:Src/usbh_conf.c ****     break;
ARM GAS  /tmp/ccJp40Yk.s 			page 21


 436:Src/usbh_conf.c ****     case HAL_BUSY :
 437:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 727              		.loc 1 437 0
 728 0016 0120     		movs	r0, #1
 729              	.LVL89:
 438:Src/usbh_conf.c ****     break;
 730              		.loc 1 438 0
 731 0018 08BD     		pop	{r3, pc}
 732              	.LVL90:
 733              	.L75:
 434:Src/usbh_conf.c ****     break;
 734              		.loc 1 434 0
 735 001a 0220     		movs	r0, #2
 736              	.LVL91:
 439:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 440:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 441:Src/usbh_conf.c ****     break;
 442:Src/usbh_conf.c ****     default :
 443:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 444:Src/usbh_conf.c ****     break;
 445:Src/usbh_conf.c ****   }
 446:Src/usbh_conf.c ****   return usb_status;  
 447:Src/usbh_conf.c **** }
 737              		.loc 1 447 0
 738 001c 08BD     		pop	{r3, pc}
 739              		.cfi_endproc
 740              	.LFE138:
 742 001e 00BF     		.section	.text.USBH_LL_SubmitURB,"ax",%progbits
 743              		.align	2
 744              		.global	USBH_LL_SubmitURB
 745              		.thumb
 746              		.thumb_func
 748              	USBH_LL_SubmitURB:
 749              	.LFB139:
 448:Src/usbh_conf.c **** 
 449:Src/usbh_conf.c **** /**
 450:Src/usbh_conf.c ****   * @brief  USBH_LL_SubmitURB 
 451:Src/usbh_conf.c ****   *         Submit a new URB to the low level driver.
 452:Src/usbh_conf.c ****   * @param  phost: Host handle
 453:Src/usbh_conf.c ****   * @param  pipe: Pipe index    
 454:Src/usbh_conf.c ****   *         This parameter can be a value from 1 to 15
 455:Src/usbh_conf.c ****   * @param  direction : Channel number
 456:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 457:Src/usbh_conf.c ****   *           0 : Output 
 458:Src/usbh_conf.c ****   *           1 : Input
 459:Src/usbh_conf.c ****   * @param  ep_type : Endpoint Type
 460:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 461:Src/usbh_conf.c ****   *            @arg EP_TYPE_CTRL: Control type
 462:Src/usbh_conf.c ****   *            @arg EP_TYPE_ISOC: Isochrounous type
 463:Src/usbh_conf.c ****   *            @arg EP_TYPE_BULK: Bulk type
 464:Src/usbh_conf.c ****   *            @arg EP_TYPE_INTR: Interrupt type
 465:Src/usbh_conf.c ****   * @param  token : Endpoint Type
 466:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 467:Src/usbh_conf.c ****   *            @arg 0: PID_SETUP
 468:Src/usbh_conf.c ****   *            @arg 1: PID_DATA
 469:Src/usbh_conf.c ****   * @param  pbuff : pointer to URB data
 470:Src/usbh_conf.c ****   * @param  length : Length of URB data
ARM GAS  /tmp/ccJp40Yk.s 			page 22


 471:Src/usbh_conf.c ****   * @param  do_ping : activate do ping protocol (for high speed only)
 472:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 473:Src/usbh_conf.c ****   *           0 : do ping inactive 
 474:Src/usbh_conf.c ****   *           1 : do ping active 
 475:Src/usbh_conf.c ****   * @retval Status
 476:Src/usbh_conf.c ****   */
 477:Src/usbh_conf.c **** 
 478:Src/usbh_conf.c **** USBH_StatusTypeDef   USBH_LL_SubmitURB  (USBH_HandleTypeDef *phost, 
 479:Src/usbh_conf.c ****                                             uint8_t pipe, 
 480:Src/usbh_conf.c ****                                             uint8_t direction ,
 481:Src/usbh_conf.c ****                                             uint8_t ep_type,  
 482:Src/usbh_conf.c ****                                             uint8_t token, 
 483:Src/usbh_conf.c ****                                             uint8_t* pbuff, 
 484:Src/usbh_conf.c ****                                             uint16_t length,
 485:Src/usbh_conf.c ****                                             uint8_t do_ping ) 
 486:Src/usbh_conf.c **** {
 750              		.loc 1 486 0
 751              		.cfi_startproc
 752              		@ args = 16, pretend = 0, frame = 0
 753              		@ frame_needed = 0, uses_anonymous_args = 0
 754              	.LVL92:
 755 0000 10B5     		push	{r4, lr}
 756              	.LCFI20:
 757              		.cfi_def_cfa_offset 8
 758              		.cfi_offset 4, -8
 759              		.cfi_offset 14, -4
 760 0002 84B0     		sub	sp, sp, #16
 761              	.LCFI21:
 762              		.cfi_def_cfa_offset 24
 763              	.LVL93:
 487:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 488:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 489:Src/usbh_conf.c ****  
 490:Src/usbh_conf.c ****   hal_status = HAL_HCD_HC_SubmitRequest (phost->pData,
 764              		.loc 1 490 0
 765 0004 D0F89005 		ldr	r0, [r0, #1424]
 766              	.LVL94:
 767 0008 9DF82440 		ldrb	r4, [sp, #36]	@ zero_extendqisi2
 768 000c 0394     		str	r4, [sp, #12]
 769 000e BDF82040 		ldrh	r4, [sp, #32]
 770 0012 0294     		str	r4, [sp, #8]
 771 0014 079C     		ldr	r4, [sp, #28]
 772 0016 0194     		str	r4, [sp, #4]
 773 0018 9DF81840 		ldrb	r4, [sp, #24]	@ zero_extendqisi2
 774 001c 0094     		str	r4, [sp]
 775 001e FFF7FEFF 		bl	HAL_HCD_HC_SubmitRequest
 776              	.LVL95:
 491:Src/usbh_conf.c ****                                          pipe, 
 492:Src/usbh_conf.c ****                                          direction ,
 493:Src/usbh_conf.c ****                                          ep_type,  
 494:Src/usbh_conf.c ****                                          token, 
 495:Src/usbh_conf.c ****                                          pbuff, 
 496:Src/usbh_conf.c ****                                          length,
 497:Src/usbh_conf.c ****                                          do_ping);
 498:Src/usbh_conf.c ****   switch (hal_status) {
 777              		.loc 1 498 0
 778 0022 10B1     		cbz	r0, .L79
ARM GAS  /tmp/ccJp40Yk.s 			page 23


 779 0024 0228     		cmp	r0, #2
 780 0026 02D0     		beq	.L80
 781 0028 03E0     		b	.L82
 782              	.L79:
 499:Src/usbh_conf.c ****     case HAL_OK :
 500:Src/usbh_conf.c ****       usb_status = USBH_OK;
 783              		.loc 1 500 0
 784 002a 0020     		movs	r0, #0
 785              	.LVL96:
 786 002c 02E0     		b	.L78
 787              	.LVL97:
 788              	.L80:
 501:Src/usbh_conf.c ****     break;
 502:Src/usbh_conf.c ****     case HAL_ERROR :
 503:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 504:Src/usbh_conf.c ****     break;
 505:Src/usbh_conf.c ****     case HAL_BUSY :
 506:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 789              		.loc 1 506 0
 790 002e 0120     		movs	r0, #1
 791              	.LVL98:
 507:Src/usbh_conf.c ****     break;
 792              		.loc 1 507 0
 793 0030 00E0     		b	.L78
 794              	.LVL99:
 795              	.L82:
 503:Src/usbh_conf.c ****     break;
 796              		.loc 1 503 0
 797 0032 0220     		movs	r0, #2
 798              	.LVL100:
 799              	.L78:
 508:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 509:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 510:Src/usbh_conf.c ****     break;
 511:Src/usbh_conf.c ****     default :
 512:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 513:Src/usbh_conf.c ****     break;
 514:Src/usbh_conf.c ****   }
 515:Src/usbh_conf.c ****   return usb_status;  
 516:Src/usbh_conf.c **** }
 800              		.loc 1 516 0
 801 0034 04B0     		add	sp, sp, #16
 802              	.LCFI22:
 803              		.cfi_def_cfa_offset 8
 804              		@ sp needed
 805 0036 10BD     		pop	{r4, pc}
 806              		.cfi_endproc
 807              	.LFE139:
 809              		.section	.text.USBH_LL_GetURBState,"ax",%progbits
 810              		.align	2
 811              		.global	USBH_LL_GetURBState
 812              		.thumb
 813              		.thumb_func
 815              	USBH_LL_GetURBState:
 816              	.LFB140:
 517:Src/usbh_conf.c **** 
 518:Src/usbh_conf.c **** /**
ARM GAS  /tmp/ccJp40Yk.s 			page 24


 519:Src/usbh_conf.c ****   * @brief  USBH_LL_GetURBState 
 520:Src/usbh_conf.c ****   *         Get a URB state from the low level driver.
 521:Src/usbh_conf.c ****   * @param  phost: Host handle
 522:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 523:Src/usbh_conf.c ****   *         This parameter can be a value from 1 to 15
 524:Src/usbh_conf.c ****   * @retval URB state
 525:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 526:Src/usbh_conf.c ****   *            @arg URB_IDLE
 527:Src/usbh_conf.c ****   *            @arg URB_DONE
 528:Src/usbh_conf.c ****   *            @arg URB_NOTREADY
 529:Src/usbh_conf.c ****   *            @arg URB_NYET 
 530:Src/usbh_conf.c ****   *            @arg URB_ERROR  
 531:Src/usbh_conf.c ****   *            @arg URB_STALL      
 532:Src/usbh_conf.c ****   */
 533:Src/usbh_conf.c **** USBH_URBStateTypeDef  USBH_LL_GetURBState (USBH_HandleTypeDef *phost, uint8_t pipe) 
 534:Src/usbh_conf.c **** {
 817              		.loc 1 534 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821              	.LVL101:
 822 0000 08B5     		push	{r3, lr}
 823              	.LCFI23:
 824              		.cfi_def_cfa_offset 8
 825              		.cfi_offset 3, -8
 826              		.cfi_offset 14, -4
 535:Src/usbh_conf.c ****   return (USBH_URBStateTypeDef)HAL_HCD_HC_GetURBState (phost->pData, pipe);
 827              		.loc 1 535 0
 828 0002 D0F89005 		ldr	r0, [r0, #1424]
 829              	.LVL102:
 830 0006 FFF7FEFF 		bl	HAL_HCD_HC_GetURBState
 831              	.LVL103:
 536:Src/usbh_conf.c **** }
 832              		.loc 1 536 0
 833 000a 08BD     		pop	{r3, pc}
 834              		.cfi_endproc
 835              	.LFE140:
 837              		.section	.text.USBH_LL_DriverVBUS,"ax",%progbits
 838              		.align	2
 839              		.global	USBH_LL_DriverVBUS
 840              		.thumb
 841              		.thumb_func
 843              	USBH_LL_DriverVBUS:
 844              	.LFB141:
 537:Src/usbh_conf.c **** 
 538:Src/usbh_conf.c **** /**
 539:Src/usbh_conf.c ****   * @brief  USBH_LL_DriverVBUS 
 540:Src/usbh_conf.c ****   *         Drive VBUS.
 541:Src/usbh_conf.c ****   * @param  phost: Host handle
 542:Src/usbh_conf.c ****   * @param  state : VBUS state
 543:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 544:Src/usbh_conf.c ****   *           0 : VBUS Active 
 545:Src/usbh_conf.c ****   *           1 : VBUS Inactive
 546:Src/usbh_conf.c ****   * @retval Status
 547:Src/usbh_conf.c ****   */
 548:Src/usbh_conf.c **** USBH_StatusTypeDef  USBH_LL_DriverVBUS (USBH_HandleTypeDef *phost, uint8_t state)
 549:Src/usbh_conf.c **** { 
ARM GAS  /tmp/ccJp40Yk.s 			page 25


 845              		.loc 1 549 0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849              	.LVL104:
 850 0000 08B5     		push	{r3, lr}
 851              	.LCFI24:
 852              		.cfi_def_cfa_offset 8
 853              		.cfi_offset 3, -8
 854              		.cfi_offset 14, -4
 550:Src/usbh_conf.c **** 
 551:Src/usbh_conf.c ****   /* USER CODE BEGIN 0 */
 552:Src/usbh_conf.c ****   /* USER CODE END 0*/     
 553:Src/usbh_conf.c ****   if (phost->id == HOST_FS) 
 554:Src/usbh_conf.c ****   { 
 555:Src/usbh_conf.c ****     if (state == 0)
 556:Src/usbh_conf.c ****     {   
 557:Src/usbh_conf.c ****       /* Drive high Charge pump */
 558:Src/usbh_conf.c ****       /* ToDo: Add IOE driver control */	   
 559:Src/usbh_conf.c ****       /* USER CODE BEGIN DRIVE_HIGH_CHARGE_FOR_FS */
 560:Src/usbh_conf.c ****     
 561:Src/usbh_conf.c ****       /* USER CODE END DRIVE_HIGH_CHARGE_FOR_FS */ 
 562:Src/usbh_conf.c ****     } 
 563:Src/usbh_conf.c ****     else
 564:Src/usbh_conf.c ****     {
 565:Src/usbh_conf.c ****       /* Drive low Charge pump */
 566:Src/usbh_conf.c ****       /* ToDo: Add IOE driver control */	
 567:Src/usbh_conf.c ****       /* USER CODE BEGIN DRIVE_LOW_CHARGE_FOR_FS */
 568:Src/usbh_conf.c ****    
 569:Src/usbh_conf.c ****       /* USER CODE END DRIVE_LOW_CHARGE_FOR_FS */ 
 570:Src/usbh_conf.c ****     }
 571:Src/usbh_conf.c ****   }	
 572:Src/usbh_conf.c ****   HAL_Delay(200);
 855              		.loc 1 572 0
 856 0002 C820     		movs	r0, #200
 857              	.LVL105:
 858 0004 FFF7FEFF 		bl	HAL_Delay
 859              	.LVL106:
 573:Src/usbh_conf.c ****   return USBH_OK;  
 574:Src/usbh_conf.c **** }
 860              		.loc 1 574 0
 861 0008 0020     		movs	r0, #0
 862 000a 08BD     		pop	{r3, pc}
 863              		.cfi_endproc
 864              	.LFE141:
 866              		.section	.text.USBH_LL_SetToggle,"ax",%progbits
 867              		.align	2
 868              		.global	USBH_LL_SetToggle
 869              		.thumb
 870              		.thumb_func
 872              	USBH_LL_SetToggle:
 873              	.LFB142:
 575:Src/usbh_conf.c **** 
 576:Src/usbh_conf.c **** /**
 577:Src/usbh_conf.c ****   * @brief  USBH_LL_SetToggle 
 578:Src/usbh_conf.c ****   *         Set toggle for a pipe.
 579:Src/usbh_conf.c ****   * @param  phost: Host handle
ARM GAS  /tmp/ccJp40Yk.s 			page 26


 580:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 581:Src/usbh_conf.c ****   * @param  pipe_num: Pipe index     
 582:Src/usbh_conf.c ****   * @param  toggle: toggle (0/1)
 583:Src/usbh_conf.c ****   * @retval Status
 584:Src/usbh_conf.c ****   */
 585:Src/usbh_conf.c **** USBH_StatusTypeDef   USBH_LL_SetToggle   (USBH_HandleTypeDef *phost, uint8_t pipe, uint8_t toggle) 
 586:Src/usbh_conf.c **** {
 874              		.loc 1 586 0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 0
 877              		@ frame_needed = 0, uses_anonymous_args = 0
 878              		@ link register save eliminated.
 879              	.LVL107:
 880 0000 10B4     		push	{r4}
 881              	.LCFI25:
 882              		.cfi_def_cfa_offset 4
 883              		.cfi_offset 4, -4
 587:Src/usbh_conf.c ****   HCD_HandleTypeDef *pHandle;
 588:Src/usbh_conf.c ****   pHandle = phost->pData;
 884              		.loc 1 588 0
 885 0002 D0F89005 		ldr	r0, [r0, #1424]
 886              	.LVL108:
 589:Src/usbh_conf.c ****   
 590:Src/usbh_conf.c ****   if(pHandle->hc[pipe].ep_is_in)
 887              		.loc 1 590 0
 888 0006 01EB8104 		add	r4, r1, r1, lsl #2
 889 000a E300     		lsls	r3, r4, #3
 890 000c 1C46     		mov	r4, r3
 891 000e 0344     		add	r3, r3, r0
 892 0010 93F83B30 		ldrb	r3, [r3, #59]	@ zero_extendqisi2
 893 0014 23B1     		cbz	r3, .L89
 591:Src/usbh_conf.c ****   {
 592:Src/usbh_conf.c ****     pHandle->hc[pipe].toggle_in = toggle;
 894              		.loc 1 592 0
 895 0016 2346     		mov	r3, r4
 896 0018 0344     		add	r3, r3, r0
 897 001a 83F85020 		strb	r2, [r3, #80]
 898 001e 05E0     		b	.L90
 899              	.L89:
 593:Src/usbh_conf.c ****   }
 594:Src/usbh_conf.c ****   else
 595:Src/usbh_conf.c ****   {
 596:Src/usbh_conf.c ****     pHandle->hc[pipe].toggle_out = toggle;
 900              		.loc 1 596 0
 901 0020 01EB8101 		add	r1, r1, r1, lsl #2
 902              	.LVL109:
 903 0024 CB00     		lsls	r3, r1, #3
 904 0026 0344     		add	r3, r3, r0
 905 0028 83F85120 		strb	r2, [r3, #81]
 906              	.L90:
 597:Src/usbh_conf.c ****   }
 598:Src/usbh_conf.c ****   
 599:Src/usbh_conf.c ****   return USBH_OK; 
 600:Src/usbh_conf.c **** }
 907              		.loc 1 600 0
 908 002c 0020     		movs	r0, #0
 909              	.LVL110:
ARM GAS  /tmp/ccJp40Yk.s 			page 27


 910 002e 5DF8044B 		ldr	r4, [sp], #4
 911              	.LCFI26:
 912              		.cfi_restore 4
 913              		.cfi_def_cfa_offset 0
 914 0032 7047     		bx	lr
 915              		.cfi_endproc
 916              	.LFE142:
 918              		.section	.text.USBH_LL_GetToggle,"ax",%progbits
 919              		.align	2
 920              		.global	USBH_LL_GetToggle
 921              		.thumb
 922              		.thumb_func
 924              	USBH_LL_GetToggle:
 925              	.LFB143:
 601:Src/usbh_conf.c **** 
 602:Src/usbh_conf.c **** /**
 603:Src/usbh_conf.c ****   * @brief  USBH_LL_GetToggle 
 604:Src/usbh_conf.c ****   *         Return the current toggle of a pipe.
 605:Src/usbh_conf.c ****   * @param  phost: Host handle
 606:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 607:Src/usbh_conf.c ****   * @retval toggle (0/1)
 608:Src/usbh_conf.c ****   */
 609:Src/usbh_conf.c **** uint8_t  USBH_LL_GetToggle   (USBH_HandleTypeDef *phost, uint8_t pipe)   
 610:Src/usbh_conf.c **** {
 926              		.loc 1 610 0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 0
 929              		@ frame_needed = 0, uses_anonymous_args = 0
 930              		@ link register save eliminated.
 931              	.LVL111:
 611:Src/usbh_conf.c ****   uint8_t toggle = 0;
 612:Src/usbh_conf.c ****   HCD_HandleTypeDef *pHandle;
 613:Src/usbh_conf.c ****   pHandle = phost->pData; 
 932              		.loc 1 613 0
 933 0000 D0F89025 		ldr	r2, [r0, #1424]
 934              	.LVL112:
 614:Src/usbh_conf.c ****   
 615:Src/usbh_conf.c ****   if(pHandle->hc[pipe].ep_is_in)
 935              		.loc 1 615 0
 936 0004 01EB8100 		add	r0, r1, r1, lsl #2
 937              	.LVL113:
 938 0008 C300     		lsls	r3, r0, #3
 939 000a 1846     		mov	r0, r3
 940 000c 1344     		add	r3, r3, r2
 941 000e 93F83B30 		ldrb	r3, [r3, #59]	@ zero_extendqisi2
 942 0012 23B1     		cbz	r3, .L93
 616:Src/usbh_conf.c ****   {
 617:Src/usbh_conf.c ****     toggle = pHandle->hc[pipe].toggle_in;
 943              		.loc 1 617 0
 944 0014 0346     		mov	r3, r0
 945 0016 1344     		add	r3, r3, r2
 946 0018 93F85000 		ldrb	r0, [r3, #80]	@ zero_extendqisi2
 947              	.LVL114:
 948 001c 7047     		bx	lr
 949              	.LVL115:
 950              	.L93:
 618:Src/usbh_conf.c ****   }
ARM GAS  /tmp/ccJp40Yk.s 			page 28


 619:Src/usbh_conf.c ****   else
 620:Src/usbh_conf.c ****   {
 621:Src/usbh_conf.c ****     toggle = pHandle->hc[pipe].toggle_out;
 951              		.loc 1 621 0
 952 001e 01EB8101 		add	r1, r1, r1, lsl #2
 953              	.LVL116:
 954 0022 CB00     		lsls	r3, r1, #3
 955 0024 1344     		add	r3, r3, r2
 956 0026 93F85100 		ldrb	r0, [r3, #81]	@ zero_extendqisi2
 957              	.LVL117:
 622:Src/usbh_conf.c ****   }
 623:Src/usbh_conf.c ****   return toggle; 
 624:Src/usbh_conf.c **** }
 958              		.loc 1 624 0
 959 002a 7047     		bx	lr
 960              		.cfi_endproc
 961              	.LFE143:
 963              		.section	.text.USBH_Delay,"ax",%progbits
 964              		.align	2
 965              		.global	USBH_Delay
 966              		.thumb
 967              		.thumb_func
 969              	USBH_Delay:
 970              	.LFB144:
 625:Src/usbh_conf.c **** 
 626:Src/usbh_conf.c **** /**
 627:Src/usbh_conf.c ****   * @brief  USBH_Delay 
 628:Src/usbh_conf.c ****   *         Delay routine for the USB Host Library
 629:Src/usbh_conf.c ****   * @param  Delay: Delay in ms
 630:Src/usbh_conf.c ****   * @retval None
 631:Src/usbh_conf.c ****   */
 632:Src/usbh_conf.c **** void  USBH_Delay (uint32_t Delay)
 633:Src/usbh_conf.c **** {
 971              		.loc 1 633 0
 972              		.cfi_startproc
 973              		@ args = 0, pretend = 0, frame = 0
 974              		@ frame_needed = 0, uses_anonymous_args = 0
 975              	.LVL118:
 976 0000 08B5     		push	{r3, lr}
 977              	.LCFI27:
 978              		.cfi_def_cfa_offset 8
 979              		.cfi_offset 3, -8
 980              		.cfi_offset 14, -4
 634:Src/usbh_conf.c ****   HAL_Delay(Delay);  
 981              		.loc 1 634 0
 982 0002 FFF7FEFF 		bl	HAL_Delay
 983              	.LVL119:
 984 0006 08BD     		pop	{r3, pc}
 985              		.cfi_endproc
 986              	.LFE144:
 988              		.comm	hhcd_USB_OTG_FS,664,4
 989              		.section	.rodata.str1.4,"aMS",%progbits,1
 990              		.align	2
 991              	.LC0:
 992 0000 5372632F 		.ascii	"Src/usbh_conf.c\000"
 992      75736268 
 992      5F636F6E 
ARM GAS  /tmp/ccJp40Yk.s 			page 29


 992      662E6300 
 993              		.text
 994              	.Letext0:
 995              		.file 2 "/home/ada/Downloads/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_t
 996              		.file 3 "/home/ada/Downloads/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 997              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 998              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 999              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1000              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1001              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usb.h"
 1002              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_hcd.h"
 1003              		.file 10 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 1004              		.file 11 "Drivers/CMSIS/Include/core_cm4.h"
 1005              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1006              		.file 13 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_core.h"
 1007              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccJp40Yk.s 			page 30


DEFINED SYMBOLS
                            *ABS*:00000000 usbh_conf.c
     /tmp/ccJp40Yk.s:22     .text.HAL_HCD_MspInit:00000000 $t
     /tmp/ccJp40Yk.s:27     .text.HAL_HCD_MspInit:00000000 HAL_HCD_MspInit
     /tmp/ccJp40Yk.s:110    .text.HAL_HCD_MspInit:00000060 $d
     /tmp/ccJp40Yk.s:116    .text.HAL_HCD_MspDeInit:00000000 $t
     /tmp/ccJp40Yk.s:121    .text.HAL_HCD_MspDeInit:00000000 HAL_HCD_MspDeInit
     /tmp/ccJp40Yk.s:157    .text.HAL_HCD_MspDeInit:00000028 $d
     /tmp/ccJp40Yk.s:163    .text.HAL_HCD_SOF_Callback:00000000 $t
     /tmp/ccJp40Yk.s:168    .text.HAL_HCD_SOF_Callback:00000000 HAL_HCD_SOF_Callback
     /tmp/ccJp40Yk.s:190    .text.HAL_HCD_Connect_Callback:00000000 $t
     /tmp/ccJp40Yk.s:195    .text.HAL_HCD_Connect_Callback:00000000 HAL_HCD_Connect_Callback
     /tmp/ccJp40Yk.s:217    .text.HAL_HCD_Disconnect_Callback:00000000 $t
     /tmp/ccJp40Yk.s:222    .text.HAL_HCD_Disconnect_Callback:00000000 HAL_HCD_Disconnect_Callback
     /tmp/ccJp40Yk.s:244    .text.HAL_HCD_HC_NotifyURBChange_Callback:00000000 $t
     /tmp/ccJp40Yk.s:249    .text.HAL_HCD_HC_NotifyURBChange_Callback:00000000 HAL_HCD_HC_NotifyURBChange_Callback
     /tmp/ccJp40Yk.s:262    .text.USBH_LL_Init:00000000 $t
     /tmp/ccJp40Yk.s:267    .text.USBH_LL_Init:00000000 USBH_LL_Init
     /tmp/ccJp40Yk.s:341    .text.USBH_LL_Init:00000054 $d
                            *COM*:00000298 hhcd_USB_OTG_FS
     /tmp/ccJp40Yk.s:347    .text.USBH_LL_DeInit:00000000 $t
     /tmp/ccJp40Yk.s:352    .text.USBH_LL_DeInit:00000000 USBH_LL_DeInit
     /tmp/ccJp40Yk.s:398    .text.USBH_LL_Start:00000000 $t
     /tmp/ccJp40Yk.s:403    .text.USBH_LL_Start:00000000 USBH_LL_Start
     /tmp/ccJp40Yk.s:449    .text.USBH_LL_Stop:00000000 $t
     /tmp/ccJp40Yk.s:454    .text.USBH_LL_Stop:00000000 USBH_LL_Stop
     /tmp/ccJp40Yk.s:500    .text.USBH_LL_GetSpeed:00000000 $t
     /tmp/ccJp40Yk.s:505    .text.USBH_LL_GetSpeed:00000000 USBH_LL_GetSpeed
     /tmp/ccJp40Yk.s:548    .text.USBH_LL_ResetPort:00000000 $t
     /tmp/ccJp40Yk.s:553    .text.USBH_LL_ResetPort:00000000 USBH_LL_ResetPort
     /tmp/ccJp40Yk.s:599    .text.USBH_LL_GetLastXferSize:00000000 $t
     /tmp/ccJp40Yk.s:604    .text.USBH_LL_GetLastXferSize:00000000 USBH_LL_GetLastXferSize
     /tmp/ccJp40Yk.s:627    .text.USBH_LL_OpenPipe:00000000 $t
     /tmp/ccJp40Yk.s:632    .text.USBH_LL_OpenPipe:00000000 USBH_LL_OpenPipe
     /tmp/ccJp40Yk.s:692    .text.USBH_LL_ClosePipe:00000000 $t
     /tmp/ccJp40Yk.s:697    .text.USBH_LL_ClosePipe:00000000 USBH_LL_ClosePipe
     /tmp/ccJp40Yk.s:743    .text.USBH_LL_SubmitURB:00000000 $t
     /tmp/ccJp40Yk.s:748    .text.USBH_LL_SubmitURB:00000000 USBH_LL_SubmitURB
     /tmp/ccJp40Yk.s:810    .text.USBH_LL_GetURBState:00000000 $t
     /tmp/ccJp40Yk.s:815    .text.USBH_LL_GetURBState:00000000 USBH_LL_GetURBState
     /tmp/ccJp40Yk.s:838    .text.USBH_LL_DriverVBUS:00000000 $t
     /tmp/ccJp40Yk.s:843    .text.USBH_LL_DriverVBUS:00000000 USBH_LL_DriverVBUS
     /tmp/ccJp40Yk.s:867    .text.USBH_LL_SetToggle:00000000 $t
     /tmp/ccJp40Yk.s:872    .text.USBH_LL_SetToggle:00000000 USBH_LL_SetToggle
     /tmp/ccJp40Yk.s:919    .text.USBH_LL_GetToggle:00000000 $t
     /tmp/ccJp40Yk.s:924    .text.USBH_LL_GetToggle:00000000 USBH_LL_GetToggle
     /tmp/ccJp40Yk.s:964    .text.USBH_Delay:00000000 $t
     /tmp/ccJp40Yk.s:969    .text.USBH_Delay:00000000 USBH_Delay
     /tmp/ccJp40Yk.s:990    .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
ARM GAS  /tmp/ccJp40Yk.s 			page 31


USBH_LL_IncTimer
USBH_LL_Connect
USBH_LL_Disconnect
HAL_HCD_Init
_Error_Handler
HAL_HCD_GetCurrentFrame
USBH_LL_SetTimer
HAL_HCD_DeInit
HAL_HCD_Start
HAL_HCD_Stop
HAL_HCD_GetCurrentSpeed
HAL_HCD_ResetPort
HAL_HCD_HC_GetXferCount
HAL_HCD_HC_Init
HAL_HCD_HC_Halt
HAL_HCD_HC_SubmitRequest
HAL_HCD_HC_GetURBState
HAL_Delay
