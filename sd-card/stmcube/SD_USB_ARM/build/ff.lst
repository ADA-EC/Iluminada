ARM GAS  /tmp/ccTP8DMx.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"ff.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.ld_word,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	ld_word:
  27              	.LFB124:
  28              		.file 1 "Middlewares/Third_Party/FatFs/src/ff.c"
   1:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------------------------------------------/
   2:Middlewares/Third_Party/FatFs/src/ff.c **** /  FatFs - Generic FAT file system module  R0.12c                             /
   3:Middlewares/Third_Party/FatFs/src/ff.c **** /-----------------------------------------------------------------------------/
   4:Middlewares/Third_Party/FatFs/src/ff.c **** /
   5:Middlewares/Third_Party/FatFs/src/ff.c **** / Copyright (C) 2017, ChaN, all right reserved.
   6:Middlewares/Third_Party/FatFs/src/ff.c **** /
   7:Middlewares/Third_Party/FatFs/src/ff.c **** / FatFs module is an open source software. Redistribution and use of FatFs in
   8:Middlewares/Third_Party/FatFs/src/ff.c **** / source and binary forms, with or without modification, are permitted provided
   9:Middlewares/Third_Party/FatFs/src/ff.c **** / that the following condition is met:
  10:Middlewares/Third_Party/FatFs/src/ff.c **** /
  11:Middlewares/Third_Party/FatFs/src/ff.c **** / 1. Redistributions of source code must retain the above copyright notice,
  12:Middlewares/Third_Party/FatFs/src/ff.c **** /    this condition and the following disclaimer.
  13:Middlewares/Third_Party/FatFs/src/ff.c **** /
  14:Middlewares/Third_Party/FatFs/src/ff.c **** / This software is provided by the copyright holder and contributors "AS IS"
  15:Middlewares/Third_Party/FatFs/src/ff.c **** / and any warranties related to this software are DISCLAIMED.
  16:Middlewares/Third_Party/FatFs/src/ff.c **** / The copyright owner or contributors be NOT LIABLE for any damages caused
  17:Middlewares/Third_Party/FatFs/src/ff.c **** / by use of this software.
  18:Middlewares/Third_Party/FatFs/src/ff.c **** /----------------------------------------------------------------------------*/
  19:Middlewares/Third_Party/FatFs/src/ff.c **** 
  20:Middlewares/Third_Party/FatFs/src/ff.c **** 
  21:Middlewares/Third_Party/FatFs/src/ff.c **** #include "ff.h"			/* Declarations of FatFs API */
  22:Middlewares/Third_Party/FatFs/src/ff.c **** #include "diskio.h"		/* Declarations of device I/O functions */
  23:Middlewares/Third_Party/FatFs/src/ff.c **** 
  24:Middlewares/Third_Party/FatFs/src/ff.c **** 
  25:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
  26:Middlewares/Third_Party/FatFs/src/ff.c **** 
  27:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Definitions
  28:Middlewares/Third_Party/FatFs/src/ff.c **** 
  29:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
  30:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccTP8DMx.s 			page 2


  31:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FATFS != 68300	/* Revision ID */
  32:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong include file (ff.h).
  33:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
  34:Middlewares/Third_Party/FatFs/src/ff.c **** 
  35:Middlewares/Third_Party/FatFs/src/ff.c **** 
  36:Middlewares/Third_Party/FatFs/src/ff.c **** /* DBCS code ranges and SBCS upper conversion tables */
  37:Middlewares/Third_Party/FatFs/src/ff.c **** 
  38:Middlewares/Third_Party/FatFs/src/ff.c **** #if _CODE_PAGE == 932	/* Japanese Shift-JIS */
  39:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81	/* DBC 1st byte range 1 start */
  40:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0x9F	/* DBC 1st byte range 1 end */
  41:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF2S	0xE0	/* DBC 1st byte range 2 start */
  42:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF2E	0xFC	/* DBC 1st byte range 2 end */
  43:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40	/* DBC 2nd byte range 1 start */
  44:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E	/* DBC 2nd byte range 1 end */
  45:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x80	/* DBC 2nd byte range 2 start */
  46:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFC	/* DBC 2nd byte range 2 end */
  47:Middlewares/Third_Party/FatFs/src/ff.c **** 
  48:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 936	/* Simplified Chinese GBK */
  49:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
  50:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
  51:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40
  52:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E
  53:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x80
  54:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFE
  55:Middlewares/Third_Party/FatFs/src/ff.c **** 
  56:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 949	/* Korean */
  57:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
  58:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
  59:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x41
  60:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x5A
  61:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x61
  62:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0x7A
  63:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS3S	0x81
  64:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS3E	0xFE
  65:Middlewares/Third_Party/FatFs/src/ff.c **** 
  66:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 950	/* Traditional Chinese Big5 */
  67:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
  68:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
  69:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40
  70:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E
  71:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0xA1
  72:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFE
  73:Middlewares/Third_Party/FatFs/src/ff.c **** 
  74:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 437	/* U.S. */
  75:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
  76:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x45,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
  77:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
  78:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
  79:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
  80:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
  81:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
  82:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
  83:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
  84:Middlewares/Third_Party/FatFs/src/ff.c **** 
  85:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 720	/* Arabic */
  86:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
  87:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
ARM GAS  /tmp/ccTP8DMx.s 			page 3


  88:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
  89:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
  90:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
  91:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
  92:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
  93:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
  94:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
  95:Middlewares/Third_Party/FatFs/src/ff.c **** 
  96:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 737	/* Greek */
  97:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
  98:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
  99:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x93,0x94,0x95,0x96,0x97,0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87, \
 100:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0xAA,0x92,0x93,0x94,0x95,0x96, \
 101:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 102:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 103:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 104:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x97,0xEA,0xEB,0xEC,0xE4,0xED,0xEE,0xEF,0xF5,0xF0,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 105:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 106:Middlewares/Third_Party/FatFs/src/ff.c **** 
 107:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 771	/* KBL */
 108:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 109:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 110:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 111:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 112:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 113:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 114:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDC,0xDE,0xDE, \
 115:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 116:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFE,0xFF}
 117:Middlewares/Third_Party/FatFs/src/ff.c **** 
 118:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 775	/* Baltic */
 119:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 120:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x91,0xA0,0x8E,0x95,0x8F,0x80,0xAD,0xED,0x8A,0x8A,0xA1,0x8D,0x8E,0x8F, \
 121:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0xE2,0x99,0x95,0x96,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \
 122:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xE0,0xA3,0xA3,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 123:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 124:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 125:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xB6,0xB7,0xB8,0xBD,0xBE,0xC6,0xC7,0xA5,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 126:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE3,0xE8,0xE8,0xEA,0xEA,0xEE,0xED,0xEE,0xEF, \
 127:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 128:Middlewares/Third_Party/FatFs/src/ff.c **** 
 129:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 850	/* Latin 1 */
 130:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 131:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x43,0x55,0x45,0x41,0x41,0x41,0x41,0x43,0x45,0x45,0x45,0x49,0x49,0x49,0x41,0x41, \
 132:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x45,0x92,0x92,0x4F,0x4F,0x4F,0x55,0x55,0x59,0x4F,0x55,0x4F,0x9C,0x4F,0x9E,0x9F, \
 133:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 134:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0x41,0x41,0x41,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 135:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0x41,0x41,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 136:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD1,0xD1,0x45,0x45,0x45,0x49,0x49,0x49,0x49,0xD9,0xDA,0xDB,0xDC,0xDD,0x49,0xDF, \
 137:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x4F,0xE1,0x4F,0x4F,0x4F,0x4F,0xE6,0xE8,0xE8,0x55,0x55,0x55,0x59,0x59,0xEE,0xEF, \
 138:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 139:Middlewares/Third_Party/FatFs/src/ff.c **** 
 140:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 852	/* Latin 2 */
 141:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 142:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xDE,0x8F,0x80,0x9D,0xD3,0x8A,0x8A,0xD7,0x8D,0x8E,0x8F, \
 143:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x91,0xE2,0x99,0x95,0x95,0x97,0x97,0x99,0x9A,0x9B,0x9B,0x9D,0x9E,0xAC, \
 144:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA4,0xA4,0xA6,0xA6,0xA8,0xA8,0xAA,0x8D,0xAC,0xB8,0xAE,0xAF, \
ARM GAS  /tmp/ccTP8DMx.s 			page 4


 145:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBD,0xBF, \
 146:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC6,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 147:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD1,0xD1,0xD2,0xD3,0xD2,0xD5,0xD6,0xD7,0xB7,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 148:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE3,0xD5,0xE6,0xE6,0xE8,0xE9,0xE8,0xEB,0xED,0xED,0xDD,0xEF, \
 149:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xEB,0xFC,0xFC,0xFE,0xFF}
 150:Middlewares/Third_Party/FatFs/src/ff.c **** 
 151:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 855	/* Cyrillic */
 152:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 153:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x81,0x81,0x83,0x83,0x85,0x85,0x87,0x87,0x89,0x89,0x8B,0x8B,0x8D,0x8D,0x8F,0x8F, \
 154:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x91,0x91,0x93,0x93,0x95,0x95,0x97,0x97,0x99,0x99,0x9B,0x9B,0x9D,0x9D,0x9F,0x9F, \
 155:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA1,0xA1,0xA3,0xA3,0xA5,0xA5,0xA7,0xA7,0xA9,0xA9,0xAB,0xAB,0xAD,0xAD,0xAE,0xAF, \
 156:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB6,0xB6,0xB8,0xB8,0xB9,0xBA,0xBB,0xBC,0xBE,0xBE,0xBF, \
 157:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 158:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD1,0xD1,0xD3,0xD3,0xD5,0xD5,0xD7,0xD7,0xDD,0xD9,0xDA,0xDB,0xDC,0xDD,0xE0,0xDF, \
 159:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE2,0xE2,0xE4,0xE4,0xE6,0xE6,0xE8,0xE8,0xEA,0xEA,0xEC,0xEC,0xEE,0xEE,0xEF, \
 160:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFD,0xFE,0xFF}
 161:Middlewares/Third_Party/FatFs/src/ff.c **** 
 162:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 857	/* Turkish */
 163:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 164:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0x49,0x8E,0x8F, \
 165:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0xE2,0x99,0xE3,0xEA,0xEB,0x98,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9E, \
 166:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA6,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 167:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 168:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 169:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0x49,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 170:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xDE,0xED,0xEE,0xEF, \
 171:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 172:Middlewares/Third_Party/FatFs/src/ff.c **** 
 173:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 860	/* Portuguese */
 174:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 175:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x8F,0x8E,0x91,0x86,0x80,0x89,0x89,0x92,0x8B,0x8C,0x98,0x8E,0x8F, \
 176:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x8C,0x99,0xA9,0x96,0x9D,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 177:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x86,0x8B,0x9F,0x96,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 178:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 179:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 180:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 181:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 182:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 183:Middlewares/Third_Party/FatFs/src/ff.c **** 
 184:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 861	/* Icelandic */
 185:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 186:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x8B,0x8B,0x8D,0x8E,0x8F, \
 187:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x8D,0x55,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \
 188:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA4,0xA5,0xA6,0xA7,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 189:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 190:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 191:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 192:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 193:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 194:Middlewares/Third_Party/FatFs/src/ff.c **** 
 195:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 862	/* Hebrew */
 196:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 197:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 198:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 199:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 200:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 201:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
ARM GAS  /tmp/ccTP8DMx.s 			page 5


 202:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 203:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 204:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 205:Middlewares/Third_Party/FatFs/src/ff.c **** 
 206:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 863	/* Canadian-French */
 207:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 208:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x43,0x55,0x45,0x41,0x41,0x41,0x86,0x43,0x45,0x45,0x45,0x49,0x49,0x8D,0x41,0x8F, \
 209:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x45,0x45,0x45,0x4F,0x45,0x49,0x55,0x55,0x98,0x4F,0x55,0x9B,0x9C,0x55,0x55,0x9F, \
 210:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0x4F,0x55,0xA4,0xA5,0xA6,0xA7,0x49,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 211:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 212:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 213:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 214:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 215:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 216:Middlewares/Third_Party/FatFs/src/ff.c **** 
 217:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 864	/* Arabic */
 218:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 219:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x45,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
 220:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 221:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 222:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 223:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 224:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 225:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 226:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 227:Middlewares/Third_Party/FatFs/src/ff.c **** 
 228:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 865	/* Nordic */
 229:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 230:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
 231:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 232:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 233:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 234:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 235:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 236:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 237:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 238:Middlewares/Third_Party/FatFs/src/ff.c **** 
 239:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 866	/* Russian */
 240:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 241:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 242:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 243:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 244:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 245:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 246:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 247:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 248:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 249:Middlewares/Third_Party/FatFs/src/ff.c **** 
 250:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 869	/* Greek 2 */
 251:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 252:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 253:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x86,0x9C,0x8D,0x8F,0x90, \
 254:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x91,0x90,0x92,0x95,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 255:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 256:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 257:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xA4,0xA5,0xA6,0xD9,0xDA,0xDB,0xDC,0xA7,0xA8,0xDF, \
 258:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA9,0xAA,0xAC,0xAD,0xB5,0xB6,0xB7,0xB8,0xBD,0xBE,0xC6,0xC7,0xCF,0xCF,0xD0,0xEF, \
ARM GAS  /tmp/ccTP8DMx.s 			page 6


 259:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xD1,0xD2,0xD3,0xF5,0xD4,0xF7,0xF8,0xF9,0xD5,0x96,0x95,0x98,0xFE,0xFF}
 260:Middlewares/Third_Party/FatFs/src/ff.c **** 
 261:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1	/* ASCII (for only non-LFN cfg) */
 262:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
 263:Middlewares/Third_Party/FatFs/src/ff.c **** #error Cannot enable LFN without valid code page.
 264:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 265:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 266:Middlewares/Third_Party/FatFs/src/ff.c **** 
 267:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 268:Middlewares/Third_Party/FatFs/src/ff.c **** #error Unknown code page
 269:Middlewares/Third_Party/FatFs/src/ff.c **** 
 270:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 271:Middlewares/Third_Party/FatFs/src/ff.c **** 
 272:Middlewares/Third_Party/FatFs/src/ff.c **** 
 273:Middlewares/Third_Party/FatFs/src/ff.c **** /* Character code support macros */
 274:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsUpper(c)	(((c)>='A')&&((c)<='Z'))
 275:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsLower(c)	(((c)>='a')&&((c)<='z'))
 276:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDigit(c)	(((c)>='0')&&((c)<='9'))
 277:Middlewares/Third_Party/FatFs/src/ff.c **** 
 278:Middlewares/Third_Party/FatFs/src/ff.c **** #if _DF1S != 0	/* Code page is DBCS */
 279:Middlewares/Third_Party/FatFs/src/ff.c **** 
 280:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _DF2S	/* Two 1st byte areas */
 281:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	(((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E) || ((BYTE)(c) >= _DF2S && (BYTE)(c) 
 282:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* One 1st byte area */
 283:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E)
 284:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 285:Middlewares/Third_Party/FatFs/src/ff.c **** 
 286:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _DS3S	/* Three 2nd byte areas */
 287:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 288:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Two 2nd byte areas */
 289:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 290:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 291:Middlewares/Third_Party/FatFs/src/ff.c **** 
 292:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Code page is SBCS */
 293:Middlewares/Third_Party/FatFs/src/ff.c **** 
 294:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	0
 295:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	0
 296:Middlewares/Third_Party/FatFs/src/ff.c **** 
 297:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _DF1S */
 298:Middlewares/Third_Party/FatFs/src/ff.c **** 
 299:Middlewares/Third_Party/FatFs/src/ff.c **** 
 300:Middlewares/Third_Party/FatFs/src/ff.c **** /* Additional file attribute bits for internal use */
 301:Middlewares/Third_Party/FatFs/src/ff.c **** #define	AM_VOL		0x08	/* Volume label */
 302:Middlewares/Third_Party/FatFs/src/ff.c **** #define AM_LFN		0x0F	/* LFN entry */
 303:Middlewares/Third_Party/FatFs/src/ff.c **** #define AM_MASK		0x3F	/* Mask of defined bits */
 304:Middlewares/Third_Party/FatFs/src/ff.c **** 
 305:Middlewares/Third_Party/FatFs/src/ff.c **** 
 306:Middlewares/Third_Party/FatFs/src/ff.c **** /* Additional file access control and file status flags for internal use */
 307:Middlewares/Third_Party/FatFs/src/ff.c **** #define FA_SEEKEND	0x20	/* Seek to end of the file on file open */
 308:Middlewares/Third_Party/FatFs/src/ff.c **** #define FA_MODIFIED	0x40	/* File has been modified */
 309:Middlewares/Third_Party/FatFs/src/ff.c **** #define FA_DIRTY	0x80	/* FIL.buf[] needs to be written-back */
 310:Middlewares/Third_Party/FatFs/src/ff.c **** 
 311:Middlewares/Third_Party/FatFs/src/ff.c **** 
 312:Middlewares/Third_Party/FatFs/src/ff.c **** /* Name status flags in fn[] */
 313:Middlewares/Third_Party/FatFs/src/ff.c **** #define NSFLAG		11		/* Index of the name status byte */
 314:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LOSS		0x01	/* Out of 8.3 format */
 315:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LFN		0x02	/* Force to create LFN entry */
ARM GAS  /tmp/ccTP8DMx.s 			page 7


 316:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LAST		0x04	/* Last segment */
 317:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_BODY		0x08	/* Lower case flag (body) */
 318:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_EXT		0x10	/* Lower case flag (ext) */
 319:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_DOT		0x20	/* Dot entry */
 320:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_NOLFN	0x40	/* Do not find LFN */
 321:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_NONAME	0x80	/* Not followed */
 322:Middlewares/Third_Party/FatFs/src/ff.c **** 
 323:Middlewares/Third_Party/FatFs/src/ff.c **** 
 324:Middlewares/Third_Party/FatFs/src/ff.c **** /* Limits and boundaries */
 325:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAX_DIR		0x200000		/* Max size of FAT directory */
 326:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAX_DIR_EX	0x10000000		/* Max size of exFAT directory */
 327:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAX_FAT12	0xFF5			/* Max FAT12 clusters (differs from specs, but correct for real DOS/Windo
 328:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MAX_FAT16	0xFFF5			/* Max FAT16 clusters (differs from specs, but correct for real DOS/Wind
 329:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MAX_FAT32	0x0FFFFFF5		/* Max FAT32 clusters (not specified, practical limit) */
 330:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MAX_EXFAT	0x7FFFFFFD		/* Max exFAT clusters (differs from specs, implementation limit) */
 331:Middlewares/Third_Party/FatFs/src/ff.c **** 
 332:Middlewares/Third_Party/FatFs/src/ff.c **** 
 333:Middlewares/Third_Party/FatFs/src/ff.c **** /* FatFs refers the FAT structure as simple byte array instead of structure member
 334:Middlewares/Third_Party/FatFs/src/ff.c **** / because the C structure is not binary compatible between different platforms */
 335:Middlewares/Third_Party/FatFs/src/ff.c **** 
 336:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_JmpBoot			0		/* x86 jump instruction (3-byte) */
 337:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_OEMName			3		/* OEM name (8-byte) */
 338:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BytsPerSec		11		/* Sector size [byte] (WORD) */
 339:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerClus		13		/* Cluster size [sector] (BYTE) */
 340:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RsvdSecCnt		14		/* Size of reserved area [sector] (WORD) */
 341:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumFATs			16		/* Number of FATs (BYTE) */
 342:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootEntCnt		17		/* Size of root directory area for FAT12/16 [entry] (WORD) */
 343:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSec16		19		/* Volume size (16-bit) [sector] (WORD) */
 344:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_Media			21		/* Media descriptor byte (BYTE) */
 345:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FATSz16			22		/* FAT size (16-bit) [sector] (WORD) */
 346:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerTrk		24		/* Track size for int13h [sector] (WORD) */
 347:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumHeads		26		/* Number of heads for int13h (WORD) */
 348:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_HiddSec			28		/* Volume offset from top of the drive (DWORD) */
 349:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSec32		32		/* Volume size (32-bit) [sector] (DWORD) */
 350:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_DrvNum			36		/* Physical drive number for int13h (BYTE) */
 351:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_NTres			37		/* Error flag (BYTE) */
 352:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootSig			38		/* Extended boot signature (BYTE) */
 353:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolID			39		/* Volume serial number (DWORD) */
 354:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolLab			43		/* Volume label string (8-byte) */
 355:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_FilSysType		54		/* File system type string (8-byte) */
 356:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootCode			62		/* Boot code (448-byte) */
 357:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_55AA				510		/* Signature word (WORD) */
 358:Middlewares/Third_Party/FatFs/src/ff.c **** 
 359:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FATSz32			36		/* FAT32: FAT size [sector] (DWORD) */
 360:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ExtFlags32		40		/* FAT32: Extended flags (WORD) */
 361:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSVer32			42		/* FAT32: File system version (WORD) */
 362:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootClus32		44		/* FAT32: Root directory cluster (DWORD) */
 363:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSInfo32		48		/* FAT32: Offset of FSINFO sector (WORD) */
 364:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BkBootSec32		50		/* FAT32: Offset of backup boot sector (WORD) */
 365:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_DrvNum32			64		/* FAT32: Physical drive number for int13h (BYTE) */
 366:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_NTres32			65		/* FAT32: Error flag (BYTE) */
 367:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootSig32		66		/* FAT32: Extended boot signature (BYTE) */
 368:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolID32			67		/* FAT32: Volume serial number (DWORD) */
 369:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolLab32			71		/* FAT32: Volume label string (8-byte) */
 370:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_FilSysType32		82		/* FAT32: File system type string (8-byte) */
 371:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootCode32		90		/* FAT32: Boot code (420-byte) */
 372:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccTP8DMx.s 			page 8


 373:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ZeroedEx		11		/* exFAT: MBZ field (53-byte) */
 374:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_VolOfsEx		64		/* exFAT: Volume offset from top of the drive [sector] (QWORD) */
 375:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSecEx		72		/* exFAT: Volume size [sector] (QWORD) */
 376:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FatOfsEx		80		/* exFAT: FAT offset from top of the volume [sector] (DWORD) */
 377:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FatSzEx			84		/* exFAT: FAT size [sector] (DWORD) */
 378:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_DataOfsEx		88		/* exFAT: Data offset from top of the volume [sector] (DWORD) */
 379:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumClusEx		92		/* exFAT: Number of clusters (DWORD) */
 380:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootClusEx		96		/* exFAT: Root directory start cluster (DWORD) */
 381:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_VolIDEx			100		/* exFAT: Volume serial number (DWORD) */
 382:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSVerEx			104		/* exFAT: File system version (WORD) */
 383:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_VolFlagEx		106		/* exFAT: Volume flags (BYTE) */
 384:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ActFatEx		107		/* exFAT: Active FAT flags (BYTE) */
 385:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BytsPerSecEx	108		/* exFAT: Log2 of sector size in unit of byte (BYTE) */
 386:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerClusEx	109		/* exFAT: Log2 of cluster size in unit of sector (BYTE) */
 387:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumFATsEx		110		/* exFAT: Number of FATs (BYTE) */
 388:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_DrvNumEx		111		/* exFAT: Physical drive number for int13h (BYTE) */
 389:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_PercInUseEx		112		/* exFAT: Percent in use (BYTE) */
 390:Middlewares/Third_Party/FatFs/src/ff.c **** #define	BPB_RsvdEx			113		/* exFAT: Reserved (7-byte) */
 391:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootCodeEx		120		/* exFAT: Boot code (390-byte) */
 392:Middlewares/Third_Party/FatFs/src/ff.c **** 
 393:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_Name			0		/* Short file name (11-byte) */
 394:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_Attr			11		/* Attribute (BYTE) */
 395:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_NTres			12		/* Lower case flag (BYTE) */
 396:Middlewares/Third_Party/FatFs/src/ff.c **** #define DIR_CrtTime10		13		/* Created time sub-second (BYTE) */
 397:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_CrtTime			14		/* Created time (DWORD) */
 398:Middlewares/Third_Party/FatFs/src/ff.c **** #define DIR_LstAccDate		18		/* Last accessed date (WORD) */
 399:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FstClusHI		20		/* Higher 16-bit of first cluster (WORD) */
 400:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_ModTime			22		/* Modified time (DWORD) */
 401:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FstClusLO		26		/* Lower 16-bit of first cluster (WORD) */
 402:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FileSize		28		/* File size (DWORD) */
 403:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Ord			0		/* LFN: LFN order and LLE flag (BYTE) */
 404:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Attr			11		/* LFN: LFN attribute (BYTE) */
 405:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Type			12		/* LFN: Entry type (BYTE) */
 406:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Chksum			13		/* LFN: Checksum of the SFN (BYTE) */
 407:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_FstClusLO		26		/* LFN: MBZ field (WORD) */
 408:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_Type			0		/* exFAT: Type of exFAT directory entry (BYTE) */
 409:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NumLabel		1		/* exFAT: Number of volume label characters (BYTE) */
 410:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_Label			2		/* exFAT: Volume label (11-WORD) */
 411:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CaseSum		4		/* exFAT: Sum of case conversion table (DWORD) */
 412:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NumSec			1		/* exFAT: Number of secondary entries (BYTE) */
 413:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_SetSum			2		/* exFAT: Sum of the set of directory entries (WORD) */
 414:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_Attr			4		/* exFAT: File attribute (WORD) */
 415:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CrtTime		8		/* exFAT: Created time (DWORD) */
 416:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_ModTime		12		/* exFAT: Modified time (DWORD) */
 417:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_AccTime		16		/* exFAT: Last accessed time (DWORD) */
 418:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CrtTime10		20		/* exFAT: Created time subsecond (BYTE) */
 419:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_ModTime10		21		/* exFAT: Modified time subsecond (BYTE) */
 420:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CrtTZ			22		/* exFAT: Created timezone (BYTE) */
 421:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_ModTZ			23		/* exFAT: Modified timezone (BYTE) */
 422:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_AccTZ			24		/* exFAT: Last accessed timezone (BYTE) */
 423:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_GenFlags		33		/* exFAT: General secondary flags (WORD) */
 424:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NumName		35		/* exFAT: Number of file name characters (BYTE) */
 425:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NameHash		36		/* exFAT: Hash of file name (WORD) */
 426:Middlewares/Third_Party/FatFs/src/ff.c **** #define XDIR_ValidFileSize	40		/* exFAT: Valid file size (QWORD) */
 427:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_FstClus		52		/* exFAT: First cluster of the file data (DWORD) */
 428:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_FileSize		56		/* exFAT: File/Directory size (QWORD) */
 429:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccTP8DMx.s 			page 9


 430:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SZDIRE				32		/* Size of a directory entry */
 431:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DDEM				0xE5	/* Deleted directory entry mark set to DIR_Name[0] */
 432:Middlewares/Third_Party/FatFs/src/ff.c **** #define	RDDEM				0x05	/* Replacement of the character collides with DDEM */
 433:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LLEF				0x40	/* Last long entry flag in LDIR_Ord */
 434:Middlewares/Third_Party/FatFs/src/ff.c **** 
 435:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_LeadSig			0		/* FAT32 FSI: Leading signature (DWORD) */
 436:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_StrucSig		484		/* FAT32 FSI: Structure signature (DWORD) */
 437:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_Free_Count		488		/* FAT32 FSI: Number of free clusters (DWORD) */
 438:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_Nxt_Free		492		/* FAT32 FSI: Last allocated cluster (DWORD) */
 439:Middlewares/Third_Party/FatFs/src/ff.c **** 
 440:Middlewares/Third_Party/FatFs/src/ff.c **** #define MBR_Table			446		/* MBR: Offset of partition table in the MBR */
 441:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SZ_PTE				16		/* MBR: Size of a partition table entry */
 442:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_Boot			0		/* MBR PTE: Boot indicator */
 443:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StHead			1		/* MBR PTE: Start head */
 444:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StSec			2		/* MBR PTE: Start sector */
 445:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StCyl			3		/* MBR PTE: Start cylinder */
 446:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_System			4		/* MBR PTE: System ID */
 447:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_EdHead			5		/* MBR PTE: End head */
 448:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_EdSec			6		/* MBR PTE: End sector */
 449:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_EdCyl			7		/* MBR PTE: End cylinder */
 450:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StLba			8		/* MBR PTE: Start in LBA */
 451:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_SizLba			12		/* MBR PTE: Size in LBA */
 452:Middlewares/Third_Party/FatFs/src/ff.c **** 
 453:Middlewares/Third_Party/FatFs/src/ff.c **** 
 454:Middlewares/Third_Party/FatFs/src/ff.c **** /* Post process after fatal error on file operation */
 455:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ABORT(fs, res)		{ fp->err = (BYTE)(res); LEAVE_FF(fs, res); }
 456:Middlewares/Third_Party/FatFs/src/ff.c **** 
 457:Middlewares/Third_Party/FatFs/src/ff.c **** 
 458:Middlewares/Third_Party/FatFs/src/ff.c **** /* Reentrancy related */
 459:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 460:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
 461:Middlewares/Third_Party/FatFs/src/ff.c **** #error Static LFN work area cannot be used at thread-safe configuration
 462:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 463:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ENTER_FF(fs)		{ if (!lock_fs(fs)) return FR_TIMEOUT; }
 464:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LEAVE_FF(fs, res)	{ unlock_fs(fs, res); return res; }
 465:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 466:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ENTER_FF(fs)
 467:Middlewares/Third_Party/FatFs/src/ff.c **** #define LEAVE_FF(fs, res)	return res
 468:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 469:Middlewares/Third_Party/FatFs/src/ff.c **** 
 470:Middlewares/Third_Party/FatFs/src/ff.c **** 
 471:Middlewares/Third_Party/FatFs/src/ff.c **** /* Definitions of volume - partition conversion */
 472:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MULTI_PARTITION
 473:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PD(vol) VolToPart[vol].pd	/* Get physical drive number */
 474:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PT(vol) VolToPart[vol].pt	/* Get partition index */
 475:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 476:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PD(vol) (BYTE)(vol)	/* Each logical drive is bound to the same physical drive number */
 477:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PT(vol) 0			/* Find first valid partition or in SFD */
 478:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 479:Middlewares/Third_Party/FatFs/src/ff.c **** 
 480:Middlewares/Third_Party/FatFs/src/ff.c **** 
 481:Middlewares/Third_Party/FatFs/src/ff.c **** /* Definitions of sector size */
 482:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_MAX_SS < _MIN_SS) || (_MAX_SS != 512 && _MAX_SS != 1024 && _MAX_SS != 2048 && _MAX_SS != 4096
 483:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong sector size configuration
 484:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 485:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS == _MIN_SS
 486:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SS(fs)	((UINT)_MAX_SS)	/* Fixed sector size */
ARM GAS  /tmp/ccTP8DMx.s 			page 10


 487:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 488:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SS(fs)	((fs)->ssize)	/* Variable sector size */
 489:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 490:Middlewares/Third_Party/FatFs/src/ff.c **** 
 491:Middlewares/Third_Party/FatFs/src/ff.c **** 
 492:Middlewares/Third_Party/FatFs/src/ff.c **** /* Timestamp */
 493:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_NORTC == 1
 494:Middlewares/Third_Party/FatFs/src/ff.c **** #if _NORTC_YEAR < 1980 || _NORTC_YEAR > 2107 || _NORTC_MON < 1 || _NORTC_MON > 12 || _NORTC_MDAY < 
 495:Middlewares/Third_Party/FatFs/src/ff.c **** #error Invalid _FS_NORTC settings
 496:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 497:Middlewares/Third_Party/FatFs/src/ff.c **** #define GET_FATTIME()	((DWORD)(_NORTC_YEAR - 1980) << 25 | (DWORD)_NORTC_MON << 21 | (DWORD)_NORTC_
 498:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 499:Middlewares/Third_Party/FatFs/src/ff.c **** #define GET_FATTIME()	get_fattime()
 500:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 501:Middlewares/Third_Party/FatFs/src/ff.c **** 
 502:Middlewares/Third_Party/FatFs/src/ff.c **** 
 503:Middlewares/Third_Party/FatFs/src/ff.c **** /* File lock controls */
 504:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 505:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_READONLY
 506:Middlewares/Third_Party/FatFs/src/ff.c **** #error _FS_LOCK must be 0 at read-only configuration
 507:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 508:Middlewares/Third_Party/FatFs/src/ff.c **** typedef struct {
 509:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;		/* Object ID 1, volume (NULL:blank entry) */
 510:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clu;		/* Object ID 2, containing directory (0:root) */
 511:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs;		/* Object ID 3, offset in the directory */
 512:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD ctr;		/* Object open counter, 0:none, 0x01..0xFF:read mode open count, 0x100:write mode */
 513:Middlewares/Third_Party/FatFs/src/ff.c **** } FILESEM;
 514:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 515:Middlewares/Third_Party/FatFs/src/ff.c **** 
 516:Middlewares/Third_Party/FatFs/src/ff.c **** 
 517:Middlewares/Third_Party/FatFs/src/ff.c **** 
 518:Middlewares/Third_Party/FatFs/src/ff.c **** 
 519:Middlewares/Third_Party/FatFs/src/ff.c **** 
 520:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
 521:Middlewares/Third_Party/FatFs/src/ff.c **** 
 522:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Work Area
 523:Middlewares/Third_Party/FatFs/src/ff.c **** 
 524:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
 525:Middlewares/Third_Party/FatFs/src/ff.c **** 
 526:Middlewares/Third_Party/FatFs/src/ff.c **** /* Remark: Variables defined here without initial value shall be guaranteed
 527:Middlewares/Third_Party/FatFs/src/ff.c **** /  zero/null at start-up. If not, the linker option or start-up routine is
 528:Middlewares/Third_Party/FatFs/src/ff.c **** /  not compliance with C standard. */
 529:Middlewares/Third_Party/FatFs/src/ff.c **** 
 530:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES < 1 || _VOLUMES > 10
 531:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _VOLUMES setting
 532:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 533:Middlewares/Third_Party/FatFs/src/ff.c **** static FATFS *FatFs[_VOLUMES];	/* Pointer to the file system objects (logical drives) */
 534:Middlewares/Third_Party/FatFs/src/ff.c **** static WORD Fsid;				/* File system mount ID */
 535:Middlewares/Third_Party/FatFs/src/ff.c **** 
 536:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0 && _VOLUMES >= 2
 537:Middlewares/Third_Party/FatFs/src/ff.c **** static BYTE CurrVol;			/* Current drive */
 538:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 539:Middlewares/Third_Party/FatFs/src/ff.c **** 
 540:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 541:Middlewares/Third_Party/FatFs/src/ff.c **** static FILESEM Files[_FS_LOCK];	/* Open object lock semaphores */
 542:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 543:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccTP8DMx.s 			page 11


 544:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 0		/* Non-LFN configuration */
 545:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF
 546:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)
 547:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 548:Middlewares/Third_Party/FatFs/src/ff.c **** 
 549:Middlewares/Third_Party/FatFs/src/ff.c **** #else					/* LFN configuration */
 550:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_LFN < 12 || _MAX_LFN > 255
 551:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _MAX_LFN value
 552:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 553:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAXDIRB(nc)	((nc + 44U) / 15 * SZDIRE)
 554:Middlewares/Third_Party/FatFs/src/ff.c **** 
 555:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1		/* LFN enabled with static working buffer */
 556:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 557:Middlewares/Third_Party/FatFs/src/ff.c **** static BYTE	DirBuf[MAXDIRB(_MAX_LFN)];	/* Directory entry block scratchpad buffer */
 558:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 559:Middlewares/Third_Party/FatFs/src/ff.c **** static WCHAR LfnBuf[_MAX_LFN + 1];	/* LFN enabled with static working buffer */
 560:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF
 561:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)
 562:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 563:Middlewares/Third_Party/FatFs/src/ff.c **** 
 564:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _USE_LFN == 2 	/* LFN enabled with dynamic working buffer on the stack */
 565:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 566:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR lbuf[_MAX_LFN+1]; BYTE dbuf[MAXDIRB(_MAX_LFN)];
 567:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ (fs)->lfnbuf = lbuf; (fs)->dirbuf = dbuf; }
 568:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 569:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 570:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR lbuf[_MAX_LFN+1];
 571:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ (fs)->lfnbuf = lbuf; }
 572:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 573:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 574:Middlewares/Third_Party/FatFs/src/ff.c **** 
 575:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _USE_LFN == 3 	/* LFN enabled with dynamic working buffer on the heap */
 576:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 577:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR *lfn;
 578:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ lfn = ff_memalloc((_MAX_LFN+1)*2 + MAXDIRB(_MAX_LFN)); if (!lfn) LEAVE_FF
 579:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()	ff_memfree(lfn)
 580:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 581:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR *lfn;
 582:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ lfn = ff_memalloc((_MAX_LFN+1)*2); if (!lfn) LEAVE_FF(fs, FR_NOT_ENOUGH_C
 583:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()	ff_memfree(lfn)
 584:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 585:Middlewares/Third_Party/FatFs/src/ff.c **** 
 586:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 587:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _USE_LFN setting
 588:Middlewares/Third_Party/FatFs/src/ff.c **** 
 589:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 590:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* else _USE_LFN == 0 */
 591:Middlewares/Third_Party/FatFs/src/ff.c **** 
 592:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
 593:Middlewares/Third_Party/FatFs/src/ff.c **** static const BYTE ExCvt[] = _EXCVT;	/* Upper conversion table for SBCS extended characters */
 594:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 595:Middlewares/Third_Party/FatFs/src/ff.c **** 
 596:Middlewares/Third_Party/FatFs/src/ff.c **** 
 597:Middlewares/Third_Party/FatFs/src/ff.c **** 
 598:Middlewares/Third_Party/FatFs/src/ff.c **** 
 599:Middlewares/Third_Party/FatFs/src/ff.c **** 
 600:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccTP8DMx.s 			page 12


 601:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
 602:Middlewares/Third_Party/FatFs/src/ff.c **** 
 603:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Functions
 604:Middlewares/Third_Party/FatFs/src/ff.c **** 
 605:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
 606:Middlewares/Third_Party/FatFs/src/ff.c **** 
 607:Middlewares/Third_Party/FatFs/src/ff.c **** 
 608:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 609:Middlewares/Third_Party/FatFs/src/ff.c **** /* Load/Store multi-byte word in the FAT structure                       */
 610:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 611:Middlewares/Third_Party/FatFs/src/ff.c **** 
 612:Middlewares/Third_Party/FatFs/src/ff.c **** static
 613:Middlewares/Third_Party/FatFs/src/ff.c **** WORD ld_word (const BYTE* ptr)	/*	 Load a 2-byte little-endian word */
 614:Middlewares/Third_Party/FatFs/src/ff.c **** {
  29              		.loc 1 614 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
 615:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD rv;
 616:Middlewares/Third_Party/FatFs/src/ff.c **** 
 617:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = ptr[1];
  35              		.loc 1 617 0
  36 0000 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
  37              	.LVL1:
 618:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[0];
  38              		.loc 1 618 0
  39 0002 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  40              	.LVL2:
 619:Middlewares/Third_Party/FatFs/src/ff.c **** 	return rv;
 620:Middlewares/Third_Party/FatFs/src/ff.c **** }
  41              		.loc 1 620 0
  42 0004 40EA0220 		orr	r0, r0, r2, lsl #8
  43              	.LVL3:
  44 0008 7047     		bx	lr
  45              		.cfi_endproc
  46              	.LFE124:
  48 000a 00BF     		.section	.text.ld_dword,"ax",%progbits
  49              		.align	2
  50              		.thumb
  51              		.thumb_func
  53              	ld_dword:
  54              	.LFB125:
 621:Middlewares/Third_Party/FatFs/src/ff.c **** 
 622:Middlewares/Third_Party/FatFs/src/ff.c **** static
 623:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD ld_dword (const BYTE* ptr)	/* Load a 4-byte little-endian word */
 624:Middlewares/Third_Party/FatFs/src/ff.c **** {
  55              		.loc 1 624 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LVL4:
 625:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD rv;
 626:Middlewares/Third_Party/FatFs/src/ff.c **** 
 627:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = ptr[3];
ARM GAS  /tmp/ccTP8DMx.s 			page 13


  61              		.loc 1 627 0
  62 0000 C278     		ldrb	r2, [r0, #3]	@ zero_extendqisi2
  63              	.LVL5:
 628:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[2];
  64              		.loc 1 628 0
  65 0002 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
  66 0004 43EA0222 		orr	r2, r3, r2, lsl #8
  67              	.LVL6:
 629:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[1];
  68              		.loc 1 629 0
  69 0008 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
  70 000a 43EA0223 		orr	r3, r3, r2, lsl #8
  71              	.LVL7:
 630:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[0];
  72              		.loc 1 630 0
  73 000e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  74              	.LVL8:
 631:Middlewares/Third_Party/FatFs/src/ff.c **** 	return rv;
 632:Middlewares/Third_Party/FatFs/src/ff.c **** }
  75              		.loc 1 632 0
  76 0010 40EA0320 		orr	r0, r0, r3, lsl #8
  77              	.LVL9:
  78 0014 7047     		bx	lr
  79              		.cfi_endproc
  80              	.LFE125:
  82 0016 00BF     		.section	.text.st_word,"ax",%progbits
  83              		.align	2
  84              		.thumb
  85              		.thumb_func
  87              	st_word:
  88              	.LFB126:
 633:Middlewares/Third_Party/FatFs/src/ff.c **** 
 634:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 635:Middlewares/Third_Party/FatFs/src/ff.c **** static
 636:Middlewares/Third_Party/FatFs/src/ff.c **** QWORD ld_qword (const BYTE* ptr)	/* Load an 8-byte little-endian word */
 637:Middlewares/Third_Party/FatFs/src/ff.c **** {
 638:Middlewares/Third_Party/FatFs/src/ff.c **** 	QWORD rv;
 639:Middlewares/Third_Party/FatFs/src/ff.c **** 
 640:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = ptr[7];
 641:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[6];
 642:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[5];
 643:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[4];
 644:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[3];
 645:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[2];
 646:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[1];
 647:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[0];
 648:Middlewares/Third_Party/FatFs/src/ff.c **** 	return rv;
 649:Middlewares/Third_Party/FatFs/src/ff.c **** }
 650:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 651:Middlewares/Third_Party/FatFs/src/ff.c **** 
 652:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 653:Middlewares/Third_Party/FatFs/src/ff.c **** static
 654:Middlewares/Third_Party/FatFs/src/ff.c **** void st_word (BYTE* ptr, WORD val)	/* Store a 2-byte word in little-endian */
 655:Middlewares/Third_Party/FatFs/src/ff.c **** {
  89              		.loc 1 655 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccTP8DMx.s 			page 14


  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  94              	.LVL10:
 656:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
  95              		.loc 1 656 0
  96 0000 0170     		strb	r1, [r0]
  97              	.LVL11:
 657:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val;
  98              		.loc 1 657 0
  99 0002 090A     		lsrs	r1, r1, #8
 100              	.LVL12:
 101 0004 4170     		strb	r1, [r0, #1]
 102 0006 7047     		bx	lr
 103              		.cfi_endproc
 104              	.LFE126:
 106              		.section	.text.st_dword,"ax",%progbits
 107              		.align	2
 108              		.thumb
 109              		.thumb_func
 111              	st_dword:
 112              	.LFB127:
 658:Middlewares/Third_Party/FatFs/src/ff.c **** }
 659:Middlewares/Third_Party/FatFs/src/ff.c **** 
 660:Middlewares/Third_Party/FatFs/src/ff.c **** static
 661:Middlewares/Third_Party/FatFs/src/ff.c **** void st_dword (BYTE* ptr, DWORD val)	/* Store a 4-byte word in little-endian */
 662:Middlewares/Third_Party/FatFs/src/ff.c **** {
 113              		.loc 1 662 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 118              	.LVL13:
 663:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 119              		.loc 1 663 0
 120 0000 0170     		strb	r1, [r0]
 121              	.LVL14:
 664:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 122              		.loc 1 664 0
 123 0002 C1F30723 		ubfx	r3, r1, #8, #8
 124 0006 4370     		strb	r3, [r0, #1]
 125              	.LVL15:
 665:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 126              		.loc 1 665 0
 127 0008 C1F30743 		ubfx	r3, r1, #16, #8
 128 000c 8370     		strb	r3, [r0, #2]
 129              	.LVL16:
 666:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val;
 130              		.loc 1 666 0
 131 000e 090E     		lsrs	r1, r1, #24
 132              	.LVL17:
 133 0010 C170     		strb	r1, [r0, #3]
 134 0012 7047     		bx	lr
 135              		.cfi_endproc
 136              	.LFE127:
 138              		.section	.text.mem_cpy,"ax",%progbits
 139              		.align	2
 140              		.thumb
ARM GAS  /tmp/ccTP8DMx.s 			page 15


 141              		.thumb_func
 143              	mem_cpy:
 144              	.LFB128:
 667:Middlewares/Third_Party/FatFs/src/ff.c **** }
 668:Middlewares/Third_Party/FatFs/src/ff.c **** 
 669:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 670:Middlewares/Third_Party/FatFs/src/ff.c **** static
 671:Middlewares/Third_Party/FatFs/src/ff.c **** void st_qword (BYTE* ptr, QWORD val)	/* Store an 8-byte word in little-endian */
 672:Middlewares/Third_Party/FatFs/src/ff.c **** {
 673:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 674:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 675:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 676:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 677:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 678:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 679:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 680:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val;
 681:Middlewares/Third_Party/FatFs/src/ff.c **** }
 682:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 683:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
 684:Middlewares/Third_Party/FatFs/src/ff.c **** 
 685:Middlewares/Third_Party/FatFs/src/ff.c **** 
 686:Middlewares/Third_Party/FatFs/src/ff.c **** 
 687:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 688:Middlewares/Third_Party/FatFs/src/ff.c **** /* String functions                                                      */
 689:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 690:Middlewares/Third_Party/FatFs/src/ff.c **** 
 691:Middlewares/Third_Party/FatFs/src/ff.c **** /* Copy memory to memory */
 692:Middlewares/Third_Party/FatFs/src/ff.c **** static
 693:Middlewares/Third_Party/FatFs/src/ff.c **** void mem_cpy (void* dst, const void* src, UINT cnt) {
 145              		.loc 1 693 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 150              	.LVL18:
 694:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *d = (BYTE*)dst;
 695:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *s = (const BYTE*)src;
 696:Middlewares/Third_Party/FatFs/src/ff.c **** 
 697:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (cnt) {
 151              		.loc 1 697 0
 152 0000 1346     		mov	r3, r2
 153 0002 2AB1     		cbz	r2, .L5
 154              	.LVL19:
 155              	.L7:
 698:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 699:Middlewares/Third_Party/FatFs/src/ff.c **** 			*d++ = *s++;
 156              		.loc 1 699 0 discriminator 1
 157 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 158 0006 0270     		strb	r2, [r0]
 159              	.LVL20:
 160 0008 0130     		adds	r0, r0, #1
 161              	.LVL21:
 162 000a 0131     		adds	r1, r1, #1
 163              	.LVL22:
 700:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (--cnt);
 164              		.loc 1 700 0 discriminator 1
ARM GAS  /tmp/ccTP8DMx.s 			page 16


 165 000c 013B     		subs	r3, r3, #1
 166              	.LVL23:
 167 000e F9D1     		bne	.L7
 168              	.L5:
 169 0010 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE128:
 173 0012 00BF     		.section	.text.mem_set,"ax",%progbits
 174              		.align	2
 175              		.thumb
 176              		.thumb_func
 178              	mem_set:
 179              	.LFB129:
 701:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 702:Middlewares/Third_Party/FatFs/src/ff.c **** }
 703:Middlewares/Third_Party/FatFs/src/ff.c **** 
 704:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill memory block */
 705:Middlewares/Third_Party/FatFs/src/ff.c **** static
 706:Middlewares/Third_Party/FatFs/src/ff.c **** void mem_set (void* dst, int val, UINT cnt) {
 180              		.loc 1 706 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 185              	.LVL24:
 186              	.L9:
 707:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *d = (BYTE*)dst;
 708:Middlewares/Third_Party/FatFs/src/ff.c **** 
 709:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
 710:Middlewares/Third_Party/FatFs/src/ff.c **** 		*d++ = (BYTE)val;
 187              		.loc 1 710 0 discriminator 1
 188 0000 0170     		strb	r1, [r0]
 189              	.LVL25:
 190 0002 0130     		adds	r0, r0, #1
 191              	.LVL26:
 711:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--cnt);
 192              		.loc 1 711 0 discriminator 1
 193 0004 013A     		subs	r2, r2, #1
 194              	.LVL27:
 195 0006 FBD1     		bne	.L9
 712:Middlewares/Third_Party/FatFs/src/ff.c **** }
 196              		.loc 1 712 0
 197 0008 7047     		bx	lr
 198              		.cfi_endproc
 199              	.LFE129:
 201 000a 00BF     		.section	.text.mem_cmp,"ax",%progbits
 202              		.align	2
 203              		.thumb
 204              		.thumb_func
 206              	mem_cmp:
 207              	.LFB130:
 713:Middlewares/Third_Party/FatFs/src/ff.c **** 
 714:Middlewares/Third_Party/FatFs/src/ff.c **** /* Compare memory block */
 715:Middlewares/Third_Party/FatFs/src/ff.c **** static
 716:Middlewares/Third_Party/FatFs/src/ff.c **** int mem_cmp (const void* dst, const void* src, UINT cnt) {	/* ZR:same, NZ:different */
 208              		.loc 1 716 0
 209              		.cfi_startproc
ARM GAS  /tmp/ccTP8DMx.s 			page 17


 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 213              	.LVL28:
 214 0000 30B4     		push	{r4, r5}
 215              	.LCFI0:
 216              		.cfi_def_cfa_offset 8
 217              		.cfi_offset 4, -8
 218              		.cfi_offset 5, -4
 219              	.LVL29:
 220              	.L12:
 717:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 718:Middlewares/Third_Party/FatFs/src/ff.c **** 	int r = 0;
 719:Middlewares/Third_Party/FatFs/src/ff.c **** 
 720:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
 721:Middlewares/Third_Party/FatFs/src/ff.c **** 		r = *d++ - *s++;
 221              		.loc 1 721 0 discriminator 2
 222 0002 451C     		adds	r5, r0, #1
 223              	.LVL30:
 224 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 225              	.LVL31:
 226 0006 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 227 0008 1B1A     		subs	r3, r3, r0
 228              	.LVL32:
 722:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--cnt && r == 0);
 229              		.loc 1 722 0 discriminator 2
 230 000a 013A     		subs	r2, r2, #1
 231              	.LVL33:
 232 000c 04D0     		beq	.L11
 233 000e 4C1C     		adds	r4, r1, #1
 234              	.LVL34:
 721:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--cnt && r == 0);
 235              		.loc 1 721 0 discriminator 1
 236 0010 2846     		mov	r0, r5
 237 0012 2146     		mov	r1, r4
 238              		.loc 1 722 0 discriminator 1
 239 0014 002B     		cmp	r3, #0
 240 0016 F4D0     		beq	.L12
 241              	.LVL35:
 242              	.L11:
 723:Middlewares/Third_Party/FatFs/src/ff.c **** 
 724:Middlewares/Third_Party/FatFs/src/ff.c **** 	return r;
 725:Middlewares/Third_Party/FatFs/src/ff.c **** }
 243              		.loc 1 725 0
 244 0018 1846     		mov	r0, r3
 245 001a 30BC     		pop	{r4, r5}
 246              	.LCFI1:
 247              		.cfi_restore 5
 248              		.cfi_restore 4
 249              		.cfi_def_cfa_offset 0
 250              	.LVL36:
 251 001c 7047     		bx	lr
 252              		.cfi_endproc
 253              	.LFE130:
 255 001e 00BF     		.section	.text.chk_chr,"ax",%progbits
 256              		.align	2
 257              		.thumb
ARM GAS  /tmp/ccTP8DMx.s 			page 18


 258              		.thumb_func
 260              	chk_chr:
 261              	.LFB131:
 726:Middlewares/Third_Party/FatFs/src/ff.c **** 
 727:Middlewares/Third_Party/FatFs/src/ff.c **** /* Check if chr is contained in the string */
 728:Middlewares/Third_Party/FatFs/src/ff.c **** static
 729:Middlewares/Third_Party/FatFs/src/ff.c **** int chk_chr (const char* str, int chr) {	/* NZ:contained, ZR:not contained */
 262              		.loc 1 729 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              		@ link register save eliminated.
 267              	.LVL37:
 730:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (*str && *str != chr) str++;
 268              		.loc 1 730 0
 269 0000 00E0     		b	.L15
 270              	.L17:
 271              		.loc 1 730 0 is_stmt 0 discriminator 3
 272 0002 0130     		adds	r0, r0, #1
 273              	.LVL38:
 274              	.L15:
 275              		.loc 1 730 0 discriminator 1
 276 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 277 0006 0BB1     		cbz	r3, .L16
 278              		.loc 1 730 0 discriminator 2
 279 0008 8B42     		cmp	r3, r1
 280 000a FAD1     		bne	.L17
 281              	.L16:
 731:Middlewares/Third_Party/FatFs/src/ff.c **** 	return *str;
 732:Middlewares/Third_Party/FatFs/src/ff.c **** }
 282              		.loc 1 732 0 is_stmt 1
 283 000c 1846     		mov	r0, r3
 284              	.LVL39:
 285 000e 7047     		bx	lr
 286              		.cfi_endproc
 287              	.LFE131:
 289              		.section	.text.chk_lock,"ax",%progbits
 290              		.align	2
 291              		.thumb
 292              		.thumb_func
 294              	chk_lock:
 295              	.LFB132:
 733:Middlewares/Third_Party/FatFs/src/ff.c **** 
 734:Middlewares/Third_Party/FatFs/src/ff.c **** 
 735:Middlewares/Third_Party/FatFs/src/ff.c **** 
 736:Middlewares/Third_Party/FatFs/src/ff.c **** 
 737:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 738:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 739:Middlewares/Third_Party/FatFs/src/ff.c **** /* Request/Release grant to access the volume                            */
 740:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 741:Middlewares/Third_Party/FatFs/src/ff.c **** static
 742:Middlewares/Third_Party/FatFs/src/ff.c **** int lock_fs (
 743:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 744:Middlewares/Third_Party/FatFs/src/ff.c **** )
 745:Middlewares/Third_Party/FatFs/src/ff.c **** {
 746:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (fs && ff_req_grant(fs->sobj)) ? 1 : 0;
 747:Middlewares/Third_Party/FatFs/src/ff.c **** }
ARM GAS  /tmp/ccTP8DMx.s 			page 19


 748:Middlewares/Third_Party/FatFs/src/ff.c **** 
 749:Middlewares/Third_Party/FatFs/src/ff.c **** 
 750:Middlewares/Third_Party/FatFs/src/ff.c **** static
 751:Middlewares/Third_Party/FatFs/src/ff.c **** void unlock_fs (
 752:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 753:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res		/* Result code to be returned */
 754:Middlewares/Third_Party/FatFs/src/ff.c **** )
 755:Middlewares/Third_Party/FatFs/src/ff.c **** {
 756:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
 757:Middlewares/Third_Party/FatFs/src/ff.c **** 		ff_rel_grant(fs->sobj);
 758:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 759:Middlewares/Third_Party/FatFs/src/ff.c **** }
 760:Middlewares/Third_Party/FatFs/src/ff.c **** 
 761:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 762:Middlewares/Third_Party/FatFs/src/ff.c **** 
 763:Middlewares/Third_Party/FatFs/src/ff.c **** 
 764:Middlewares/Third_Party/FatFs/src/ff.c **** 
 765:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 766:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 767:Middlewares/Third_Party/FatFs/src/ff.c **** /* File lock control functions                                           */
 768:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 769:Middlewares/Third_Party/FatFs/src/ff.c **** 
 770:Middlewares/Third_Party/FatFs/src/ff.c **** static
 771:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT chk_lock (	/* Check if the file can be accessed */
 772:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Directory object pointing the file to be checked */
 773:Middlewares/Third_Party/FatFs/src/ff.c **** 	int acc			/* Desired access type (0:Read, 1:Write, 2:Delete/Rename) */
 774:Middlewares/Third_Party/FatFs/src/ff.c **** )
 775:Middlewares/Third_Party/FatFs/src/ff.c **** {
 296              		.loc 1 775 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              		@ link register save eliminated.
 301              	.LVL40:
 302 0000 30B4     		push	{r4, r5}
 303              	.LCFI2:
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 4, -8
 306              		.cfi_offset 5, -4
 307              	.LVL41:
 776:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, be;
 777:Middlewares/Third_Party/FatFs/src/ff.c **** 
 778:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Search file semaphore table */
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = be = 0; i < _FS_LOCK; i++) {
 308              		.loc 1 779 0
 309 0002 0025     		movs	r5, #0
 310 0004 2B46     		mov	r3, r5
 311 0006 17E0     		b	.L19
 312              	.LVL42:
 313              	.L22:
 780:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 314              		.loc 1 780 0
 315 0008 1A01     		lsls	r2, r3, #4
 316 000a 194C     		ldr	r4, .L31
 317 000c A258     		ldr	r2, [r4, r2]
 318 000e 8AB1     		cbz	r2, .L25
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (Files[i].fs == dp->obj.fs &&	 	/* Check if the object matched with an open object */
ARM GAS  /tmp/ccTP8DMx.s 			page 20


 319              		.loc 1 781 0
 320 0010 0468     		ldr	r4, [r0]
 321 0012 A242     		cmp	r2, r4
 322 0014 0FD1     		bne	.L20
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 323              		.loc 1 782 0 discriminator 1
 324 0016 164A     		ldr	r2, .L31
 325 0018 02EB0312 		add	r2, r2, r3, lsl #4
 326 001c 5468     		ldr	r4, [r2, #4]
 327 001e 8268     		ldr	r2, [r0, #8]
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (Files[i].fs == dp->obj.fs &&	 	/* Check if the object matched with an open object */
 328              		.loc 1 781 0 discriminator 1
 329 0020 9442     		cmp	r4, r2
 330 0022 08D1     		bne	.L20
 783:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 331              		.loc 1 783 0
 332 0024 124A     		ldr	r2, .L31
 333 0026 02EB0312 		add	r2, r2, r3, lsl #4
 334 002a 9468     		ldr	r4, [r2, #8]
 335 002c 4269     		ldr	r2, [r0, #20]
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 336              		.loc 1 782 0
 337 002e 9442     		cmp	r4, r2
 338 0030 01D1     		bne	.L20
 339 0032 03E0     		b	.L21
 340              	.L25:
 784:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* Blank entry */
 785:Middlewares/Third_Party/FatFs/src/ff.c **** 			be = 1;
 341              		.loc 1 785 0
 342 0034 0125     		movs	r5, #1
 343              	.LVL43:
 344              	.L20:
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 345              		.loc 1 779 0 discriminator 2
 346 0036 0133     		adds	r3, r3, #1
 347              	.LVL44:
 348              	.L19:
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 349              		.loc 1 779 0 is_stmt 0 discriminator 1
 350 0038 012B     		cmp	r3, #1
 351 003a E5D9     		bls	.L22
 352              	.L21:
 786:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 787:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 788:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == _FS_LOCK) {	/* The object is not opened */
 353              		.loc 1 788 0 is_stmt 1
 354 003c 022B     		cmp	r3, #2
 355 003e 04D1     		bne	.L23
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 356              		.loc 1 789 0
 357 0040 6DB9     		cbnz	r5, .L26
 358              		.loc 1 789 0 is_stmt 0 discriminator 2
 359 0042 0229     		cmp	r1, #2
 360 0044 0DD1     		bne	.L27
 361              		.loc 1 789 0
 362 0046 0020     		movs	r0, #0
 363              	.LVL45:
ARM GAS  /tmp/ccTP8DMx.s 			page 21


 364 0048 10E0     		b	.L24
 365              	.LVL46:
 366              	.L23:
 790:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 791:Middlewares/Third_Party/FatFs/src/ff.c **** 
 792:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* The object has been opened. Reject any open against writing file and all write mode open */
 793:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (acc || Files[i].ctr == 0x100) ? FR_LOCKED : FR_OK;
 367              		.loc 1 793 0 is_stmt 1
 368 004a 61B9     		cbnz	r1, .L28
 369              		.loc 1 793 0 is_stmt 0 discriminator 2
 370 004c 084A     		ldr	r2, .L31
 371 004e 02EB0313 		add	r3, r2, r3, lsl #4
 372              	.LVL47:
 373 0052 9B89     		ldrh	r3, [r3, #12]
 374 0054 B3F5807F 		cmp	r3, #256
 375 0058 07D1     		bne	.L29
 376              		.loc 1 793 0
 377 005a 1020     		movs	r0, #16
 378              	.LVL48:
 379 005c 06E0     		b	.L24
 380              	.LVL49:
 381              	.L26:
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 382              		.loc 1 789 0 is_stmt 1
 383 005e 0020     		movs	r0, #0
 384              	.LVL50:
 385 0060 04E0     		b	.L24
 386              	.LVL51:
 387              	.L27:
 388 0062 1220     		movs	r0, #18
 389              	.LVL52:
 390 0064 02E0     		b	.L24
 391              	.LVL53:
 392              	.L28:
 393              		.loc 1 793 0
 394 0066 1020     		movs	r0, #16
 395              	.LVL54:
 396 0068 00E0     		b	.L24
 397              	.LVL55:
 398              	.L29:
 399 006a 0020     		movs	r0, #0
 400              	.LVL56:
 401              	.L24:
 794:Middlewares/Third_Party/FatFs/src/ff.c **** }
 402              		.loc 1 794 0
 403 006c 30BC     		pop	{r4, r5}
 404              	.LCFI3:
 405              		.cfi_restore 5
 406              		.cfi_restore 4
 407              		.cfi_def_cfa_offset 0
 408              	.LVL57:
 409 006e 7047     		bx	lr
 410              	.L32:
 411              		.align	2
 412              	.L31:
 413 0070 00000000 		.word	.LANCHOR0
 414              		.cfi_endproc
ARM GAS  /tmp/ccTP8DMx.s 			page 22


 415              	.LFE132:
 417              		.section	.text.enq_lock,"ax",%progbits
 418              		.align	2
 419              		.thumb
 420              		.thumb_func
 422              	enq_lock:
 423              	.LFB133:
 795:Middlewares/Third_Party/FatFs/src/ff.c **** 
 796:Middlewares/Third_Party/FatFs/src/ff.c **** 
 797:Middlewares/Third_Party/FatFs/src/ff.c **** static
 798:Middlewares/Third_Party/FatFs/src/ff.c **** int enq_lock (void)	/* Check if an entry is available for a new object */
 799:Middlewares/Third_Party/FatFs/src/ff.c **** {
 424              		.loc 1 799 0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 0
 427              		@ frame_needed = 0, uses_anonymous_args = 0
 428              		@ link register save eliminated.
 429              	.LVL58:
 800:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 801:Middlewares/Third_Party/FatFs/src/ff.c **** 
 802:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 430              		.loc 1 802 0
 431 0000 0020     		movs	r0, #0
 432 0002 00E0     		b	.L34
 433              	.LVL59:
 434              	.L36:
 435              		.loc 1 802 0 is_stmt 0 discriminator 4
 436 0004 0130     		adds	r0, r0, #1
 437              	.LVL60:
 438              	.L34:
 439              		.loc 1 802 0 discriminator 1
 440 0006 0128     		cmp	r0, #1
 441 0008 04D8     		bhi	.L35
 442              		.loc 1 802 0 discriminator 3
 443 000a 0301     		lsls	r3, r0, #4
 444 000c 034A     		ldr	r2, .L37
 445 000e D358     		ldr	r3, [r2, r3]
 446 0010 002B     		cmp	r3, #0
 447 0012 F7D1     		bne	.L36
 448              	.L35:
 803:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (i == _FS_LOCK) ? 0 : 1;
 804:Middlewares/Third_Party/FatFs/src/ff.c **** }
 449              		.loc 1 804 0 is_stmt 1
 450 0014 0238     		subs	r0, r0, #2
 451              	.LVL61:
 452 0016 18BF     		it	ne
 453 0018 0120     		movne	r0, #1
 454              	.LVL62:
 455 001a 7047     		bx	lr
 456              	.L38:
 457              		.align	2
 458              	.L37:
 459 001c 00000000 		.word	.LANCHOR0
 460              		.cfi_endproc
 461              	.LFE133:
 463              		.section	.text.inc_lock,"ax",%progbits
 464              		.align	2
ARM GAS  /tmp/ccTP8DMx.s 			page 23


 465              		.thumb
 466              		.thumb_func
 468              	inc_lock:
 469              	.LFB134:
 805:Middlewares/Third_Party/FatFs/src/ff.c **** 
 806:Middlewares/Third_Party/FatFs/src/ff.c **** 
 807:Middlewares/Third_Party/FatFs/src/ff.c **** static
 808:Middlewares/Third_Party/FatFs/src/ff.c **** UINT inc_lock (	/* Increment object open counter and returns its index (0:Internal error) */
 809:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,	/* Directory object pointing the file to register or increment */
 810:Middlewares/Third_Party/FatFs/src/ff.c **** 	int acc		/* Desired access (0:Read, 1:Write, 2:Delete/Rename) */
 811:Middlewares/Third_Party/FatFs/src/ff.c **** )
 812:Middlewares/Third_Party/FatFs/src/ff.c **** {
 470              		.loc 1 812 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474              		@ link register save eliminated.
 475              	.LVL63:
 476 0000 70B4     		push	{r4, r5, r6}
 477              	.LCFI4:
 478              		.cfi_def_cfa_offset 12
 479              		.cfi_offset 4, -12
 480              		.cfi_offset 5, -8
 481              		.cfi_offset 6, -4
 482              	.LVL64:
 813:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 814:Middlewares/Third_Party/FatFs/src/ff.c **** 
 815:Middlewares/Third_Party/FatFs/src/ff.c **** 
 816:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {	/* Find the object */
 483              		.loc 1 816 0
 484 0002 0023     		movs	r3, #0
 485 0004 14E0     		b	.L40
 486              	.LVL65:
 487              	.L43:
 817:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
 488              		.loc 1 817 0
 489 0006 1A01     		lsls	r2, r3, #4
 490 0008 254C     		ldr	r4, .L56
 491 000a A458     		ldr	r4, [r4, r2]
 492 000c 0268     		ldr	r2, [r0]
 493 000e 9442     		cmp	r4, r2
 494 0010 0DD1     		bne	.L41
 818:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].clu == dp->obj.sclust &&
 495              		.loc 1 818 0 discriminator 1
 496 0012 234A     		ldr	r2, .L56
 497 0014 02EB0312 		add	r2, r2, r3, lsl #4
 498 0018 5468     		ldr	r4, [r2, #4]
 499 001a 8268     		ldr	r2, [r0, #8]
 817:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
 500              		.loc 1 817 0 discriminator 1
 501 001c 9442     		cmp	r4, r2
 502 001e 06D1     		bne	.L41
 819:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].ofs == dp->dptr) break;
 503              		.loc 1 819 0
 504 0020 1F4A     		ldr	r2, .L56
 505 0022 02EB0312 		add	r2, r2, r3, lsl #4
 506 0026 9468     		ldr	r4, [r2, #8]
ARM GAS  /tmp/ccTP8DMx.s 			page 24


 507 0028 4269     		ldr	r2, [r0, #20]
 818:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].clu == dp->obj.sclust &&
 508              		.loc 1 818 0
 509 002a 9442     		cmp	r4, r2
 510 002c 02D0     		beq	.L42
 511              	.L41:
 816:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
 512              		.loc 1 816 0 discriminator 2
 513 002e 0133     		adds	r3, r3, #1
 514              	.LVL66:
 515              	.L40:
 816:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
 516              		.loc 1 816 0 is_stmt 0 discriminator 1
 517 0030 012B     		cmp	r3, #1
 518 0032 E8D9     		bls	.L43
 519              	.L42:
 820:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 821:Middlewares/Third_Party/FatFs/src/ff.c **** 
 822:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == _FS_LOCK) {				/* Not opened. Register it as new. */
 520              		.loc 1 822 0 is_stmt 1
 521 0034 022B     		cmp	r3, #2
 522 0036 17D1     		bne	.L45
 523 0038 01E0     		b	.L51
 524              	.L47:
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 525              		.loc 1 823 0 discriminator 4
 526 003a 0133     		adds	r3, r3, #1
 527              	.LVL67:
 528 003c 00E0     		b	.L44
 529              	.L51:
 530 003e 0023     		movs	r3, #0
 531              	.LVL68:
 532              	.L44:
 533              		.loc 1 823 0 is_stmt 0 discriminator 1
 534 0040 012B     		cmp	r3, #1
 535 0042 04D8     		bhi	.L46
 536              		.loc 1 823 0 discriminator 3
 537 0044 1A01     		lsls	r2, r3, #4
 538 0046 164C     		ldr	r4, .L56
 539 0048 A258     		ldr	r2, [r4, r2]
 540 004a 002A     		cmp	r2, #0
 541 004c F5D1     		bne	.L47
 542              	.L46:
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 543              		.loc 1 824 0 is_stmt 1
 544 004e 022B     		cmp	r3, #2
 545 0050 20D0     		beq	.L52
 825:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->obj.fs;
 546              		.loc 1 825 0
 547 0052 0668     		ldr	r6, [r0]
 548 0054 124D     		ldr	r5, .L56
 549 0056 1C01     		lsls	r4, r3, #4
 550 0058 2A19     		adds	r2, r5, r4
 551 005a 2E51     		str	r6, [r5, r4]
 826:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].clu = dp->obj.sclust;
 552              		.loc 1 826 0
 553 005c 8468     		ldr	r4, [r0, #8]
ARM GAS  /tmp/ccTP8DMx.s 			page 25


 554 005e 5460     		str	r4, [r2, #4]
 827:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ofs = dp->dptr;
 555              		.loc 1 827 0
 556 0060 4069     		ldr	r0, [r0, #20]
 557              	.LVL69:
 558 0062 9060     		str	r0, [r2, #8]
 828:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = 0;
 559              		.loc 1 828 0
 560 0064 0020     		movs	r0, #0
 561 0066 9081     		strh	r0, [r2, #12]	@ movhi
 562              	.L45:
 829:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 830:Middlewares/Third_Party/FatFs/src/ff.c **** 
 831:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (acc && Files[i].ctr) return 0;	/* Access violation (int err) */
 563              		.loc 1 831 0
 564 0068 21B1     		cbz	r1, .L49
 565              		.loc 1 831 0 is_stmt 0 discriminator 1
 566 006a 0D4A     		ldr	r2, .L56
 567 006c 02EB0312 		add	r2, r2, r3, lsl #4
 568 0070 9289     		ldrh	r2, [r2, #12]
 569 0072 8AB9     		cbnz	r2, .L53
 570              	.L49:
 832:Middlewares/Third_Party/FatFs/src/ff.c **** 
 833:Middlewares/Third_Party/FatFs/src/ff.c **** 	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
 571              		.loc 1 833 0 is_stmt 1
 572 0074 31B9     		cbnz	r1, .L54
 573              		.loc 1 833 0 is_stmt 0 discriminator 1
 574 0076 0A4A     		ldr	r2, .L56
 575 0078 02EB0312 		add	r2, r2, r3, lsl #4
 576 007c 9189     		ldrh	r1, [r2, #12]
 577              	.LVL70:
 578 007e 0131     		adds	r1, r1, #1
 579 0080 89B2     		uxth	r1, r1
 580 0082 01E0     		b	.L50
 581              	.LVL71:
 582              	.L54:
 583              		.loc 1 833 0
 584 0084 4FF48071 		mov	r1, #256
 585              	.LVL72:
 586              	.L50:
 587              		.loc 1 833 0 discriminator 4
 588 0088 054A     		ldr	r2, .L56
 589 008a 02EB0312 		add	r2, r2, r3, lsl #4
 590 008e 9181     		strh	r1, [r2, #12]	@ movhi
 834:Middlewares/Third_Party/FatFs/src/ff.c **** 
 835:Middlewares/Third_Party/FatFs/src/ff.c **** 	return i + 1;
 591              		.loc 1 835 0 is_stmt 1 discriminator 4
 592 0090 581C     		adds	r0, r3, #1
 593 0092 02E0     		b	.L48
 594              	.LVL73:
 595              	.L52:
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->obj.fs;
 596              		.loc 1 824 0
 597 0094 0020     		movs	r0, #0
 598              	.LVL74:
 599 0096 00E0     		b	.L48
 600              	.L53:
ARM GAS  /tmp/ccTP8DMx.s 			page 26


 831:Middlewares/Third_Party/FatFs/src/ff.c **** 
 601              		.loc 1 831 0
 602 0098 0020     		movs	r0, #0
 603              	.LVL75:
 604              	.L48:
 836:Middlewares/Third_Party/FatFs/src/ff.c **** }
 605              		.loc 1 836 0
 606 009a 70BC     		pop	{r4, r5, r6}
 607              	.LCFI5:
 608              		.cfi_restore 6
 609              		.cfi_restore 5
 610              		.cfi_restore 4
 611              		.cfi_def_cfa_offset 0
 612 009c 7047     		bx	lr
 613              	.L57:
 614 009e 00BF     		.align	2
 615              	.L56:
 616 00a0 00000000 		.word	.LANCHOR0
 617              		.cfi_endproc
 618              	.LFE134:
 620              		.section	.text.dec_lock,"ax",%progbits
 621              		.align	2
 622              		.thumb
 623              		.thumb_func
 625              	dec_lock:
 626              	.LFB135:
 837:Middlewares/Third_Party/FatFs/src/ff.c **** 
 838:Middlewares/Third_Party/FatFs/src/ff.c **** 
 839:Middlewares/Third_Party/FatFs/src/ff.c **** static
 840:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dec_lock (	/* Decrement object open counter */
 841:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i			/* Semaphore index (1..) */
 842:Middlewares/Third_Party/FatFs/src/ff.c **** )
 843:Middlewares/Third_Party/FatFs/src/ff.c **** {
 627              		.loc 1 843 0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 0
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 631              		@ link register save eliminated.
 632              	.LVL76:
 844:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD n;
 845:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 846:Middlewares/Third_Party/FatFs/src/ff.c **** 
 847:Middlewares/Third_Party/FatFs/src/ff.c **** 
 848:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (--i < _FS_LOCK) {	/* Shift index number origin from 0 */
 633              		.loc 1 848 0
 634 0000 0138     		subs	r0, r0, #1
 635              	.LVL77:
 636 0002 0128     		cmp	r0, #1
 637 0004 14D8     		bhi	.L62
 849:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = Files[i].ctr;
 638              		.loc 1 849 0
 639 0006 0C4B     		ldr	r3, .L65
 640 0008 03EB0013 		add	r3, r3, r0, lsl #4
 641 000c 9B89     		ldrh	r3, [r3, #12]
 642              	.LVL78:
 850:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 643              		.loc 1 850 0
ARM GAS  /tmp/ccTP8DMx.s 			page 27


 644 000e B3F5807F 		cmp	r3, #256
 645 0012 00D1     		bne	.L60
 646 0014 0023     		movs	r3, #0
 647              	.LVL79:
 648              	.L60:
 851:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n > 0) n--;				/* Decrement read mode open count */
 649              		.loc 1 851 0
 650 0016 0BB1     		cbz	r3, .L61
 651              		.loc 1 851 0 is_stmt 0 discriminator 1
 652 0018 013B     		subs	r3, r3, #1
 653              	.LVL80:
 654 001a 9BB2     		uxth	r3, r3
 655              	.LVL81:
 656              	.L61:
 852:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = n;
 657              		.loc 1 852 0 is_stmt 1
 658 001c 064A     		ldr	r2, .L65
 659 001e 02EB0012 		add	r2, r2, r0, lsl #4
 660 0022 9381     		strh	r3, [r2, #12]	@ movhi
 853:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 661              		.loc 1 853 0
 662 0024 33B9     		cbnz	r3, .L64
 663              		.loc 1 853 0 is_stmt 0 discriminator 1
 664 0026 0301     		lsls	r3, r0, #4
 665              	.LVL82:
 666 0028 0020     		movs	r0, #0
 667              	.LVL83:
 668 002a 034A     		ldr	r2, .L65
 669              	.LVL84:
 670 002c D050     		str	r0, [r2, r3]
 671 002e 7047     		bx	lr
 672              	.LVL85:
 673              	.L62:
 854:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 855:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 856:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;			/* Invalid index nunber */
 674              		.loc 1 856 0 is_stmt 1
 675 0030 0220     		movs	r0, #2
 676              	.LVL86:
 677 0032 7047     		bx	lr
 678              	.LVL87:
 679              	.L64:
 854:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 680              		.loc 1 854 0
 681 0034 0020     		movs	r0, #0
 682              	.LVL88:
 857:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 858:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 859:Middlewares/Third_Party/FatFs/src/ff.c **** }
 683              		.loc 1 859 0
 684 0036 7047     		bx	lr
 685              	.L66:
 686              		.align	2
 687              	.L65:
 688 0038 00000000 		.word	.LANCHOR0
 689              		.cfi_endproc
 690              	.LFE135:
ARM GAS  /tmp/ccTP8DMx.s 			page 28


 692              		.section	.text.clear_lock,"ax",%progbits
 693              		.align	2
 694              		.thumb
 695              		.thumb_func
 697              	clear_lock:
 698              	.LFB136:
 860:Middlewares/Third_Party/FatFs/src/ff.c **** 
 861:Middlewares/Third_Party/FatFs/src/ff.c **** 
 862:Middlewares/Third_Party/FatFs/src/ff.c **** static
 863:Middlewares/Third_Party/FatFs/src/ff.c **** void clear_lock (	/* Clear lock entries of the volume */
 864:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs
 865:Middlewares/Third_Party/FatFs/src/ff.c **** )
 866:Middlewares/Third_Party/FatFs/src/ff.c **** {
 699              		.loc 1 866 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 703              		@ link register save eliminated.
 704              	.LVL89:
 705 0000 10B4     		push	{r4}
 706              	.LCFI6:
 707              		.cfi_def_cfa_offset 4
 708              		.cfi_offset 4, -4
 709              	.LVL90:
 867:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 868:Middlewares/Third_Party/FatFs/src/ff.c **** 
 869:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {
 710              		.loc 1 869 0
 711 0002 0023     		movs	r3, #0
 712 0004 08E0     		b	.L68
 713              	.LVL91:
 714              	.L70:
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 715              		.loc 1 870 0
 716 0006 1A01     		lsls	r2, r3, #4
 717 0008 0649     		ldr	r1, .L72
 718 000a 8A58     		ldr	r2, [r1, r2]
 719 000c 8242     		cmp	r2, r0
 720 000e 02D1     		bne	.L69
 721              		.loc 1 870 0 is_stmt 0 discriminator 1
 722 0010 1A01     		lsls	r2, r3, #4
 723 0012 0024     		movs	r4, #0
 724 0014 8C50     		str	r4, [r1, r2]
 725              	.L69:
 869:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 726              		.loc 1 869 0 is_stmt 1 discriminator 2
 727 0016 0133     		adds	r3, r3, #1
 728              	.LVL92:
 729              	.L68:
 869:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 730              		.loc 1 869 0 is_stmt 0 discriminator 1
 731 0018 012B     		cmp	r3, #1
 732 001a F4D9     		bls	.L70
 871:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 872:Middlewares/Third_Party/FatFs/src/ff.c **** }
 733              		.loc 1 872 0 is_stmt 1
 734 001c 5DF8044B 		ldr	r4, [sp], #4
ARM GAS  /tmp/ccTP8DMx.s 			page 29


 735              	.LCFI7:
 736              		.cfi_restore 4
 737              		.cfi_def_cfa_offset 0
 738 0020 7047     		bx	lr
 739              	.L73:
 740 0022 00BF     		.align	2
 741              	.L72:
 742 0024 00000000 		.word	.LANCHOR0
 743              		.cfi_endproc
 744              	.LFE136:
 746              		.section	.text.clust2sect,"ax",%progbits
 747              		.align	2
 748              		.thumb
 749              		.thumb_func
 751              	clust2sect:
 752              	.LFB140:
 873:Middlewares/Third_Party/FatFs/src/ff.c **** 
 874:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_LOCK != 0 */
 875:Middlewares/Third_Party/FatFs/src/ff.c **** 
 876:Middlewares/Third_Party/FatFs/src/ff.c **** 
 877:Middlewares/Third_Party/FatFs/src/ff.c **** 
 878:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 879:Middlewares/Third_Party/FatFs/src/ff.c **** /* Move/Flush disk access window in the file system object               */
 880:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 881:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 882:Middlewares/Third_Party/FatFs/src/ff.c **** static
 883:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERROR */
 884:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs			/* File system object */
 885:Middlewares/Third_Party/FatFs/src/ff.c **** )
 886:Middlewares/Third_Party/FatFs/src/ff.c **** {
 887:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD wsect;
 888:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nf;
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 890:Middlewares/Third_Party/FatFs/src/ff.c **** 
 891:Middlewares/Third_Party/FatFs/src/ff.c **** 
 892:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->wflag) {	/* Write back the sector if it is dirty */
 893:Middlewares/Third_Party/FatFs/src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 894:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 895:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 896:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 897:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 0;
 898:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 900:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_write(fs->drv, fs->win, wsect, 1);
 902:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 903:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 904:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 905:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 906:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 907:Middlewares/Third_Party/FatFs/src/ff.c **** }
 908:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 909:Middlewares/Third_Party/FatFs/src/ff.c **** 
 910:Middlewares/Third_Party/FatFs/src/ff.c **** 
 911:Middlewares/Third_Party/FatFs/src/ff.c **** static
 912:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT move_window (	/* Returns FR_OK or FR_DISK_ERROR */
 913:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* File system object */
ARM GAS  /tmp/ccTP8DMx.s 			page 30


 914:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sector		/* Sector number to make appearance in the fs->win[] */
 915:Middlewares/Third_Party/FatFs/src/ff.c **** )
 916:Middlewares/Third_Party/FatFs/src/ff.c **** {
 917:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 918:Middlewares/Third_Party/FatFs/src/ff.c **** 
 919:Middlewares/Third_Party/FatFs/src/ff.c **** 
 920:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sector != fs->winsect) {	/* Window offset changed? */
 921:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 922:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = sync_window(fs);		/* Write-back changes */
 923:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 924:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {			/* Fill sector window with new data */
 925:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 926:Middlewares/Third_Party/FatFs/src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 927:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 928:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 929:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->winsect = sector;
 930:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 931:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 932:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 933:Middlewares/Third_Party/FatFs/src/ff.c **** }
 934:Middlewares/Third_Party/FatFs/src/ff.c **** 
 935:Middlewares/Third_Party/FatFs/src/ff.c **** 
 936:Middlewares/Third_Party/FatFs/src/ff.c **** 
 937:Middlewares/Third_Party/FatFs/src/ff.c **** 
 938:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 939:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 940:Middlewares/Third_Party/FatFs/src/ff.c **** /* Synchronize file system and strage device                             */
 941:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 942:Middlewares/Third_Party/FatFs/src/ff.c **** 
 943:Middlewares/Third_Party/FatFs/src/ff.c **** static
 944:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT sync_fs (	/* FR_OK:succeeded, !=0:error */
 945:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 946:Middlewares/Third_Party/FatFs/src/ff.c **** )
 947:Middlewares/Third_Party/FatFs/src/ff.c **** {
 948:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 949:Middlewares/Third_Party/FatFs/src/ff.c **** 
 950:Middlewares/Third_Party/FatFs/src/ff.c **** 
 951:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = sync_window(fs);
 952:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 953:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update FSInfo sector if needed */
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {
 955:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSInfo structure */
 956:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(fs->win, 0, SS(fs));
 957:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + BS_55AA, 0xAA55);
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_LeadSig, 0x41615252);
 959:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_StrucSig, 0x61417272);
 960:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
 961:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
 962:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write it into the FSInfo sector */
 963:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->winsect = fs->volbase + 1;
 964:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(fs->drv, fs->win, fs->winsect, 1);
 965:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
 966:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Make sure that no pending write process in the physical drive */
 968:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_ioctl(fs->drv, CTRL_SYNC, 0) != RES_OK) res = FR_DISK_ERR;
 969:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 970:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccTP8DMx.s 			page 31


 971:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 972:Middlewares/Third_Party/FatFs/src/ff.c **** }
 973:Middlewares/Third_Party/FatFs/src/ff.c **** 
 974:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 975:Middlewares/Third_Party/FatFs/src/ff.c **** 
 976:Middlewares/Third_Party/FatFs/src/ff.c **** 
 977:Middlewares/Third_Party/FatFs/src/ff.c **** 
 978:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 979:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get sector# from cluster#                                             */
 980:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 981:Middlewares/Third_Party/FatFs/src/ff.c **** 
 982:Middlewares/Third_Party/FatFs/src/ff.c **** static
 983:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clust2sect (	/* !=0:Sector number, 0:Failed (invalid cluster#) */
 984:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 985:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst		/* Cluster# to be converted */
 986:Middlewares/Third_Party/FatFs/src/ff.c **** )
 987:Middlewares/Third_Party/FatFs/src/ff.c **** {
 753              		.loc 1 987 0
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 0
 756              		@ frame_needed = 0, uses_anonymous_args = 0
 757              		@ link register save eliminated.
 758              	.LVL93:
 988:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;
 759              		.loc 1 988 0
 760 0000 0239     		subs	r1, r1, #2
 761              	.LVL94:
 989:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 762              		.loc 1 989 0
 763 0002 4369     		ldr	r3, [r0, #20]
 764 0004 023B     		subs	r3, r3, #2
 765 0006 9942     		cmp	r1, r3
 766 0008 04D2     		bcs	.L76
 990:Middlewares/Third_Party/FatFs/src/ff.c **** 	return clst * fs->csize + fs->database;
 767              		.loc 1 990 0
 768 000a 4389     		ldrh	r3, [r0, #10]
 769 000c 806A     		ldr	r0, [r0, #40]
 770              	.LVL95:
 771 000e 01FB0300 		mla	r0, r1, r3, r0
 772 0012 7047     		bx	lr
 773              	.LVL96:
 774              	.L76:
 989:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 775              		.loc 1 989 0
 776 0014 0020     		movs	r0, #0
 777              	.LVL97:
 991:Middlewares/Third_Party/FatFs/src/ff.c **** }
 778              		.loc 1 991 0
 779 0016 7047     		bx	lr
 780              		.cfi_endproc
 781              	.LFE140:
 783              		.section	.text.clmt_clust,"ax",%progbits
 784              		.align	2
 785              		.thumb
 786              		.thumb_func
 788              	clmt_clust:
 789              	.LFB145:
ARM GAS  /tmp/ccTP8DMx.s 			page 32


 992:Middlewares/Third_Party/FatFs/src/ff.c **** 
 993:Middlewares/Third_Party/FatFs/src/ff.c **** 
 994:Middlewares/Third_Party/FatFs/src/ff.c **** 
 995:Middlewares/Third_Party/FatFs/src/ff.c **** 
 996:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 997:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT access - Read value of a FAT entry                                */
 998:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 999:Middlewares/Third_Party/FatFs/src/ff.c **** 
1000:Middlewares/Third_Party/FatFs/src/ff.c **** static
1001:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD get_fat (	/* 0xFFFFFFFF:Disk error, 1:Internal error, 2..0x7FFFFFFF:Cluster status */
1002:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,	/* Corresponding object */
1003:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst	/* Cluster number to get the value */
1004:Middlewares/Third_Party/FatFs/src/ff.c **** )
1005:Middlewares/Third_Party/FatFs/src/ff.c **** {
1006:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
1007:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val;
1008:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
1009:Middlewares/Third_Party/FatFs/src/ff.c **** 
1010:Middlewares/Third_Party/FatFs/src/ff.c **** 
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check if in valid range */
1012:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
1013:Middlewares/Third_Party/FatFs/src/ff.c **** 
1014:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 0xFFFFFFFF;	/* Default value falls on disk error */
1016:Middlewares/Third_Party/FatFs/src/ff.c **** 
1017:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
1018:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
1019:Middlewares/Third_Party/FatFs/src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
1020:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = fs->win[bc++ % SS(fs)];
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
1023:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc |= fs->win[bc % SS(fs)] << 8;
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
1025:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1026:Middlewares/Third_Party/FatFs/src/ff.c **** 
1027:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT16 :
1028:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2))) != FR_OK) break;
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_word(fs->win + clst * 2 % SS(fs));
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1031:Middlewares/Third_Party/FatFs/src/ff.c **** 
1032:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT32 :
1033:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
1034:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;
1035:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1036:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1037:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_EXFAT :
1038:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (obj->objsize) {
1039:Middlewares/Third_Party/FatFs/src/ff.c **** 				DWORD cofs = clst - obj->sclust;	/* Offset from start cluster */
1040:Middlewares/Third_Party/FatFs/src/ff.c **** 				DWORD clen = (DWORD)((obj->objsize - 1) / SS(fs)) / fs->csize;	/* Number of clusters - 1 */
1041:Middlewares/Third_Party/FatFs/src/ff.c **** 
1042:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->stat == 2) {	/* Is there no valid chain on the FAT? */
1043:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (cofs <= clen) {
1044:Middlewares/Third_Party/FatFs/src/ff.c **** 						val = (cofs == clen) ? 0x7FFFFFFF : clst + 1;	/* Generate the value */
1045:Middlewares/Third_Party/FatFs/src/ff.c **** 						break;
1046:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1047:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1048:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->stat == 3 && cofs < obj->n_cont) {	/* Is it in the 1st fragment? */
ARM GAS  /tmp/ccTP8DMx.s 			page 33


1049:Middlewares/Third_Party/FatFs/src/ff.c **** 					val = clst + 1; 	/* Generate the value */
1050:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
1051:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1052:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->stat != 2) {	/* Get value from FAT if FAT chain is valid */
1053:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (obj->n_frag != 0) {	/* Is it on the growing edge? */
1054:Middlewares/Third_Party/FatFs/src/ff.c **** 						val = 0x7FFFFFFF;	/* Generate EOC */
1055:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
1056:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
1057:Middlewares/Third_Party/FatFs/src/ff.c **** 						val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x7FFFFFFF;
1058:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1059:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
1060:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1061:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1062:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* go to default */
1063:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1064:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:
1065:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = 1;	/* Internal error */
1066:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1067:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1068:Middlewares/Third_Party/FatFs/src/ff.c **** 
1069:Middlewares/Third_Party/FatFs/src/ff.c **** 	return val;
1070:Middlewares/Third_Party/FatFs/src/ff.c **** }
1071:Middlewares/Third_Party/FatFs/src/ff.c **** 
1072:Middlewares/Third_Party/FatFs/src/ff.c **** 
1073:Middlewares/Third_Party/FatFs/src/ff.c **** 
1074:Middlewares/Third_Party/FatFs/src/ff.c **** 
1075:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1076:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1077:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT access - Change value of a FAT entry                              */
1078:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1079:Middlewares/Third_Party/FatFs/src/ff.c **** 
1080:Middlewares/Third_Party/FatFs/src/ff.c **** static
1081:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT put_fat (	/* FR_OK(0):succeeded, !=0:error */
1082:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* Corresponding file system object */
1083:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,		/* FAT index number (cluster number) to be changed */
1084:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val		/* New value to be set to the entry */
1085:Middlewares/Third_Party/FatFs/src/ff.c **** )
1086:Middlewares/Third_Party/FatFs/src/ff.c **** {
1087:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
1088:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *p;
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_INT_ERR;
1090:Middlewares/Third_Party/FatFs/src/ff.c **** 
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= 2 && clst < fs->n_fatent) {	/* Check if in valid range */
1092:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
1093:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :	/* Bitfield items */
1094:Middlewares/Third_Party/FatFs/src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
1096:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1097:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc++ % SS(fs);
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1100:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
1101:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1102:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc % SS(fs);
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
1104:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1105:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
ARM GAS  /tmp/ccTP8DMx.s 			page 34


1106:Middlewares/Third_Party/FatFs/src/ff.c **** 
1107:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT16 :	/* WORD aligned items */
1108:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
1109:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1110:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);
1111:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1112:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1113:Middlewares/Third_Party/FatFs/src/ff.c **** 
1114:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT32 :	/* DWORD aligned items */
1115:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1116:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_EXFAT :
1117:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1118:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
1119:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1120:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
1121:Middlewares/Third_Party/FatFs/src/ff.c **** 				val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % SS(fs)) & 0xF0000000);
1122:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1123:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + clst * 4 % SS(fs), val);
1124:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1125:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1126:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1127:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1128:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1129:Middlewares/Third_Party/FatFs/src/ff.c **** }
1130:Middlewares/Third_Party/FatFs/src/ff.c **** 
1131:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1132:Middlewares/Third_Party/FatFs/src/ff.c **** 
1133:Middlewares/Third_Party/FatFs/src/ff.c **** 
1134:Middlewares/Third_Party/FatFs/src/ff.c **** 
1135:Middlewares/Third_Party/FatFs/src/ff.c **** 
1136:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
1137:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1138:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Accessing FAT and Allocation Bitmap                            */
1139:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1140:Middlewares/Third_Party/FatFs/src/ff.c **** 
1141:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------*/
1142:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find a contiguous free cluster block */
1143:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------*/
1144:Middlewares/Third_Party/FatFs/src/ff.c **** 
1145:Middlewares/Third_Party/FatFs/src/ff.c **** static
1146:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD find_bitmap (	/* 0:Not found, 2..:Cluster block found, 0xFFFFFFFF:Disk error */
1147:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
1148:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,	/* Cluster number to scan from */
1149:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl	/* Number of contiguous clusters to find (1..) */
1150:Middlewares/Third_Party/FatFs/src/ff.c **** )
1151:Middlewares/Third_Party/FatFs/src/ff.c **** {
1152:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE bm, bv;
1153:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1154:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val, scl, ctr;
1155:Middlewares/Third_Party/FatFs/src/ff.c **** 
1156:Middlewares/Third_Party/FatFs/src/ff.c **** 
1157:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;	/* The first bit in the bitmap corresponds to cluster #2 */
1158:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) clst = 0;
1159:Middlewares/Third_Party/FatFs/src/ff.c **** 	scl = val = clst; ctr = 0;
1160:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1161:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, fs->database + val / 8 / SS(fs)) != FR_OK) return 0xFFFFFFFF;	/* (assuming bi
1162:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = val / 8 % SS(fs); bm = 1 << (val % 8);
ARM GAS  /tmp/ccTP8DMx.s 			page 35


1163:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1164:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
1165:Middlewares/Third_Party/FatFs/src/ff.c **** 				bv = fs->win[i] & bm; bm <<= 1;		/* Get bit value */
1166:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++val >= fs->n_fatent - 2) {	/* Next cluster (with wrap-around) */
1167:Middlewares/Third_Party/FatFs/src/ff.c **** 					val = 0; bm = 0; i = SS(fs);
1168:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1169:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!bv) {	/* Is it a free cluster? */
1170:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (++ctr == ncl) return scl + 2;	/* Check if run length is sufficient for required */
1171:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
1172:Middlewares/Third_Party/FatFs/src/ff.c **** 					scl = val; ctr = 0;		/* Encountered a cluster in-use, restart to scan */
1173:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1174:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (val == clst) return 0;	/* All cluster scanned? */
1175:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (bm);
1176:Middlewares/Third_Party/FatFs/src/ff.c **** 			bm = 1;
1177:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (++i < SS(fs));
1178:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1179:Middlewares/Third_Party/FatFs/src/ff.c **** }
1180:Middlewares/Third_Party/FatFs/src/ff.c **** 
1181:Middlewares/Third_Party/FatFs/src/ff.c **** 
1182:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------*/
1183:Middlewares/Third_Party/FatFs/src/ff.c **** /* Set/Clear a block of allocation bitmap */
1184:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------*/
1185:Middlewares/Third_Party/FatFs/src/ff.c **** 
1186:Middlewares/Third_Party/FatFs/src/ff.c **** static
1187:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT change_bitmap (
1188:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
1189:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,	/* Cluster number to change from */
1190:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl,	/* Number of clusters to be changed */
1191:Middlewares/Third_Party/FatFs/src/ff.c **** 	int bv		/* bit value to be set (0 or 1) */
1192:Middlewares/Third_Party/FatFs/src/ff.c **** )
1193:Middlewares/Third_Party/FatFs/src/ff.c **** {
1194:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE bm;
1195:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1196:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sect;
1197:Middlewares/Third_Party/FatFs/src/ff.c **** 
1198:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;	/* The first bit corresponds to cluster #2 */
1199:Middlewares/Third_Party/FatFs/src/ff.c **** 	sect = fs->database + clst / 8 / SS(fs);	/* Sector address (assuming bitmap is located top of the 
1200:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = clst / 8 % SS(fs);						/* Byte offset in the sector */
1201:Middlewares/Third_Party/FatFs/src/ff.c **** 	bm = 1 << (clst % 8);						/* Bit mask in the byte */
1202:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1203:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, sect++) != FR_OK) return FR_DISK_ERR;
1204:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1205:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
1206:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (bv == (int)((fs->win[i] & bm) != 0)) return FR_INT_ERR;	/* Is the bit expected value? */
1207:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->win[i] ^= bm;	/* Flip the bit */
1208:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
1209:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (--ncl == 0) return FR_OK;	/* All bits processed? */
1210:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (bm <<= 1);		/* Next bit */
1211:Middlewares/Third_Party/FatFs/src/ff.c **** 			bm = 1;
1212:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (++i < SS(fs));		/* Next byte */
1213:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0;
1214:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1215:Middlewares/Third_Party/FatFs/src/ff.c **** }
1216:Middlewares/Third_Party/FatFs/src/ff.c **** 
1217:Middlewares/Third_Party/FatFs/src/ff.c **** 
1218:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1219:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill the first fragment of the FAT chain    */
ARM GAS  /tmp/ccTP8DMx.s 			page 36


1220:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1221:Middlewares/Third_Party/FatFs/src/ff.c **** 
1222:Middlewares/Third_Party/FatFs/src/ff.c **** static
1223:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT fill_first_frag (
1224:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj	/* Pointer to the corresponding object */
1225:Middlewares/Third_Party/FatFs/src/ff.c **** )
1226:Middlewares/Third_Party/FatFs/src/ff.c **** {
1227:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1228:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, n;
1229:Middlewares/Third_Party/FatFs/src/ff.c **** 
1230:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (obj->stat == 3) {	/* Has the object been changed 'fragmented'? */
1231:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (cl = obj->sclust, n = obj->n_cont; n; cl++, n--) {	/* Create cluster chain on the FAT */
1232:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(obj->fs, cl, cl + 1);
1233:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
1234:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1235:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->stat = 0;	/* Change status 'FAT chain is valid' */
1236:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1237:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1238:Middlewares/Third_Party/FatFs/src/ff.c **** }
1239:Middlewares/Third_Party/FatFs/src/ff.c **** 
1240:Middlewares/Third_Party/FatFs/src/ff.c **** 
1241:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1242:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill the last fragment of the FAT chain     */
1243:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1244:Middlewares/Third_Party/FatFs/src/ff.c **** 
1245:Middlewares/Third_Party/FatFs/src/ff.c **** static
1246:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT fill_last_frag (
1247:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,	/* Pointer to the corresponding object */
1248:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD lcl,	/* Last cluster of the fragment */
1249:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD term	/* Value to set the last FAT entry */
1250:Middlewares/Third_Party/FatFs/src/ff.c **** )
1251:Middlewares/Third_Party/FatFs/src/ff.c **** {
1252:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1253:Middlewares/Third_Party/FatFs/src/ff.c **** 
1254:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (obj->n_frag > 0) {	/* Create the last chain on the FAT */
1255:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(obj->fs, lcl - obj->n_frag + 1, (obj->n_frag > 1) ? lcl - obj->n_frag + 2 : term);
1256:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
1257:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->n_frag--;
1258:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1259:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1260:Middlewares/Third_Party/FatFs/src/ff.c **** }
1261:Middlewares/Third_Party/FatFs/src/ff.c **** 
1262:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT && !_FS_READONLY */
1263:Middlewares/Third_Party/FatFs/src/ff.c **** 
1264:Middlewares/Third_Party/FatFs/src/ff.c **** 
1265:Middlewares/Third_Party/FatFs/src/ff.c **** 
1266:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1267:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1268:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Remove a cluster chain                                 */
1269:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1270:Middlewares/Third_Party/FatFs/src/ff.c **** static
1271:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT remove_chain (	/* FR_OK(0):succeeded, !=0:error */
1272:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,			/* Corresponding object */
1273:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,			/* Cluster to remove a chain from */
1274:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD pclst			/* Previous cluster of clst (0:an entire chain) */
1275:Middlewares/Third_Party/FatFs/src/ff.c **** )
1276:Middlewares/Third_Party/FatFs/src/ff.c **** {
ARM GAS  /tmp/ccTP8DMx.s 			page 37


1277:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
1278:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD nxt;
1279:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
1280:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT || _USE_TRIM
1281:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD scl = clst, ecl = clst;
1282:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1283:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
1284:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD rt[2];
1285:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1286:Middlewares/Third_Party/FatFs/src/ff.c **** 
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Check if in valid range */
1288:Middlewares/Third_Party/FatFs/src/ff.c **** 
1289:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Mark the previous cluster 'EOC' on the FAT if it exists */
1290:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (pclst && (!_FS_EXFAT || fs->fs_type != FS_EXFAT || obj->stat != 2)) {
1291:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, pclst, 0xFFFFFFFF);
1292:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
1293:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1294:Middlewares/Third_Party/FatFs/src/ff.c **** 
1295:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Remove the chain */
1296:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1297:Middlewares/Third_Party/FatFs/src/ff.c **** 		nxt = get_fat(obj, clst);			/* Get cluster status */
1298:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0) break;				/* Empty cluster? */
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
1301:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
1302:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, 0);		/* Mark the cluster 'free' on the FAT */
1303:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
1304:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1305:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst < fs->n_fatent - 2) {	/* Update FSINFO */
1306:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst++;
1307:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
1308:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1309:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT || _USE_TRIM
1310:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ecl + 1 == nxt) {	/* Is next cluster contiguous? */
1311:Middlewares/Third_Party/FatFs/src/ff.c **** 			ecl = nxt;
1312:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* End of contiguous cluster block */
1313:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1314:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
1315:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = change_bitmap(fs, scl, ecl - scl + 1, 0);	/* Mark the cluster block 'free' on the bitmap 
1316:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) return res;
1317:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1318:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1319:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
1320:Middlewares/Third_Party/FatFs/src/ff.c **** 			rt[0] = clust2sect(fs, scl);					/* Start sector */
1321:Middlewares/Third_Party/FatFs/src/ff.c **** 			rt[1] = clust2sect(fs, ecl) + fs->csize - 1;	/* End sector */
1322:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_ioctl(fs->drv, CTRL_TRIM, rt);				/* Inform device the block can be erased */
1323:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1324:Middlewares/Third_Party/FatFs/src/ff.c **** 			scl = ecl = nxt;
1325:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1326:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1327:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = nxt;					/* Next cluster */
1328:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
1329:Middlewares/Third_Party/FatFs/src/ff.c **** 
1330:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1331:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {
1332:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pclst == 0) {	/* Does the object have no chain? */
1333:Middlewares/Third_Party/FatFs/src/ff.c **** 			obj->stat = 0;		/* Change the object status 'initial' */
ARM GAS  /tmp/ccTP8DMx.s 			page 38


1334:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1335:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (obj->stat == 3 && pclst >= obj->sclust && pclst <= obj->sclust + obj->n_cont) {	/* Did the c
1336:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->stat = 2;	/* Change the object status 'contiguous' */
1337:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1338:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1339:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1340:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1341:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1342:Middlewares/Third_Party/FatFs/src/ff.c **** }
1343:Middlewares/Third_Party/FatFs/src/ff.c **** 
1344:Middlewares/Third_Party/FatFs/src/ff.c **** 
1345:Middlewares/Third_Party/FatFs/src/ff.c **** 
1346:Middlewares/Third_Party/FatFs/src/ff.c **** 
1347:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1348:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Stretch a chain or Create a new chain                  */
1349:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1350:Middlewares/Third_Party/FatFs/src/ff.c **** static
1351:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD create_chain (	/* 0:No free cluster, 1:Internal error, 0xFFFFFFFF:Disk error, >=2:New cluster
1352:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,			/* Corresponding object */
1353:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst			/* Cluster# to stretch, 0:Create a new chain */
1354:Middlewares/Third_Party/FatFs/src/ff.c **** )
1355:Middlewares/Third_Party/FatFs/src/ff.c **** {
1356:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cs, ncl, scl;
1357:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1358:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
1359:Middlewares/Third_Party/FatFs/src/ff.c **** 
1360:Middlewares/Third_Party/FatFs/src/ff.c **** 
1361:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0) {	/* Create a new chain */
1362:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = fs->last_clst;				/* Get suggested cluster to start from */
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
1364:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1365:Middlewares/Third_Party/FatFs/src/ff.c **** 	else {				/* Stretch current chain */
1366:Middlewares/Third_Party/FatFs/src/ff.c **** 		cs = get_fat(obj, clst);			/* Check the cluster status */
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < 2) return 1;				/* Invalid FAT value */
1368:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
1369:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
1370:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst;
1371:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1372:Middlewares/Third_Party/FatFs/src/ff.c **** 
1373:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1374:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
1375:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = find_bitmap(fs, scl, 1);				/* Find a free cluster */
1376:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == 0 || ncl == 0xFFFFFFFF) return ncl;	/* No free cluster or hard error? */
1377:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = change_bitmap(fs, ncl, 1, 1);			/* Mark the cluster 'in use' */
1378:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_INT_ERR) return 1;
1379:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_DISK_ERR) return 0xFFFFFFFF;
1380:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (clst == 0) {							/* Is it a new chain? */
1381:Middlewares/Third_Party/FatFs/src/ff.c **** 			obj->stat = 2;							/* Set status 'contiguous' */
1382:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {									/* It is a stretched chain */
1383:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (obj->stat == 2 && ncl != scl + 1) {	/* Is the chain got fragmented? */
1384:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->n_cont = scl - obj->sclust;	/* Set size of the contiguous part */
1385:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->stat = 3;						/* Change status 'just fragmented' */
1386:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1387:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1388:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (obj->stat != 2) {	/* Is the file non-contiguous? */
1389:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == clst + 1) {	/* Is the cluster next to previous one? */
1390:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->n_frag = obj->n_frag ? obj->n_frag + 1 : 2;	/* Increment size of last framgent */
ARM GAS  /tmp/ccTP8DMx.s 			page 39


1391:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* New fragment */
1392:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->n_frag == 0) obj->n_frag = 1;
1393:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = fill_last_frag(obj, clst, ncl);	/* Fill last fragment on the FAT and link it to new one *
1394:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) obj->n_frag = 1;
1395:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1396:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1397:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
1398:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1399:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* On the FAT12/16/32 volume */
1400:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = scl;	/* Start cluster */
1401:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
1402:Middlewares/Third_Party/FatFs/src/ff.c **** 			ncl++;							/* Next cluster */
1403:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl >= fs->n_fatent) {		/* Check wrap-around */
1404:Middlewares/Third_Party/FatFs/src/ff.c **** 				ncl = 2;
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl > scl) return 0;	/* No free cluster */
1406:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1407:Middlewares/Third_Party/FatFs/src/ff.c **** 			cs = get_fat(obj, ncl);			/* Get the cluster status */
1408:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 0) break;				/* Found a free cluster */
1409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* An error occurred */
1410:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == scl) return 0;		/* No free cluster */
1411:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1412:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, ncl, 0xFFFFFFFF);	/* Mark the new cluster 'EOC' */
1413:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && clst != 0) {
1414:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, ncl);	/* Link it from the previous one if needed */
1415:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1416:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1417:Middlewares/Third_Party/FatFs/src/ff.c **** 
1418:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {			/* Update FSINFO if function succeeded. */
1419:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = ncl;
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
1421:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag |= 1;
1422:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
1423:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;	/* Failed. Generate error status */
1424:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1425:Middlewares/Third_Party/FatFs/src/ff.c **** 
1426:Middlewares/Third_Party/FatFs/src/ff.c **** 	return ncl;		/* Return new cluster number or error status */
1427:Middlewares/Third_Party/FatFs/src/ff.c **** }
1428:Middlewares/Third_Party/FatFs/src/ff.c **** 
1429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1430:Middlewares/Third_Party/FatFs/src/ff.c **** 
1431:Middlewares/Third_Party/FatFs/src/ff.c **** 
1432:Middlewares/Third_Party/FatFs/src/ff.c **** 
1433:Middlewares/Third_Party/FatFs/src/ff.c **** 
1434:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
1435:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1436:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Convert offset into cluster with link map table        */
1437:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1438:Middlewares/Third_Party/FatFs/src/ff.c **** 
1439:Middlewares/Third_Party/FatFs/src/ff.c **** static
1440:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clmt_clust (	/* <2:Error, >=2:Cluster number */
1441:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
1442:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ofs		/* File offset to be converted to cluster# */
1443:Middlewares/Third_Party/FatFs/src/ff.c **** )
1444:Middlewares/Third_Party/FatFs/src/ff.c **** {
 790              		.loc 1 1444 0
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccTP8DMx.s 			page 40


 793              		@ frame_needed = 0, uses_anonymous_args = 0
 794              		@ link register save eliminated.
 795              	.LVL98:
1445:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, ncl, *tbl;
1446:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = fp->obj.fs;
 796              		.loc 1 1446 0
 797 0000 0368     		ldr	r3, [r0]
 798              	.LVL99:
1447:Middlewares/Third_Party/FatFs/src/ff.c **** 
1448:Middlewares/Third_Party/FatFs/src/ff.c **** 
1449:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl = fp->cltbl + 1;	/* Top of CLMT */
 799              		.loc 1 1449 0
 800 0002 C26A     		ldr	r2, [r0, #44]
 801 0004 0432     		adds	r2, r2, #4
 802              	.LVL100:
1450:Middlewares/Third_Party/FatFs/src/ff.c **** 	cl = (DWORD)(ofs / SS(fs) / fs->csize);	/* Cluster order from top of the file */
 803              		.loc 1 1450 0
 804 0006 490A     		lsrs	r1, r1, #9
 805              	.LVL101:
 806 0008 5889     		ldrh	r0, [r3, #10]
 807              	.LVL102:
 808 000a B1FBF0F1 		udiv	r1, r1, r0
 809              	.LVL103:
 810              	.L80:
1451:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1452:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
 811              		.loc 1 1452 0
 812 000e 1368     		ldr	r3, [r2]
 813              	.LVL104:
1453:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 814              		.loc 1 1453 0
 815 0010 3BB1     		cbz	r3, .L81
1454:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 816              		.loc 1 1454 0
 817 0012 9942     		cmp	r1, r3
 818 0014 02D3     		bcc	.L79
1455:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl -= ncl; tbl++;		/* Next fragment */
 819              		.loc 1 1455 0
 820 0016 C91A     		subs	r1, r1, r3
 821              	.LVL105:
 822 0018 0832     		adds	r2, r2, #8
 823              	.LVL106:
1456:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 824              		.loc 1 1456 0
 825 001a F8E7     		b	.L80
 826              	.LVL107:
 827              	.L79:
1457:Middlewares/Third_Party/FatFs/src/ff.c **** 	return cl + *tbl;	/* Return the cluster number */
 828              		.loc 1 1457 0
 829 001c 5068     		ldr	r0, [r2, #4]
 830 001e 0844     		add	r0, r0, r1
 831 0020 7047     		bx	lr
 832              	.L81:
1453:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 833              		.loc 1 1453 0
 834 0022 0020     		movs	r0, #0
1458:Middlewares/Third_Party/FatFs/src/ff.c **** }
ARM GAS  /tmp/ccTP8DMx.s 			page 41


 835              		.loc 1 1458 0
 836 0024 7047     		bx	lr
 837              		.cfi_endproc
 838              	.LFE145:
 840 0026 00BF     		.section	.text.ld_clust,"ax",%progbits
 841              		.align	2
 842              		.thumb
 843              		.thumb_func
 845              	ld_clust:
 846              	.LFB149:
1459:Middlewares/Third_Party/FatFs/src/ff.c **** 
1460:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_FASTSEEK */
1461:Middlewares/Third_Party/FatFs/src/ff.c **** 
1462:Middlewares/Third_Party/FatFs/src/ff.c **** 
1463:Middlewares/Third_Party/FatFs/src/ff.c **** 
1464:Middlewares/Third_Party/FatFs/src/ff.c **** 
1465:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1466:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Set directory index                              */
1467:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1468:Middlewares/Third_Party/FatFs/src/ff.c **** 
1469:Middlewares/Third_Party/FatFs/src/ff.c **** static
1470:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_sdi (	/* FR_OK(0):succeeded, !=0:error */
1471:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to directory object */
1472:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs		/* Offset of directory table */
1473:Middlewares/Third_Party/FatFs/src/ff.c **** )
1474:Middlewares/Third_Party/FatFs/src/ff.c **** {
1475:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD csz, clst;
1476:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
1477:Middlewares/Third_Party/FatFs/src/ff.c **** 
1478:Middlewares/Third_Party/FatFs/src/ff.c **** 
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR) || ofs % SZDIRE)
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
1481:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1482:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dptr = ofs;				/* Set current offset */
1483:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
1485:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = fs->dirbase;
1486:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
1487:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1488:Middlewares/Third_Party/FatFs/src/ff.c **** 
1489:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0) {	/* Static table (root-directory in FAT12/16) */
1490:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs / SZDIRE >= fs->n_rootdir)	return FR_INT_ERR;	/* Is index out of range? */
1491:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = fs->dirbase;
1492:Middlewares/Third_Party/FatFs/src/ff.c **** 
1493:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {			/* Dynamic table (sub-directory or root-directory in FAT32+) */
1494:Middlewares/Third_Party/FatFs/src/ff.c **** 		csz = (DWORD)fs->csize * SS(fs);	/* Bytes per cluster */
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (ofs >= csz) {				/* Follow cluster chain */
1496:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
1497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
1499:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
1500:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1501:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = clust2sect(fs, clst);
1502:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1503:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->clust = clst;					/* Current cluster# */
1504:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return FR_INT_ERR;
1505:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
ARM GAS  /tmp/ccTP8DMx.s 			page 42


1506:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
1507:Middlewares/Third_Party/FatFs/src/ff.c **** 
1508:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1509:Middlewares/Third_Party/FatFs/src/ff.c **** }
1510:Middlewares/Third_Party/FatFs/src/ff.c **** 
1511:Middlewares/Third_Party/FatFs/src/ff.c **** 
1512:Middlewares/Third_Party/FatFs/src/ff.c **** 
1513:Middlewares/Third_Party/FatFs/src/ff.c **** 
1514:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1515:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Move directory table index next                  */
1516:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1517:Middlewares/Third_Party/FatFs/src/ff.c **** 
1518:Middlewares/Third_Party/FatFs/src/ff.c **** static
1519:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_next (	/* FR_OK(0):succeeded, FR_NO_FILE:End of table, FR_DENIED:Could not stretch */
1520:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1521:Middlewares/Third_Party/FatFs/src/ff.c **** 	int stretch		/* 0: Do not stretch table, 1: Stretch table if needed */
1522:Middlewares/Third_Party/FatFs/src/ff.c **** )
1523:Middlewares/Third_Party/FatFs/src/ff.c **** {
1524:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs, clst;
1525:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
1526:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1527:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
1528:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1529:Middlewares/Third_Party/FatFs/src/ff.c **** 
1530:Middlewares/Third_Party/FatFs/src/ff.c **** 	ofs = dp->dptr + SZDIRE;	/* Next entry */
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) re
1532:Middlewares/Third_Party/FatFs/src/ff.c **** 
1533:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ofs % SS(fs) == 0) {	/* Sector changed? */
1534:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect++;				/* Next sector */
1535:Middlewares/Third_Party/FatFs/src/ff.c **** 
1536:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!dp->clust) {		/* Static table */
1537:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
1538:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = 0; return FR_NO_FILE;
1539:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1540:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1541:Middlewares/Third_Party/FatFs/src/ff.c **** 		else {					/* Dynamic table */
1542:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((ofs / SS(fs) & (fs->csize - 1)) == 0) {		/* Cluster changed? */
1543:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
1546:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
1547:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1548:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!stretch) {								/* If no stretch, report EOT */
1549:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->sect = 0; return FR_NO_FILE;
1550:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1551:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(&dp->obj, dp->clust);	/* Allocate a cluster */
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1555:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up the stretched table */
1556:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_EXFAT) dp->obj.stat |= 4;			/* The directory needs to be updated */
1557:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (sync_window(fs) != FR_OK) return FR_DISK_ERR;	/* Flush disk access window */
1558:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill t
1560:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
1562:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
ARM GAS  /tmp/ccTP8DMx.s 			page 43


1563:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect -= n;							/* Restore window offset */
1564:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1565:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!stretch) dp->sect = 0;					/* (this line is to suppress compiler warning) */
1566:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->sect = 0; return FR_NO_FILE;			/* Report EOT */
1567:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1568:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1569:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->clust = clst;		/* Initialize data for new cluster */
1570:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = clust2sect(fs, clst);
1571:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1572:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1573:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1574:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dptr = ofs;						/* Current entry */
1575:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
1576:Middlewares/Third_Party/FatFs/src/ff.c **** 
1577:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1578:Middlewares/Third_Party/FatFs/src/ff.c **** }
1579:Middlewares/Third_Party/FatFs/src/ff.c **** 
1580:Middlewares/Third_Party/FatFs/src/ff.c **** 
1581:Middlewares/Third_Party/FatFs/src/ff.c **** 
1582:Middlewares/Third_Party/FatFs/src/ff.c **** 
1583:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1584:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1585:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Reserve a block of directory entries             */
1586:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1587:Middlewares/Third_Party/FatFs/src/ff.c **** 
1588:Middlewares/Third_Party/FatFs/src/ff.c **** static
1589:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_alloc (	/* FR_OK(0):succeeded, !=0:error */
1590:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1591:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nent		/* Number of contiguous entries to allocate */
1592:Middlewares/Third_Party/FatFs/src/ff.c **** )
1593:Middlewares/Third_Party/FatFs/src/ff.c **** {
1594:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1595:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
1596:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
1597:Middlewares/Third_Party/FatFs/src/ff.c **** 
1598:Middlewares/Third_Party/FatFs/src/ff.c **** 
1599:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, 0);
1600:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
1601:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = 0;
1602:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1603:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, dp->sect);
1604:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1605:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1606:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((fs->fs_type == FS_EXFAT) ? (int)((dp->dir[XDIR_Type] & 0x80) == 0) : (int)(dp->dir[DIR_Name
1607:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1608:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dir[DIR_Name] == DDEM || dp->dir[DIR_Name] == 0) {
1609:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1610:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++n == nent) break;	/* A block of contiguous free entries is found */
1611:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
1612:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = 0;					/* Not a blank entry. Restart to search */
1613:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1614:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 1);
1615:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);	/* Next entry with table stretch enabled */
1616:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1617:Middlewares/Third_Party/FatFs/src/ff.c **** 
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
1619:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
ARM GAS  /tmp/ccTP8DMx.s 			page 44


1620:Middlewares/Third_Party/FatFs/src/ff.c **** }
1621:Middlewares/Third_Party/FatFs/src/ff.c **** 
1622:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
1623:Middlewares/Third_Party/FatFs/src/ff.c **** 
1624:Middlewares/Third_Party/FatFs/src/ff.c **** 
1625:Middlewares/Third_Party/FatFs/src/ff.c **** 
1626:Middlewares/Third_Party/FatFs/src/ff.c **** 
1627:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1628:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT: Directory handling - Load/Store start cluster number             */
1629:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1630:Middlewares/Third_Party/FatFs/src/ff.c **** 
1631:Middlewares/Third_Party/FatFs/src/ff.c **** static
1632:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD ld_clust (	/* Returns the top cluster value of the SFN entry */
1633:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* Pointer to the fs object */
1634:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir	/* Pointer to the key entry */
1635:Middlewares/Third_Party/FatFs/src/ff.c **** )
1636:Middlewares/Third_Party/FatFs/src/ff.c **** {
 847              		.loc 1 1636 0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 0, uses_anonymous_args = 0
 851              	.LVL108:
 852 0000 70B5     		push	{r4, r5, r6, lr}
 853              	.LCFI8:
 854              		.cfi_def_cfa_offset 16
 855              		.cfi_offset 4, -16
 856              		.cfi_offset 5, -12
 857              		.cfi_offset 6, -8
 858              		.cfi_offset 14, -4
 859 0002 0646     		mov	r6, r0
 860 0004 0D46     		mov	r5, r1
1637:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl;
1638:Middlewares/Third_Party/FatFs/src/ff.c **** 
1639:Middlewares/Third_Party/FatFs/src/ff.c **** 	cl = ld_word(dir + DIR_FstClusLO);
 861              		.loc 1 1639 0
 862 0006 01F11A00 		add	r0, r1, #26
 863              	.LVL109:
 864 000a FFF7FEFF 		bl	ld_word
 865              	.LVL110:
 866 000e 0446     		mov	r4, r0
 867              	.LVL111:
1640:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 868              		.loc 1 1640 0
 869 0010 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 870 0012 032B     		cmp	r3, #3
 871 0014 05D1     		bne	.L83
1641:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 872              		.loc 1 1641 0
 873 0016 05F11400 		add	r0, r5, #20
 874              	.LVL112:
 875 001a FFF7FEFF 		bl	ld_word
 876              	.LVL113:
 877 001e 44EA0040 		orr	r0, r4, r0, lsl #16
 878              	.LVL114:
 879              	.L83:
1642:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1643:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccTP8DMx.s 			page 45


1644:Middlewares/Third_Party/FatFs/src/ff.c **** 	return cl;
1645:Middlewares/Third_Party/FatFs/src/ff.c **** }
 880              		.loc 1 1645 0
 881 0022 70BD     		pop	{r4, r5, r6, pc}
 882              		.cfi_endproc
 883              	.LFE149:
 885              		.section	.text.st_clust,"ax",%progbits
 886              		.align	2
 887              		.thumb
 888              		.thumb_func
 890              	st_clust:
 891              	.LFB150:
1646:Middlewares/Third_Party/FatFs/src/ff.c **** 
1647:Middlewares/Third_Party/FatFs/src/ff.c **** 
1648:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1649:Middlewares/Third_Party/FatFs/src/ff.c **** static
1650:Middlewares/Third_Party/FatFs/src/ff.c **** void st_clust (
1651:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* Pointer to the fs object */
1652:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir,	/* Pointer to the key entry */
1653:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl	/* Value to be set */
1654:Middlewares/Third_Party/FatFs/src/ff.c **** )
1655:Middlewares/Third_Party/FatFs/src/ff.c **** {
 892              		.loc 1 1655 0
 893              		.cfi_startproc
 894              		@ args = 0, pretend = 0, frame = 0
 895              		@ frame_needed = 0, uses_anonymous_args = 0
 896              	.LVL115:
 897 0000 70B5     		push	{r4, r5, r6, lr}
 898              	.LCFI9:
 899              		.cfi_def_cfa_offset 16
 900              		.cfi_offset 4, -16
 901              		.cfi_offset 5, -12
 902              		.cfi_offset 6, -8
 903              		.cfi_offset 14, -4
 904 0002 0646     		mov	r6, r0
 905 0004 0C46     		mov	r4, r1
 906 0006 1546     		mov	r5, r2
1656:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dir + DIR_FstClusLO, (WORD)cl);
 907              		.loc 1 1656 0
 908 0008 91B2     		uxth	r1, r2
 909              	.LVL116:
 910 000a 04F11A00 		add	r0, r4, #26
 911              	.LVL117:
 912 000e FFF7FEFF 		bl	st_word
 913              	.LVL118:
1657:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 914              		.loc 1 1657 0
 915 0012 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 916 0014 032B     		cmp	r3, #3
 917 0016 04D1     		bne	.L85
1658:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 918              		.loc 1 1658 0
 919 0018 290C     		lsrs	r1, r5, #16
 920 001a 04F11400 		add	r0, r4, #20
 921 001e FFF7FEFF 		bl	st_word
 922              	.LVL119:
 923              	.L85:
ARM GAS  /tmp/ccTP8DMx.s 			page 46


 924 0022 70BD     		pop	{r4, r5, r6, pc}
 925              		.cfi_endproc
 926              	.LFE150:
 928              		.section	.text.get_fileinfo,"ax",%progbits
 929              		.align	2
 930              		.thumb
 931              		.thumb_func
 933              	get_fileinfo:
 934              	.LFB155:
1659:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1660:Middlewares/Third_Party/FatFs/src/ff.c **** }
1661:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1662:Middlewares/Third_Party/FatFs/src/ff.c **** 
1663:Middlewares/Third_Party/FatFs/src/ff.c **** 
1664:Middlewares/Third_Party/FatFs/src/ff.c **** 
1665:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
1666:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------------------------*/
1667:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: LFN handling                                                  */
1668:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------------------------*/
1669:Middlewares/Third_Party/FatFs/src/ff.c **** static
1670:Middlewares/Third_Party/FatFs/src/ff.c **** const BYTE LfnOfs[] = {1,3,5,7,9,14,16,18,20,22,24,28,30};	/* Offset of LFN characters in the direc
1671:Middlewares/Third_Party/FatFs/src/ff.c **** 
1672:Middlewares/Third_Party/FatFs/src/ff.c **** 
1673:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------*/
1674:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Compare a part of file name with an LFN entry */
1675:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------*/
1676:Middlewares/Third_Party/FatFs/src/ff.c **** static
1677:Middlewares/Third_Party/FatFs/src/ff.c **** int cmp_lfn (				/* 1:matched, 0:not matched */
1678:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfnbuf,	/* Pointer to the LFN working buffer to be compared */
1679:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir				/* Pointer to the directory entry containing the part of LFN */
1680:Middlewares/Third_Party/FatFs/src/ff.c **** )
1681:Middlewares/Third_Party/FatFs/src/ff.c **** {
1682:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1683:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc, uc;
1684:Middlewares/Third_Party/FatFs/src/ff.c **** 
1685:Middlewares/Third_Party/FatFs/src/ff.c **** 
1686:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO */
1687:Middlewares/Third_Party/FatFs/src/ff.c **** 
1688:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
1689:Middlewares/Third_Party/FatFs/src/ff.c **** 
1690:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
1691:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
1692:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {
1693:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN || ff_wtoupper(uc) != ff_wtoupper(lfnbuf[i++])) {	/* Compare it */
1694:Middlewares/Third_Party/FatFs/src/ff.c **** 				return 0;					/* Not matched */
1695:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1696:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = uc;
1697:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1698:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1699:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1700:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1701:Middlewares/Third_Party/FatFs/src/ff.c **** 
1702:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((dir[LDIR_Ord] & LLEF) && wc && lfnbuf[i]) return 0;	/* Last segment matched but different len
1703:Middlewares/Third_Party/FatFs/src/ff.c **** 
1704:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;		/* The part of LFN matched */
1705:Middlewares/Third_Party/FatFs/src/ff.c **** }
1706:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccTP8DMx.s 			page 47


1707:Middlewares/Third_Party/FatFs/src/ff.c **** 
1708:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 || _USE_LABEL || _FS_EXFAT
1709:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------*/
1710:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Pick a part of file name from an LFN entry */
1711:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------*/
1712:Middlewares/Third_Party/FatFs/src/ff.c **** static
1713:Middlewares/Third_Party/FatFs/src/ff.c **** int pick_lfn (			/* 1:succeeded, 0:buffer overflow or invalid LFN entry */
1714:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR* lfnbuf,		/* Pointer to the LFN working buffer */
1715:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir			/* Pointer to the LFN entry */
1716:Middlewares/Third_Party/FatFs/src/ff.c **** )
1717:Middlewares/Third_Party/FatFs/src/ff.c **** {
1718:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1719:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc, uc;
1720:Middlewares/Third_Party/FatFs/src/ff.c **** 
1721:Middlewares/Third_Party/FatFs/src/ff.c **** 
1722:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO is 0 */
1723:Middlewares/Third_Party/FatFs/src/ff.c **** 
1724:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = ((dir[LDIR_Ord] & ~LLEF) - 1) * 13;	/* Offset in the LFN buffer */
1725:Middlewares/Third_Party/FatFs/src/ff.c **** 
1726:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
1727:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
1728:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {
1729:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
1730:Middlewares/Third_Party/FatFs/src/ff.c **** 			lfnbuf[i++] = wc = uc;			/* Store it */
1731:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1732:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1733:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1734:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1735:Middlewares/Third_Party/FatFs/src/ff.c **** 
1736:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dir[LDIR_Ord] & LLEF) {				/* Put terminator if it is the last LFN part */
1737:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i >= _MAX_LFN) return 0;		/* Buffer overflow? */
1738:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfnbuf[i] = 0;
1739:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1740:Middlewares/Third_Party/FatFs/src/ff.c **** 
1741:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;		/* The part of LFN is valid */
1742:Middlewares/Third_Party/FatFs/src/ff.c **** }
1743:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1744:Middlewares/Third_Party/FatFs/src/ff.c **** 
1745:Middlewares/Third_Party/FatFs/src/ff.c **** 
1746:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1747:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------*/
1748:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Create an entry of LFN entries */
1749:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------*/
1750:Middlewares/Third_Party/FatFs/src/ff.c **** static
1751:Middlewares/Third_Party/FatFs/src/ff.c **** void put_lfn (
1752:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn,	/* Pointer to the LFN */
1753:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir,			/* Pointer to the LFN entry to be created */
1754:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ord,			/* LFN order (1-20) */
1755:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum			/* Checksum of the corresponding SFN */
1756:Middlewares/Third_Party/FatFs/src/ff.c **** )
1757:Middlewares/Third_Party/FatFs/src/ff.c **** {
1758:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1759:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc;
1760:Middlewares/Third_Party/FatFs/src/ff.c **** 
1761:Middlewares/Third_Party/FatFs/src/ff.c **** 
1762:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Chksum] = sum;			/* Set checksum */
1763:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
ARM GAS  /tmp/ccTP8DMx.s 			page 48


1764:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Type] = 0;
1765:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dir + LDIR_FstClusLO, 0);
1766:Middlewares/Third_Party/FatFs/src/ff.c **** 
1767:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = (ord - 1) * 13;				/* Get offset in the LFN working buffer */
1768:Middlewares/Third_Party/FatFs/src/ff.c **** 	s = wc = 0;
1769:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1770:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc != 0xFFFF) wc = lfn[i++];	/* Get an effective character */
1771:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(dir + LfnOfs[s], wc);		/* Put it */
1772:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc == 0) wc = 0xFFFF;		/* Padding characters for left locations */
1773:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (++s < 13);
1774:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (wc == 0xFFFF || !lfn[i]) ord |= LLEF;	/* Last LFN part is the start of LFN sequence */
1775:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Ord] = ord;			/* Set the LFN order */
1776:Middlewares/Third_Party/FatFs/src/ff.c **** }
1777:Middlewares/Third_Party/FatFs/src/ff.c **** 
1778:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
1779:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_LFN != 0 */
1780:Middlewares/Third_Party/FatFs/src/ff.c **** 
1781:Middlewares/Third_Party/FatFs/src/ff.c **** 
1782:Middlewares/Third_Party/FatFs/src/ff.c **** 
1783:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0 && !_FS_READONLY
1784:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1785:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Create a Numbered SFN                                        */
1786:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1787:Middlewares/Third_Party/FatFs/src/ff.c **** 
1788:Middlewares/Third_Party/FatFs/src/ff.c **** static
1789:Middlewares/Third_Party/FatFs/src/ff.c **** void gen_numname (
1790:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dst,			/* Pointer to the buffer to store numbered SFN */
1791:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* src,	/* Pointer to SFN */
1792:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn,	/* Pointer to LFN */
1793:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT seq			/* Sequence number */
1794:Middlewares/Third_Party/FatFs/src/ff.c **** )
1795:Middlewares/Third_Party/FatFs/src/ff.c **** {
1796:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ns[8], c;
1797:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
1798:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc;
1799:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sr;
1800:Middlewares/Third_Party/FatFs/src/ff.c **** 
1801:Middlewares/Third_Party/FatFs/src/ff.c **** 
1802:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dst, src, 11);
1803:Middlewares/Third_Party/FatFs/src/ff.c **** 
1804:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (seq > 5) {	/* In case of many collisions, generate a hash number instead of sequential number 
1805:Middlewares/Third_Party/FatFs/src/ff.c **** 		sr = seq;
1806:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (*lfn) {	/* Create a CRC */
1807:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = *lfn++;
1808:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; i < 16; i++) {
1809:Middlewares/Third_Party/FatFs/src/ff.c **** 				sr = (sr << 1) + (wc & 1);
1810:Middlewares/Third_Party/FatFs/src/ff.c **** 				wc >>= 1;
1811:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sr & 0x10000) sr ^= 0x11021;
1812:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1813:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1814:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq = (UINT)sr;
1815:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1816:Middlewares/Third_Party/FatFs/src/ff.c **** 
1817:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* itoa (hexdecimal) */
1818:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = 7;
1819:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1820:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (BYTE)((seq % 16) + '0');
ARM GAS  /tmp/ccTP8DMx.s 			page 49


1821:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c > '9') c += 7;
1822:Middlewares/Third_Party/FatFs/src/ff.c **** 		ns[i--] = c;
1823:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq /= 16;
1824:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (seq);
1825:Middlewares/Third_Party/FatFs/src/ff.c **** 	ns[i] = '~';
1826:Middlewares/Third_Party/FatFs/src/ff.c **** 
1827:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Append the number */
1828:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (j = 0; j < i && dst[j] != ' '; j++) {
1829:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(dst[j])) {
1830:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (j == i - 1) break;
1831:Middlewares/Third_Party/FatFs/src/ff.c **** 			j++;
1832:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1833:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1834:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1835:Middlewares/Third_Party/FatFs/src/ff.c **** 		dst[j++] = (i < 8) ? ns[i++] : ' ';
1836:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (j < 8);
1837:Middlewares/Third_Party/FatFs/src/ff.c **** }
1838:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_LFN != 0 && !_FS_READONLY */
1839:Middlewares/Third_Party/FatFs/src/ff.c **** 
1840:Middlewares/Third_Party/FatFs/src/ff.c **** 
1841:Middlewares/Third_Party/FatFs/src/ff.c **** 
1842:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
1843:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1844:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Calculate checksum of an SFN entry                           */
1845:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1846:Middlewares/Third_Party/FatFs/src/ff.c **** 
1847:Middlewares/Third_Party/FatFs/src/ff.c **** static
1848:Middlewares/Third_Party/FatFs/src/ff.c **** BYTE sum_sfn (
1849:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir		/* Pointer to the SFN entry */
1850:Middlewares/Third_Party/FatFs/src/ff.c **** )
1851:Middlewares/Third_Party/FatFs/src/ff.c **** {
1852:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum = 0;
1853:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n = 11;
1854:Middlewares/Third_Party/FatFs/src/ff.c **** 
1855:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1856:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = (sum >> 1) + (sum << 7) + *dir++;
1857:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--n);
1858:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1859:Middlewares/Third_Party/FatFs/src/ff.c **** }
1860:Middlewares/Third_Party/FatFs/src/ff.c **** 
1861:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_LFN != 0 */
1862:Middlewares/Third_Party/FatFs/src/ff.c **** 
1863:Middlewares/Third_Party/FatFs/src/ff.c **** 
1864:Middlewares/Third_Party/FatFs/src/ff.c **** 
1865:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1866:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1867:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Checksum                                                       */
1868:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1869:Middlewares/Third_Party/FatFs/src/ff.c **** 
1870:Middlewares/Third_Party/FatFs/src/ff.c **** static
1871:Middlewares/Third_Party/FatFs/src/ff.c **** WORD xdir_sum (			/* Get checksum of the directoly block */
1872:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir		/* Directory entry block to be calculated */
1873:Middlewares/Third_Party/FatFs/src/ff.c **** )
1874:Middlewares/Third_Party/FatFs/src/ff.c **** {
1875:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, szblk;
1876:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD sum;
1877:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccTP8DMx.s 			page 50


1878:Middlewares/Third_Party/FatFs/src/ff.c **** 
1879:Middlewares/Third_Party/FatFs/src/ff.c **** 	szblk = (dir[XDIR_NumSec] + 1) * SZDIRE;
1880:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = sum = 0; i < szblk; i++) {
1881:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == XDIR_SetSum) {	/* Skip sum field */
1882:Middlewares/Third_Party/FatFs/src/ff.c **** 			i++;
1883:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1884:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + dir[i];
1885:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1886:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1887:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1888:Middlewares/Third_Party/FatFs/src/ff.c **** }
1889:Middlewares/Third_Party/FatFs/src/ff.c **** 
1890:Middlewares/Third_Party/FatFs/src/ff.c **** 
1891:Middlewares/Third_Party/FatFs/src/ff.c **** 
1892:Middlewares/Third_Party/FatFs/src/ff.c **** static
1893:Middlewares/Third_Party/FatFs/src/ff.c **** WORD xname_sum (		/* Get check sum (to be used as hash) of the name */
1894:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* name	/* File name to be calculated */
1895:Middlewares/Third_Party/FatFs/src/ff.c **** )
1896:Middlewares/Third_Party/FatFs/src/ff.c **** {
1897:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
1898:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD sum = 0;
1899:Middlewares/Third_Party/FatFs/src/ff.c **** 
1900:Middlewares/Third_Party/FatFs/src/ff.c **** 
1901:Middlewares/Third_Party/FatFs/src/ff.c **** 	while ((chr = *name++) != 0) {
1902:Middlewares/Third_Party/FatFs/src/ff.c **** 		chr = ff_wtoupper(chr);		/* File name needs to be ignored case */
1903:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + (chr & 0xFF);
1904:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + (chr >> 8);
1905:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1906:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1907:Middlewares/Third_Party/FatFs/src/ff.c **** }
1908:Middlewares/Third_Party/FatFs/src/ff.c **** 
1909:Middlewares/Third_Party/FatFs/src/ff.c **** 
1910:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _USE_MKFS
1911:Middlewares/Third_Party/FatFs/src/ff.c **** static
1912:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD xsum32 (
1913:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE  dat,	/* Data to be sumed */
1914:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sum	/* Previous value */
1915:Middlewares/Third_Party/FatFs/src/ff.c **** )
1916:Middlewares/Third_Party/FatFs/src/ff.c **** {
1917:Middlewares/Third_Party/FatFs/src/ff.c **** 	sum = ((sum & 1) ? 0x80000000 : 0) + (sum >> 1) + dat;
1918:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1919:Middlewares/Third_Party/FatFs/src/ff.c **** }
1920:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1921:Middlewares/Third_Party/FatFs/src/ff.c **** 
1922:Middlewares/Third_Party/FatFs/src/ff.c **** 
1923:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2
1924:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------*/
1925:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Get object information from a directory block */
1926:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------*/
1927:Middlewares/Third_Party/FatFs/src/ff.c **** 
1928:Middlewares/Third_Party/FatFs/src/ff.c **** static
1929:Middlewares/Third_Party/FatFs/src/ff.c **** void get_xdir_info (
1930:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb,			/* Pointer to the direcotry entry block 85+C0+C1s */
1931:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Buffer to store the extracted file information */
1932:Middlewares/Third_Party/FatFs/src/ff.c **** )
1933:Middlewares/Third_Party/FatFs/src/ff.c **** {
1934:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT di, si;
ARM GAS  /tmp/ccTP8DMx.s 			page 51


1935:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
1936:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
1937:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nc;
1938:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1939:Middlewares/Third_Party/FatFs/src/ff.c **** 
1940:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get file name */
1941:Middlewares/Third_Party/FatFs/src/ff.c **** 	di = 0;
1942:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
1943:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = SZDIRE * 2; di < dirb[XDIR_NumName]; si += 2, di++) {
1944:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((si % SZDIRE) == 0) si += 2;		/* Skip entry type field */
1945:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ld_word(dirb + si);					/* Get a character */
1946:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (di >= _MAX_LFN) { di = 0; break; }	/* Buffer overflow --> inaccessible object name */
1947:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[di] = w;						/* Store it */
1948:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1949:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1950:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = SZDIRE * 2, nc = 0; nc < dirb[XDIR_NumName]; si += 2, nc++) {
1951:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((si % SZDIRE) == 0) si += 2;		/* Skip entry type field */
1952:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ff_convert(ld_word(dirb + si), 0);	/* Get a character and Unicode -> OEM */
1953:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_DF1S && w >= 0x100) {				/* Is it a double byte char? (always false at SBCS cfg) */
1954:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->fname[di++] = (char)(w >> 8);	/* Put 1st byte of the DBC */
1955:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1956:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == 0 || di >= _MAX_LFN) { di = 0; break; }	/* Invalid char or buffer overflow --> inaccessi
1957:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[di++] = (char)w;
1958:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1959:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1960:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (di == 0) fno->fname[di++] = '?';	/* Inaccessible object name? */
1961:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fname[di] = 0;						/* Terminate file name */
1962:Middlewares/Third_Party/FatFs/src/ff.c **** 
1963:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->altname[0] = 0;							/* No SFN */
1964:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fattrib = dirb[XDIR_Attr];					/* Attribute */
1965:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fsize = (fno->fattrib & AM_DIR) ? 0 : ld_qword(dirb + XDIR_FileSize);	/* Size */
1966:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->ftime = ld_word(dirb + XDIR_ModTime + 0);	/* Time */
1967:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fdate = ld_word(dirb + XDIR_ModTime + 2);	/* Date */
1968:Middlewares/Third_Party/FatFs/src/ff.c **** }
1969:Middlewares/Third_Party/FatFs/src/ff.c **** 
1970:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 */
1971:Middlewares/Third_Party/FatFs/src/ff.c **** 
1972:Middlewares/Third_Party/FatFs/src/ff.c **** 
1973:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------*/
1974:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Get a directry entry block */
1975:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------*/
1976:Middlewares/Third_Party/FatFs/src/ff.c **** 
1977:Middlewares/Third_Party/FatFs/src/ff.c **** static
1978:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT load_xdir (	/* FR_INT_ERR: invalid entry block */
1979:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp			/* Pointer to the reading direcotry object pointing the 85 entry */
1980:Middlewares/Third_Party/FatFs/src/ff.c **** )
1981:Middlewares/Third_Party/FatFs/src/ff.c **** {
1982:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1983:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, sz_ent;
1984:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb = dp->obj.fs->dirbuf;	/* Pointer to the on-memory direcotry entry block 85+C0+C1s */
1985:Middlewares/Third_Party/FatFs/src/ff.c **** 
1986:Middlewares/Third_Party/FatFs/src/ff.c **** 
1987:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Load 85 entry */
1988:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = move_window(dp->obj.fs, dp->sect);
1989:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
1990:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->dir[XDIR_Type] != 0x85) return FR_INT_ERR;
1991:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dirb + 0, dp->dir, SZDIRE);
ARM GAS  /tmp/ccTP8DMx.s 			page 52


1992:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_ent = (dirb[XDIR_NumSec] + 1) * SZDIRE;
1993:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sz_ent < 3 * SZDIRE || sz_ent > 19 * SZDIRE) return FR_INT_ERR;
1994:Middlewares/Third_Party/FatFs/src/ff.c **** 
1995:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Load C0 entry */
1996:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_next(dp, 0);
1997:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
1998:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = move_window(dp->obj.fs, dp->sect);
1999:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
2000:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->dir[XDIR_Type] != 0xC0) return FR_INT_ERR;
2001:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dirb + SZDIRE, dp->dir, SZDIRE);
2002:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (MAXDIRB(dirb[XDIR_NumName]) > sz_ent) return FR_INT_ERR;
2003:Middlewares/Third_Party/FatFs/src/ff.c **** 
2004:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Load C1 entries */
2005:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = SZDIRE * 2;	/* C1 offset */
2006:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2007:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);
2008:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2009:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->obj.fs, dp->sect);
2010:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2011:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->dir[XDIR_Type] != 0xC1) return FR_INT_ERR;
2012:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i < MAXDIRB(_MAX_LFN)) mem_cpy(dirb + i, dp->dir, SZDIRE);
2013:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while ((i += SZDIRE) < sz_ent);
2014:Middlewares/Third_Party/FatFs/src/ff.c **** 
2015:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Sanity check (do it when accessible object name) */
2016:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i <= MAXDIRB(_MAX_LFN)) {
2017:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (xdir_sum(dirb) != ld_word(dirb + XDIR_SetSum)) return FR_INT_ERR;
2018:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2019:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2020:Middlewares/Third_Party/FatFs/src/ff.c **** }
2021:Middlewares/Third_Party/FatFs/src/ff.c **** 
2022:Middlewares/Third_Party/FatFs/src/ff.c **** 
2023:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY || _FS_RPATH != 0
2024:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------*/
2025:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Load the object's directory entry block */
2026:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------*/
2027:Middlewares/Third_Party/FatFs/src/ff.c **** static
2028:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT load_obj_dir (
2029:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Blank directory object to be used to access containing direcotry */
2030:Middlewares/Third_Party/FatFs/src/ff.c **** 	const _FDID* obj	/* Object with its containing directory information */
2031:Middlewares/Third_Party/FatFs/src/ff.c **** )
2032:Middlewares/Third_Party/FatFs/src/ff.c **** {
2033:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2034:Middlewares/Third_Party/FatFs/src/ff.c **** 
2035:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Open object containing directory */
2036:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.fs = obj->fs;
2037:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.sclust = obj->c_scl;
2038:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.stat = (BYTE)obj->c_size;
2039:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.objsize = obj->c_size & 0xFFFFFF00;
2040:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->blk_ofs = obj->c_ofs;
2041:Middlewares/Third_Party/FatFs/src/ff.c **** 
2042:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, dp->blk_ofs);	/* Goto object's entry block */
2043:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2044:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = load_xdir(dp);		/* Load the object's entry block */
2045:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2046:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2047:Middlewares/Third_Party/FatFs/src/ff.c **** }
2048:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  /tmp/ccTP8DMx.s 			page 53


2049:Middlewares/Third_Party/FatFs/src/ff.c **** 
2050:Middlewares/Third_Party/FatFs/src/ff.c **** 
2051:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2052:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------*/
2053:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Store the directory block to the media */
2054:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------*/
2055:Middlewares/Third_Party/FatFs/src/ff.c **** static
2056:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT store_xdir (
2057:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Pointer to the direcotry object */
2058:Middlewares/Third_Party/FatFs/src/ff.c **** )
2059:Middlewares/Third_Party/FatFs/src/ff.c **** {
2060:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2061:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nent;
2062:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb = dp->obj.fs->dirbuf;	/* Pointer to the direcotry entry block 85+C0+C1s */
2063:Middlewares/Third_Party/FatFs/src/ff.c **** 
2064:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create set sum */
2065:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dirb + XDIR_SetSum, xdir_sum(dirb));
2066:Middlewares/Third_Party/FatFs/src/ff.c **** 	nent = dirb[XDIR_NumSec] + 1;
2067:Middlewares/Third_Party/FatFs/src/ff.c **** 
2068:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Store the set of directory to the volume */
2069:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, dp->blk_ofs);
2070:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (res == FR_OK) {
2071:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->obj.fs, dp->sect);
2072:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2073:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(dp->dir, dirb, SZDIRE);
2074:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->obj.fs->wflag = 1;
2075:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (--nent == 0) break;
2076:Middlewares/Third_Party/FatFs/src/ff.c **** 		dirb += SZDIRE;
2077:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);
2078:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2079:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (res == FR_OK || res == FR_DISK_ERR) ? res : FR_INT_ERR;
2080:Middlewares/Third_Party/FatFs/src/ff.c **** }
2081:Middlewares/Third_Party/FatFs/src/ff.c **** 
2082:Middlewares/Third_Party/FatFs/src/ff.c **** 
2083:Middlewares/Third_Party/FatFs/src/ff.c **** 
2084:Middlewares/Third_Party/FatFs/src/ff.c **** /*-------------------------------------------*/
2085:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Create a new directory enrty block */
2086:Middlewares/Third_Party/FatFs/src/ff.c **** /*-------------------------------------------*/
2087:Middlewares/Third_Party/FatFs/src/ff.c **** 
2088:Middlewares/Third_Party/FatFs/src/ff.c **** static
2089:Middlewares/Third_Party/FatFs/src/ff.c **** void create_xdir (
2090:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb,			/* Pointer to the direcotry entry block buffer */
2091:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn	/* Pointer to the nul terminated file name */
2092:Middlewares/Third_Party/FatFs/src/ff.c **** )
2093:Middlewares/Third_Party/FatFs/src/ff.c **** {
2094:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
2095:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE nb, nc;
2096:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
2097:Middlewares/Third_Party/FatFs/src/ff.c **** 
2098:Middlewares/Third_Party/FatFs/src/ff.c **** 
2099:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create 85+C0 entry */
2100:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(dirb, 0, 2 * SZDIRE);
2101:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_Type] = 0x85;
2102:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_Type + SZDIRE] = 0xC0;
2103:Middlewares/Third_Party/FatFs/src/ff.c **** 
2104:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create C1 entries */
2105:Middlewares/Third_Party/FatFs/src/ff.c **** 	nc = 0; nb = 1; chr = 1; i = SZDIRE * 2;
ARM GAS  /tmp/ccTP8DMx.s 			page 54


2106:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2107:Middlewares/Third_Party/FatFs/src/ff.c **** 		dirb[i++] = 0xC1; dirb[i++] = 0;	/* Entry type C1 */
2108:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {	/* Fill name field */
2109:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (chr && (chr = lfn[nc]) != 0) nc++;	/* Get a character if exist */
2110:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(dirb + i, chr); 		/* Store it */
2111:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while ((i += 2) % SZDIRE != 0);
2112:Middlewares/Third_Party/FatFs/src/ff.c **** 		nb++;
2113:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (lfn[nc]);	/* Fill next entry if any char follows */
2114:Middlewares/Third_Party/FatFs/src/ff.c **** 
2115:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_NumName] = nc;	/* Set name length */
2116:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_NumSec] = nb;		/* Set block length */
2117:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dirb + XDIR_NameHash, xname_sum(lfn));	/* Set name hash */
2118:Middlewares/Third_Party/FatFs/src/ff.c **** }
2119:Middlewares/Third_Party/FatFs/src/ff.c **** 
2120:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
2121:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT */
2122:Middlewares/Third_Party/FatFs/src/ff.c **** 
2123:Middlewares/Third_Party/FatFs/src/ff.c **** 
2124:Middlewares/Third_Party/FatFs/src/ff.c **** 
2125:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 || _USE_LABEL || _FS_EXFAT
2126:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2127:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read an object from the directory                                     */
2128:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2129:Middlewares/Third_Party/FatFs/src/ff.c **** 
2130:Middlewares/Third_Party/FatFs/src/ff.c **** static
2131:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_read (
2132:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
2133:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol			/* Filtered by 0:file/directory or 1:volume label */
2134:Middlewares/Third_Party/FatFs/src/ff.c **** )
2135:Middlewares/Third_Party/FatFs/src/ff.c **** {
2136:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_NO_FILE;
2137:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2138:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, c;
2139:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2140:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ord = 0xFF, sum = 0xFF;
2141:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2142:Middlewares/Third_Party/FatFs/src/ff.c **** 
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (dp->sect) {
2144:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
2145:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2146:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];	/* Test for the entry type */
2147:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) {
2148:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_NO_FILE; break; /* Reached to end of the directory */
2149:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2150:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2151:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2152:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_USE_LABEL && vol) {
2153:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c == 0x83) break;	/* Volume label entry? */
2154:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2155:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c == 0x85) {		/* Start of the file entry block? */
2156:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->blk_ofs = dp->dptr;	/* Get location of the block */
2157:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = load_xdir(dp);	/* Load the entry block */
2158:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
2159:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->obj.attr = fs->dirbuf[XDIR_Attr] & AM_MASK;	/* Get attribute */
2160:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2161:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
2162:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
ARM GAS  /tmp/ccTP8DMx.s 			page 55


2163:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2164:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else
2165:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2166:Middlewares/Third_Party/FatFs/src/ff.c **** 		{	/* On the FAT12/16/32 volume */
2167:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;	/* Get attribute */
2168:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2169:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == DDEM || c == '.' || (int)((a & ~AM_ARC) == AM_VOL) != vol) {	/* An entry without valid 
2170:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF;
2171:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2172:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (a == AM_LFN) {			/* An LFN entry is found */
2173:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c & LLEF) {			/* Is it start of an LFN sequence? */
2174:Middlewares/Third_Party/FatFs/src/ff.c **** 						sum = dp->dir[LDIR_Chksum];
2175:Middlewares/Third_Party/FatFs/src/ff.c **** 						c &= (BYTE)~LLEF; ord = c;
2176:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = dp->dptr;
2177:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2178:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Check LFN validity and capture it */
2179:Middlewares/Third_Party/FatFs/src/ff.c **** 					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && pick_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0
2180:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* An SFN entry is found */
2181:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ord || sum != sum_sfn(dp->dir)) {	/* Is there a valid LFN? */
2182:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = 0xFFFFFFFF;			/* It has no LFN. */
2183:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2184:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
2185:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2186:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2187:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* Non LFN configuration */
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c != DDEM && c != '.' && a != AM_LFN && (int)((a & ~AM_ARC) == AM_VOL) == vol) {	/* Is it a 
2189:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
2190:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2191:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2192:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2193:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);		/* Next entry */
2194:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2195:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2196:Middlewares/Third_Party/FatFs/src/ff.c **** 
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) dp->sect = 0;		/* Terminate the read operation on error or EOT */
2198:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2199:Middlewares/Third_Party/FatFs/src/ff.c **** }
2200:Middlewares/Third_Party/FatFs/src/ff.c **** 
2201:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _USE_LABEL || _FS_RPATH >= 2 */
2202:Middlewares/Third_Party/FatFs/src/ff.c **** 
2203:Middlewares/Third_Party/FatFs/src/ff.c **** 
2204:Middlewares/Third_Party/FatFs/src/ff.c **** 
2205:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2206:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Find an object in the directory                  */
2207:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2208:Middlewares/Third_Party/FatFs/src/ff.c **** 
2209:Middlewares/Third_Party/FatFs/src/ff.c **** static
2210:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_find (	/* FR_OK(0):succeeded, !=0:error */
2211:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp			/* Pointer to the directory object with the file name */
2212:Middlewares/Third_Party/FatFs/src/ff.c **** )
2213:Middlewares/Third_Party/FatFs/src/ff.c **** {
2214:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2215:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2216:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c;
2217:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2218:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, ord, sum;
2219:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  /tmp/ccTP8DMx.s 			page 56


2220:Middlewares/Third_Party/FatFs/src/ff.c **** 
2221:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, 0);			/* Rewind directory object */
2222:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
2223:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2224:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2225:Middlewares/Third_Party/FatFs/src/ff.c **** 		BYTE nc;
2226:Middlewares/Third_Party/FatFs/src/ff.c **** 		UINT di, ni;
2227:Middlewares/Third_Party/FatFs/src/ff.c **** 		WORD hash = xname_sum(fs->lfnbuf);		/* Hash value of the name to find */
2228:Middlewares/Third_Party/FatFs/src/ff.c **** 
2229:Middlewares/Third_Party/FatFs/src/ff.c **** 		while ((res = dir_read(dp, 0)) == FR_OK) {	/* Read an item */
2230:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_LFN < 255
2231:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->dirbuf[XDIR_NumName] > _MAX_LFN) continue;			/* Skip comparison if inaccessible object n
2232:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2233:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->dirbuf + XDIR_NameHash) != hash) continue;	/* Skip comparison if hash mismatched
2234:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (nc = fs->dirbuf[XDIR_NumName], di = SZDIRE * 2, ni = 0; nc; nc--, di += 2, ni++) {	/* Compa
2235:Middlewares/Third_Party/FatFs/src/ff.c **** 				if ((di % SZDIRE) == 0) di += 2;
2236:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ff_wtoupper(ld_word(fs->dirbuf + di)) != ff_wtoupper(fs->lfnbuf[ni])) break;
2237:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2238:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nc == 0 && !fs->lfnbuf[ni]) break;	/* Name matched? */
2239:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2240:Middlewares/Third_Party/FatFs/src/ff.c **** 		return res;
2241:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2242:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2243:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* On the FAT12/16/32 volume */
2244:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2245:Middlewares/Third_Party/FatFs/src/ff.c **** 	ord = sum = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2246:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2247:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2248:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
2249:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2250:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];
2251:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
2252:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2253:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;
2254:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
2255:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2256:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
2257:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (a == AM_LFN) {			/* An LFN entry is found */
2258:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_NOLFN)) {
2259:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c & LLEF) {		/* Is it start of LFN sequence? */
2260:Middlewares/Third_Party/FatFs/src/ff.c **** 						sum = dp->dir[LDIR_Chksum];
2261:Middlewares/Third_Party/FatFs/src/ff.c **** 						c &= (BYTE)~LLEF; ord = c;	/* LFN start order */
2262:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = dp->dptr;	/* Start offset of LFN */
2263:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2264:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Check validity of the LFN entry and compare it with given name */
2265:Middlewares/Third_Party/FatFs/src/ff.c **** 					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0x
2266:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2267:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* An SFN entry is found */
2268:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!ord && sum == sum_sfn(dp->dir)) break;	/* LFN matched? */
2269:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* SFN matched? */
2270:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2271:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2272:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2273:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* Non LFN configuration */
2274:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->obj.attr = dp->dir[DIR_Attr] & AM_MASK;
2275:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry
2276:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  /tmp/ccTP8DMx.s 			page 57


2277:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);	/* Next entry */
2278:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (res == FR_OK);
2279:Middlewares/Third_Party/FatFs/src/ff.c **** 
2280:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2281:Middlewares/Third_Party/FatFs/src/ff.c **** }
2282:Middlewares/Third_Party/FatFs/src/ff.c **** 
2283:Middlewares/Third_Party/FatFs/src/ff.c **** 
2284:Middlewares/Third_Party/FatFs/src/ff.c **** 
2285:Middlewares/Third_Party/FatFs/src/ff.c **** 
2286:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2287:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2288:Middlewares/Third_Party/FatFs/src/ff.c **** /* Register an object to the directory                                   */
2289:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2290:Middlewares/Third_Party/FatFs/src/ff.c **** 
2291:Middlewares/Third_Party/FatFs/src/ff.c **** static
2292:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_register (	/* FR_OK:succeeded, FR_DENIED:no free entry or too many SFN collision, FR_DI
2293:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Target directory with object name to be created */
2294:Middlewares/Third_Party/FatFs/src/ff.c **** )
2295:Middlewares/Third_Party/FatFs/src/ff.c **** {
2296:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2297:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2298:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2299:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n, nlen, nent;
2300:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sn[12], sum;
2301:Middlewares/Third_Party/FatFs/src/ff.c **** 
2302:Middlewares/Third_Party/FatFs/src/ff.c **** 
2303:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->fn[NSFLAG] & (NS_DOT | NS_NONAME)) return FR_INVALID_NAME;	/* Check name validity */
2304:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (nlen = 0; fs->lfnbuf[nlen]; nlen++) ;	/* Get lfn length */
2305:Middlewares/Third_Party/FatFs/src/ff.c **** 
2306:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2307:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2308:Middlewares/Third_Party/FatFs/src/ff.c **** 		DIR dj;
2309:Middlewares/Third_Party/FatFs/src/ff.c **** 
2310:Middlewares/Third_Party/FatFs/src/ff.c **** 		nent = (nlen + 14) / 15 + 2;	/* Number of entries to allocate (85+C0+C1s) */
2311:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_alloc(dp, nent);		/* Allocate entries */
2312:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2313:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->blk_ofs = dp->dptr - SZDIRE * (nent - 1);	/* Set the allocated entry block offset */
2314:Middlewares/Third_Party/FatFs/src/ff.c **** 
2315:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->obj.sclust != 0 && (dp->obj.stat & 4)) {	/* Has the sub-directory been stretched? */
2316:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->obj.objsize += (DWORD)fs->csize * SS(fs);	/* Increase the directory size by cluster size */
2317:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = fill_first_frag(&dp->obj);				/* Fill first fragment on the FAT if needed */
2318:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2319:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = fill_last_frag(&dp->obj, dp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if neede
2320:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2321:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = load_obj_dir(&dj, &dp->obj);				/* Load the object status */
2322:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2323:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_qword(fs->dirbuf + XDIR_FileSize, dp->obj.objsize);		/* Update the allocation status */
2324:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_qword(fs->dirbuf + XDIR_ValidFileSize, dp->obj.objsize);
2325:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbuf[XDIR_GenFlags] = dp->obj.stat | 1;
2326:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = store_xdir(&dj);							/* Store the object status */
2327:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2328:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2329:Middlewares/Third_Party/FatFs/src/ff.c **** 
2330:Middlewares/Third_Party/FatFs/src/ff.c **** 		create_xdir(fs->dirbuf, fs->lfnbuf);	/* Create on-memory directory block to be written later */
2331:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2333:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  /tmp/ccTP8DMx.s 			page 58


2334:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* On the FAT12/16/32 volume */
2335:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(sn, dp->fn, 12);
2336:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sn[NSFLAG] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
2337:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NOLFN;		/* Find only SFN */
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 1; n < 100; n++) {
2339:Middlewares/Third_Party/FatFs/src/ff.c **** 			gen_numname(dp->fn, sn, fs->lfnbuf, n);	/* Generate a numbered name */
2340:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Check if the name collides with existing SFN */
2341:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2342:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2343:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
2344:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
2345:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = sn[NSFLAG];
2346:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2347:Middlewares/Third_Party/FatFs/src/ff.c **** 
2348:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create an SFN with/without LFNs. */
2349:Middlewares/Third_Party/FatFs/src/ff.c **** 	nent = (sn[NSFLAG] & NS_LFN) ? (nlen + 12) / 13 + 1 : 1;	/* Number of entries to allocate */
2350:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, nent);		/* Allocate entries */
2351:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
2352:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, dp->dptr - nent * SZDIRE);
2353:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2354:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = sum_sfn(dp->fn);	/* Checksum value of the SFN tied to the LFN */
2355:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {					/* Store LFN entries in bottom first */
2356:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, dp->sect);
2357:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
2358:Middlewares/Third_Party/FatFs/src/ff.c **** 				put_lfn(fs->lfnbuf, dp->dir, (BYTE)nent, sum);
2359:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
2360:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);	/* Next entry */
2361:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (res == FR_OK && --nent);
2362:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2364:Middlewares/Third_Party/FatFs/src/ff.c **** 
2365:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* Non LFN configuration */
2366:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, 1);		/* Allocate an entry for SFN */
2367:Middlewares/Third_Party/FatFs/src/ff.c **** 
2368:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2369:Middlewares/Third_Party/FatFs/src/ff.c **** 
2370:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Set SFN entry */
2371:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2372:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
2373:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
2375:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
2376:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2377:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->dir[DIR_NTres] = dp->fn[NSFLAG] & (NS_BODY | NS_EXT);	/* Put NT flag */
2378:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2379:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
2380:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2381:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2382:Middlewares/Third_Party/FatFs/src/ff.c **** 
2383:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2384:Middlewares/Third_Party/FatFs/src/ff.c **** }
2385:Middlewares/Third_Party/FatFs/src/ff.c **** 
2386:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
2387:Middlewares/Third_Party/FatFs/src/ff.c **** 
2388:Middlewares/Third_Party/FatFs/src/ff.c **** 
2389:Middlewares/Third_Party/FatFs/src/ff.c **** 
2390:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE == 0
ARM GAS  /tmp/ccTP8DMx.s 			page 59


2391:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2392:Middlewares/Third_Party/FatFs/src/ff.c **** /* Remove an object from the directory                                   */
2393:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2394:Middlewares/Third_Party/FatFs/src/ff.c **** 
2395:Middlewares/Third_Party/FatFs/src/ff.c **** static
2396:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_remove (	/* FR_OK:Succeeded, FR_DISK_ERR:A disk error */
2397:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Directory object pointing the entry to be removed */
2398:Middlewares/Third_Party/FatFs/src/ff.c **** )
2399:Middlewares/Third_Party/FatFs/src/ff.c **** {
2400:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2401:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2402:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2403:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD last = dp->dptr;
2404:Middlewares/Third_Party/FatFs/src/ff.c **** 
2405:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = (dp->blk_ofs == 0xFFFFFFFF) ? FR_OK : dir_sdi(dp, dp->blk_ofs);	/* Goto top of the entry blo
2406:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2407:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
2408:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, dp->sect);
2409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2410:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Mark an entry 'deleted' */
2411:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2412:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->dir[XDIR_Type] &= 0x7F;
2413:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* On the FAT12/16/32 volume */
2414:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->dir[DIR_Name] = DDEM;
2415:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2416:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
2417:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dptr >= last) break;	/* If reached last entry then all entries of the object has been de
2418:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 0);	/* Next entry */
2419:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);
2420:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_INT_ERR;
2421:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2422:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Non LFN configuration */
2423:Middlewares/Third_Party/FatFs/src/ff.c **** 
2424:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = move_window(fs, dp->sect);
2425:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2426:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->dir[DIR_Name] = DDEM;
2427:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->wflag = 1;
2428:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2430:Middlewares/Third_Party/FatFs/src/ff.c **** 
2431:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2432:Middlewares/Third_Party/FatFs/src/ff.c **** }
2433:Middlewares/Third_Party/FatFs/src/ff.c **** 
2434:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY && _FS_MINIMIZE == 0 */
2435:Middlewares/Third_Party/FatFs/src/ff.c **** 
2436:Middlewares/Third_Party/FatFs/src/ff.c **** 
2437:Middlewares/Third_Party/FatFs/src/ff.c **** 
2438:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2
2439:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2440:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get file information from directory entry                             */
2441:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2442:Middlewares/Third_Party/FatFs/src/ff.c **** 
2443:Middlewares/Third_Party/FatFs/src/ff.c **** static
2444:Middlewares/Third_Party/FatFs/src/ff.c **** void get_fileinfo (		/* No return code */
2445:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
2446:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno	 	/* Pointer to the file information to be filled */
2447:Middlewares/Third_Party/FatFs/src/ff.c **** )
ARM GAS  /tmp/ccTP8DMx.s 			page 60


2448:Middlewares/Third_Party/FatFs/src/ff.c **** {
 935              		.loc 1 2448 0
 936              		.cfi_startproc
 937              		@ args = 0, pretend = 0, frame = 0
 938              		@ frame_needed = 0, uses_anonymous_args = 0
 939              	.LVL120:
2449:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
2450:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c;
2451:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tm;
2452:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2453:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w, lfv;
2454:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2455:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2456:Middlewares/Third_Party/FatFs/src/ff.c **** 
2457:Middlewares/Third_Party/FatFs/src/ff.c **** 
2458:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fname[0] = 0;		/* Invaidate file info */
 940              		.loc 1 2458 0
 941 0000 0023     		movs	r3, #0
 942 0002 4B72     		strb	r3, [r1, #9]
2459:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return;	/* Exit if read pointer has reached end of directory */
 943              		.loc 1 2459 0
 944 0004 C369     		ldr	r3, [r0, #28]
 945 0006 63B3     		cbz	r3, .L97
2448:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
 946              		.loc 1 2448 0
 947 0008 70B5     		push	{r4, r5, r6, lr}
 948              	.LCFI10:
 949              		.cfi_def_cfa_offset 16
 950              		.cfi_offset 4, -16
 951              		.cfi_offset 5, -12
 952              		.cfi_offset 6, -8
 953              		.cfi_offset 14, -4
 954 000a 0024     		movs	r4, #0
 955 000c 2346     		mov	r3, r4
 956 000e 11E0     		b	.L90
 957              	.LVL121:
 958              	.L94:
2460:Middlewares/Third_Party/FatFs/src/ff.c **** 
2461:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2462:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2463:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2464:Middlewares/Third_Party/FatFs/src/ff.c **** 		get_xdir_info(fs->dirbuf, fno);
2465:Middlewares/Third_Party/FatFs/src/ff.c **** 		return;
2466:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
2467:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2468:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* On the FAT12/16/32 volume */
2469:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->blk_ofs != 0xFFFFFFFF) {	/* Get LFN if available */
2470:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = j = 0;
2471:Middlewares/Third_Party/FatFs/src/ff.c **** 			while ((w = fs->lfnbuf[j++]) != 0) {	/* Get an LFN character */
2472:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
2473:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(w, 0);		/* Unicode -> OEM */
2474:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w == 0) { i = 0; break; }	/* No LFN if it could not be converted */
2475:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (_DF1S && w >= 0x100) {	/* Put 1st byte if it is a DBC (always false at SBCS cfg) */
2476:Middlewares/Third_Party/FatFs/src/ff.c **** 					fno->fname[i++] = (char)(w >> 8);
2477:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2478:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2479:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i >= _MAX_LFN) { i = 0; break; }	/* No LFN if buffer overflow */
ARM GAS  /tmp/ccTP8DMx.s 			page 61


2480:Middlewares/Third_Party/FatFs/src/ff.c **** 				fno->fname[i++] = (TCHAR)w;
2481:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2482:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->fname[i] = 0;	/* Terminate the LFN */
2483:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2484:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2485:Middlewares/Third_Party/FatFs/src/ff.c **** 
2486:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = j = 0;
2487:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfv = fno->fname[i];	/* LFN is exist if non-zero */
2488:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (i < 11) {		/* Copy name body and extension */
2489:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (TCHAR)dp->dir[i++];
2490:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
2491:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
2492:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) {						/* Insert a . if extension is exist */
2493:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!lfv) fno->fname[j] = '.';
2494:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->altname[j++] = '.';
2495:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2496:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
2497:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c) && i != 8 && i != 11 && IsDBCS2(dp->dir[i])) {
2498:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = c << 8 | dp->dir[i++];
2499:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2500:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = ff_convert(c, 1);	/* OEM -> Unicode */
2501:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) c = '?';
2502:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2503:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->altname[j] = c;
2504:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!lfv) {
2505:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsUpper(c) && (dp->dir[DIR_NTres] & ((i >= 9) ? NS_EXT : NS_BODY))) {
2506:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
2507:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2508:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->fname[j] = c;
2509:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2510:Middlewares/Third_Party/FatFs/src/ff.c **** 		j++;
2511:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2512:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!lfv) {
2513:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[j] = 0;
2514:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!dp->dir[DIR_NTres]) j = 0;	/* Altname is no longer needed if neither LFN nor case info is ex
2515:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2516:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->altname[j] = 0;	/* Terminate the SFN */
2517:Middlewares/Third_Party/FatFs/src/ff.c **** 
2518:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* Non-LFN configuration */
2519:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = j = 0;
2520:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (i < 11) {		/* Copy name body and extension */
2521:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (TCHAR)dp->dir[i++];
 959              		.loc 1 2521 0
 960 0010 056A     		ldr	r5, [r0, #32]
 961 0012 5A1C     		adds	r2, r3, #1
 962              	.LVL122:
 963 0014 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 964              	.LVL123:
2522:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
 965              		.loc 1 2522 0
 966 0016 202B     		cmp	r3, #32
 967 0018 0BD0     		beq	.L91
2523:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
 968              		.loc 1 2523 0
 969 001a 052B     		cmp	r3, #5
 970 001c 00D1     		bne	.L92
 971 001e E523     		movs	r3, #229
ARM GAS  /tmp/ccTP8DMx.s 			page 62


 972              	.LVL124:
 973              	.L92:
2524:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) fno->fname[j++] = '.';	/* Insert a . if extension is exist */
 974              		.loc 1 2524 0
 975 0020 092A     		cmp	r2, #9
 976 0022 03D1     		bne	.L93
 977              	.LVL125:
 978              		.loc 1 2524 0 is_stmt 0 discriminator 1
 979 0024 0D19     		adds	r5, r1, r4
 980 0026 2E26     		movs	r6, #46
 981 0028 6E72     		strb	r6, [r5, #9]
 982 002a 0134     		adds	r4, r4, #1
 983              	.LVL126:
 984              	.L93:
2525:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[j++] = c;
 985              		.loc 1 2525 0 is_stmt 1
 986 002c 0D19     		adds	r5, r1, r4
 987 002e 6B72     		strb	r3, [r5, #9]
 988 0030 0134     		adds	r4, r4, #1
 989              	.LVL127:
 990              	.L91:
 991 0032 1346     		mov	r3, r2
 992              	.LVL128:
 993              	.L90:
2520:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (TCHAR)dp->dir[i++];
 994              		.loc 1 2520 0
 995 0034 0A2B     		cmp	r3, #10
 996 0036 EBD9     		bls	.L94
 997 0038 0E46     		mov	r6, r1
 998 003a 0546     		mov	r5, r0
2526:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2527:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fname[j] = 0;
 999              		.loc 1 2527 0
 1000 003c 0C44     		add	r4, r4, r1
 1001              	.LVL129:
 1002 003e 0023     		movs	r3, #0
 1003              	.LVL130:
 1004 0040 6372     		strb	r3, [r4, #9]
2528:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2529:Middlewares/Third_Party/FatFs/src/ff.c **** 
2530:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fattrib = dp->dir[DIR_Attr];				/* Attribute */
 1005              		.loc 1 2530 0
 1006 0042 036A     		ldr	r3, [r0, #32]
 1007 0044 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 1008 0046 0B72     		strb	r3, [r1, #8]
2531:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fsize = ld_dword(dp->dir + DIR_FileSize);	/* Size */
 1009              		.loc 1 2531 0
 1010 0048 006A     		ldr	r0, [r0, #32]
 1011              	.LVL131:
 1012 004a 1C30     		adds	r0, r0, #28
 1013 004c FFF7FEFF 		bl	ld_dword
 1014              	.LVL132:
 1015 0050 3060     		str	r0, [r6]
2532:Middlewares/Third_Party/FatFs/src/ff.c **** 	tm = ld_dword(dp->dir + DIR_ModTime);			/* Timestamp */
 1016              		.loc 1 2532 0
 1017 0052 286A     		ldr	r0, [r5, #32]
 1018 0054 1630     		adds	r0, r0, #22
ARM GAS  /tmp/ccTP8DMx.s 			page 63


 1019 0056 FFF7FEFF 		bl	ld_dword
 1020              	.LVL133:
2533:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->ftime = (WORD)tm; fno->fdate = (WORD)(tm >> 16);
 1021              		.loc 1 2533 0
 1022 005a F080     		strh	r0, [r6, #6]	@ movhi
 1023 005c 000C     		lsrs	r0, r0, #16
 1024              	.LVL134:
 1025 005e B080     		strh	r0, [r6, #4]	@ movhi
 1026 0060 70BD     		pop	{r4, r5, r6, pc}
 1027              	.LVL135:
 1028              	.L97:
 1029              	.LCFI11:
 1030              		.cfi_def_cfa_offset 0
 1031              		.cfi_restore 4
 1032              		.cfi_restore 5
 1033              		.cfi_restore 6
 1034              		.cfi_restore 14
 1035 0062 7047     		bx	lr
 1036              		.cfi_endproc
 1037              	.LFE155:
 1039              		.section	.text.create_name,"ax",%progbits
 1040              		.align	2
 1041              		.thumb
 1042              		.thumb_func
 1044              	create_name:
 1045              	.LFB156:
2534:Middlewares/Third_Party/FatFs/src/ff.c **** }
2535:Middlewares/Third_Party/FatFs/src/ff.c **** 
2536:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 */
2537:Middlewares/Third_Party/FatFs/src/ff.c **** 
2538:Middlewares/Third_Party/FatFs/src/ff.c **** 
2539:Middlewares/Third_Party/FatFs/src/ff.c **** 
2540:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FIND && _FS_MINIMIZE <= 1
2541:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2542:Middlewares/Third_Party/FatFs/src/ff.c **** /* Pattern matching                                                      */
2543:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2544:Middlewares/Third_Party/FatFs/src/ff.c **** 
2545:Middlewares/Third_Party/FatFs/src/ff.c **** static
2546:Middlewares/Third_Party/FatFs/src/ff.c **** WCHAR get_achar (		/* Get a character and advances ptr 1 or 2 */
2547:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** ptr	/* Pointer to pointer to the SBCS/DBCS/Unicode string */
2548:Middlewares/Third_Party/FatFs/src/ff.c **** )
2549:Middlewares/Third_Party/FatFs/src/ff.c **** {
2550:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
2551:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
2552:Middlewares/Third_Party/FatFs/src/ff.c **** 
2553:Middlewares/Third_Party/FatFs/src/ff.c **** 	chr = (BYTE)*(*ptr)++;					/* Get a byte */
2554:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (IsLower(chr)) chr -= 0x20;			/* To upper ASCII char */
2555:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2556:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (chr >= 0x80) chr = ExCvt[chr - 0x80];	/* To upper SBCS extended char */
2557:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2558:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (IsDBCS1(chr) && IsDBCS2(**ptr)) {		/* Get DBC 2nd byte if needed */
2559:Middlewares/Third_Party/FatFs/src/ff.c **** 		chr = chr << 8 | (BYTE)*(*ptr)++;
2560:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2561:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2562:Middlewares/Third_Party/FatFs/src/ff.c **** 	return chr;
2563:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2564:Middlewares/Third_Party/FatFs/src/ff.c **** 	return ff_wtoupper(*(*ptr)++);			/* Get a word and to upper */
ARM GAS  /tmp/ccTP8DMx.s 			page 64


2565:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2566:Middlewares/Third_Party/FatFs/src/ff.c **** }
2567:Middlewares/Third_Party/FatFs/src/ff.c **** 
2568:Middlewares/Third_Party/FatFs/src/ff.c **** 
2569:Middlewares/Third_Party/FatFs/src/ff.c **** static
2570:Middlewares/Third_Party/FatFs/src/ff.c **** int pattern_matching (	/* 0:not matched, 1:matched */
2571:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* pat,	/* Matching pattern */
2572:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* nam,	/* String to be tested */
2573:Middlewares/Third_Party/FatFs/src/ff.c **** 	int skip,			/* Number of pre-skip chars (number of ?s) */
2574:Middlewares/Third_Party/FatFs/src/ff.c **** 	int inf				/* Infinite search (* specified) */
2575:Middlewares/Third_Party/FatFs/src/ff.c **** )
2576:Middlewares/Third_Party/FatFs/src/ff.c **** {
2577:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *pp, *np;
2578:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR pc, nc;
2579:Middlewares/Third_Party/FatFs/src/ff.c **** 	int nm, nx;
2580:Middlewares/Third_Party/FatFs/src/ff.c **** 
2581:Middlewares/Third_Party/FatFs/src/ff.c **** 
2582:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (skip--) {				/* Pre-skip name chars */
2583:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!get_achar(&nam)) return 0;	/* Branch mismatched if less name chars */
2584:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2585:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!*pat && inf) return 1;		/* (short circuit) */
2586:Middlewares/Third_Party/FatFs/src/ff.c **** 
2587:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2588:Middlewares/Third_Party/FatFs/src/ff.c **** 		pp = pat; np = nam;			/* Top of pattern and name to match */
2589:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2590:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (*pp == '?' || *pp == '*') {	/* Wildcard? */
2591:Middlewares/Third_Party/FatFs/src/ff.c **** 				nm = nx = 0;
2592:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {				/* Analyze the wildcard chars */
2593:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (*pp++ == '?') nm++; else nx = 1;
2594:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (*pp == '?' || *pp == '*');
2595:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (pattern_matching(pp, np, nm, nx)) return 1;	/* Test new branch (recurs upto number of wildc
2596:Middlewares/Third_Party/FatFs/src/ff.c **** 				nc = *np; break;	/* Branch mismatched */
2597:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2598:Middlewares/Third_Party/FatFs/src/ff.c **** 			pc = get_achar(&pp);	/* Get a pattern char */
2599:Middlewares/Third_Party/FatFs/src/ff.c **** 			nc = get_achar(&np);	/* Get a name char */
2600:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (pc != nc) break;	/* Branch mismatched? */
2601:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (pc == 0) return 1;	/* Branch matched? (matched at end of both strings) */
2602:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2603:Middlewares/Third_Party/FatFs/src/ff.c **** 		get_achar(&nam);			/* nam++ */
2604:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (inf && nc);			/* Retry until end of name if infinite search is specified */
2605:Middlewares/Third_Party/FatFs/src/ff.c **** 
2606:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 0;
2607:Middlewares/Third_Party/FatFs/src/ff.c **** }
2608:Middlewares/Third_Party/FatFs/src/ff.c **** 
2609:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_FIND && _FS_MINIMIZE <= 1 */
2610:Middlewares/Third_Party/FatFs/src/ff.c **** 
2611:Middlewares/Third_Party/FatFs/src/ff.c **** 
2612:Middlewares/Third_Party/FatFs/src/ff.c **** 
2613:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2614:Middlewares/Third_Party/FatFs/src/ff.c **** /* Pick a top segment and create the object name in directory form       */
2615:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2616:Middlewares/Third_Party/FatFs/src/ff.c **** 
2617:Middlewares/Third_Party/FatFs/src/ff.c **** static
2618:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT create_name (	/* FR_OK: successful, FR_INVALID_NAME: could not create */
2619:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
2620:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the segment in the path string */
2621:Middlewares/Third_Party/FatFs/src/ff.c **** )
ARM GAS  /tmp/ccTP8DMx.s 			page 65


2622:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1046              		.loc 1 2622 0
 1047              		.cfi_startproc
 1048              		@ args = 0, pretend = 0, frame = 0
 1049              		@ frame_needed = 0, uses_anonymous_args = 0
 1050              	.LVL136:
 1051 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1052              	.LCFI12:
 1053              		.cfi_def_cfa_offset 40
 1054              		.cfi_offset 3, -40
 1055              		.cfi_offset 4, -36
 1056              		.cfi_offset 5, -32
 1057              		.cfi_offset 6, -28
 1058              		.cfi_offset 7, -24
 1059              		.cfi_offset 8, -20
 1060              		.cfi_offset 9, -16
 1061              		.cfi_offset 10, -12
 1062              		.cfi_offset 11, -8
 1063              		.cfi_offset 14, -4
 1064 0004 8246     		mov	r10, r0
 1065 0006 8946     		mov	r9, r1
2623:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2624:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE b, cf;
2625:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w, *lfn;
2626:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, ni, si, di;
2627:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *p;
2628:Middlewares/Third_Party/FatFs/src/ff.c **** 
2629:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create LFN in Unicode */
2630:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = *path; lfn = dp->obj.fs->lfnbuf; si = di = 0;
2631:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2632:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = p[si++];					/* Get a character */
2633:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < ' ') break;				/* Break if end of the path name */
2634:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == '/' || w == '\\') {	/* Break if a separator is found */
2635:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
2636:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
2637:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2638:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (di >= _MAX_LFN) return FR_INVALID_NAME;	/* Reject too long name */
2639:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
2640:Middlewares/Third_Party/FatFs/src/ff.c **** 		w &= 0xFF;
2641:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(w)) {				/* Check if it is a DBC 1st byte (always false on SBCS cfg) */
2642:Middlewares/Third_Party/FatFs/src/ff.c **** 			b = (BYTE)p[si++];			/* Get 2nd byte */
2643:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = (w << 8) + b;			/* Create a DBC */
2644:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!IsDBCS2(b)) return FR_INVALID_NAME;	/* Reject invalid sequence */
2645:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2646:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
2647:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
2648:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2649:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) return FR_INVALID_NAME;	/* Reject illegal characters
2650:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di++] = w;					/* Store the Unicode character */
2651:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2652:Middlewares/Third_Party/FatFs/src/ff.c **** 	*path = &p[si];						/* Return pointer to the next segment */
2653:Middlewares/Third_Party/FatFs/src/ff.c **** 	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
2654:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2655:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((di == 1 && lfn[di - 1] == '.') ||
2656:Middlewares/Third_Party/FatFs/src/ff.c **** 		(di == 2 && lfn[di - 1] == '.' && lfn[di - 2] == '.')) {	/* Is this segment a dot name? */
2657:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di] = 0;
2658:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 11; i++)		/* Create dot name for SFN entry */
ARM GAS  /tmp/ccTP8DMx.s 			page 66


2659:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i] = (i < di) ? '.' : ' ';
2660:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i] = cf | NS_DOT;		/* This is a dot entry */
2661:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2662:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2663:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2664:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di) {						/* Snip off trailing spaces and dots if exist */
2665:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[di - 1];
2666:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w != ' ' && w != '.') break;
2667:Middlewares/Third_Party/FatFs/src/ff.c **** 		di--;
2668:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2669:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfn[di] = 0;						/* LFN is created */
2670:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (di == 0) return FR_INVALID_NAME;	/* Reject nul name */
2671:Middlewares/Third_Party/FatFs/src/ff.c **** 
2672:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create SFN in directory form */
2673:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(dp->fn, ' ', 11);
2674:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
2675:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (si) cf |= NS_LOSS | NS_LFN;
2676:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
2677:Middlewares/Third_Party/FatFs/src/ff.c **** 
2678:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = b = 0; ni = 8;
2679:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2680:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[si++];					/* Get an LFN character */
2681:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) break;					/* Break on end of the LFN */
2682:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
2683:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LOSS | NS_LFN; continue;
2684:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2685:Middlewares/Third_Party/FatFs/src/ff.c **** 
2686:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i >= ni || si == di) {		/* Extension or end of SFN */
2687:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11) {				/* Long extension */
2688:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; break;
2689:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2690:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
2691:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si > di) break;			/* No extension */
2692:Middlewares/Third_Party/FatFs/src/ff.c **** 			si = di; i = 8; ni = 11;	/* Enter extension section */
2693:Middlewares/Third_Party/FatFs/src/ff.c **** 			b <<= 2; continue;
2694:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2695:Middlewares/Third_Party/FatFs/src/ff.c **** 
2696:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w >= 0x80) {				/* Non ASCII character */
2697:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2698:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(w, 0);		/* Unicode -> OEM code */
2699:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
2700:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2701:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(ff_wtoupper(w), 0);	/* Upper converted Unicode -> OEM code */
2702:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2703:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LFN;				/* Force create LFN entry */
2704:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2705:Middlewares/Third_Party/FatFs/src/ff.c **** 
2706:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_DF1S && w >= 0x100) {		/* Is this DBC? (always false at SBCS cfg) */
2707:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= ni - 1) {
2708:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; i = ni; continue;
2709:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2710:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i++] = (BYTE)(w >> 8);
2711:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* SBC */
2712:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal characters for SFN */
2713:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
2714:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2715:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsUpper(w)) {		/* ASCII large capital */
ARM GAS  /tmp/ccTP8DMx.s 			page 67


2716:Middlewares/Third_Party/FatFs/src/ff.c **** 					b |= 2;
2717:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
2718:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (IsLower(w)) {	/* ASCII small capital */
2719:Middlewares/Third_Party/FatFs/src/ff.c **** 						b |= 1; w -= 0x20;
2720:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2721:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2722:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2723:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2724:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i++] = (BYTE)w;
2725:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2726:Middlewares/Third_Party/FatFs/src/ff.c **** 
2727:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->fn[0] == DDEM) dp->fn[0] = RDDEM;	/* If the first character collides with DDEM, replace it
2728:Middlewares/Third_Party/FatFs/src/ff.c **** 
2729:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ni == 8) b <<= 2;
2730:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03) cf |= NS_LFN;	/* Create LFN entry when there are com
2731:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are c
2732:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
2733:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
2734:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2735:Middlewares/Third_Party/FatFs/src/ff.c **** 
2736:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->fn[NSFLAG] = cf;	/* SFN is created */
2737:Middlewares/Third_Party/FatFs/src/ff.c **** 
2738:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2739:Middlewares/Third_Party/FatFs/src/ff.c **** 
2740:Middlewares/Third_Party/FatFs/src/ff.c **** 
2741:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* _USE_LFN != 0 : Non-LFN configuration */
2742:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c, d, *sfn;
2743:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT ni, si, i;
2744:Middlewares/Third_Party/FatFs/src/ff.c **** 	const char *p;
2745:Middlewares/Third_Party/FatFs/src/ff.c **** 
2746:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create file name in directory form */
2747:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = *path; sfn = dp->fn;
 1066              		.loc 1 2747 0
 1067 0008 0F68     		ldr	r7, [r1]
 1068              	.LVL137:
 1069 000a 00F1240B 		add	fp, r0, #36
 1070              	.LVL138:
2748:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(sfn, ' ', 11);
 1071              		.loc 1 2748 0
 1072 000e 0B22     		movs	r2, #11
 1073 0010 2021     		movs	r1, #32
 1074              	.LVL139:
 1075 0012 5846     		mov	r0, fp
 1076              	.LVL140:
 1077 0014 FFF7FEFF 		bl	mem_set
 1078              	.LVL141:
2749:Middlewares/Third_Party/FatFs/src/ff.c **** 	si = i = 0; ni = 8;
 1079              		.loc 1 2749 0
 1080 0018 0026     		movs	r6, #0
 1081 001a 3346     		mov	r3, r6
 1082 001c 4FF00808 		mov	r8, #8
 1083 0020 00E0     		b	.L99
 1084              	.LVL142:
 1085              	.L107:
 1086 0022 2B46     		mov	r3, r5
 1087              	.LVL143:
 1088              	.L99:
ARM GAS  /tmp/ccTP8DMx.s 			page 68


2750:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2751:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (p[si] == '.') { /* Is this a dot entry? */
2752:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2753:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (BYTE)p[si++];
2754:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c != '.' || si >= 3) break;
2755:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2756:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2757:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '/' && c != '\\' && c > ' ') return FR_INVALID_NAME;
2758:Middlewares/Third_Party/FatFs/src/ff.c **** 		*path = p + si;								/* Return pointer to the next segment */
2759:Middlewares/Third_Party/FatFs/src/ff.c **** 		sfn[NSFLAG] = (c <= ' ') ? NS_LAST | NS_DOT : NS_DOT;	/* Set last segment flag if end of the path
2760:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2761:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2762:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2763:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2764:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (BYTE)p[si++];
 1089              		.loc 1 2764 0
 1090 0024 5D1C     		adds	r5, r3, #1
 1091              	.LVL144:
 1092 0026 FC5C     		ldrb	r4, [r7, r3]	@ zero_extendqisi2
 1093              	.LVL145:
2765:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c <= ' ') break; 			/* Break if end of the path name */
 1094              		.loc 1 2765 0
 1095 0028 202C     		cmp	r4, #32
 1096 002a 2ED9     		bls	.L100
2766:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '/' || c == '\\') {	/* Break if a separator is found */
 1097              		.loc 1 2766 0
 1098 002c 2F2C     		cmp	r4, #47
 1099 002e 03D0     		beq	.L101
 1100              		.loc 1 2766 0 is_stmt 0 discriminator 1
 1101 0030 5C2C     		cmp	r4, #92
 1102 0032 07D1     		bne	.L117
 1103 0034 00E0     		b	.L101
 1104              	.L103:
2767:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
 1105              		.loc 1 2767 0 is_stmt 1 discriminator 4
 1106 0036 0135     		adds	r5, r5, #1
 1107              	.LVL146:
 1108              	.L101:
 1109              		.loc 1 2767 0 is_stmt 0 discriminator 1
 1110 0038 7B5D     		ldrb	r3, [r7, r5]	@ zero_extendqisi2
 1111 003a 2F2B     		cmp	r3, #47
 1112 003c FBD0     		beq	.L103
 1113              		.loc 1 2767 0 discriminator 3
 1114 003e 5C2B     		cmp	r3, #92
 1115 0040 F9D0     		beq	.L103
 1116 0042 22E0     		b	.L100
 1117              	.L117:
2768:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
2769:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2770:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '.' || i >= ni) {		/* End of body or over size? */
 1118              		.loc 1 2770 0 is_stmt 1
 1119 0044 2E2C     		cmp	r4, #46
 1120 0046 01D0     		beq	.L104
 1121              		.loc 1 2770 0 is_stmt 0 discriminator 1
 1122 0048 B045     		cmp	r8, r6
 1123 004a 08D8     		bhi	.L105
 1124              	.L104:
ARM GAS  /tmp/ccTP8DMx.s 			page 69


2771:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11 || c != '.') return FR_INVALID_NAME;	/* Over size or invalid dot */
 1125              		.loc 1 2771 0 is_stmt 1
 1126 004c B8F10B0F 		cmp	r8, #11
 1127 0050 30D0     		beq	.L112
 1128              		.loc 1 2771 0 is_stmt 0 discriminator 2
 1129 0052 2E2C     		cmp	r4, #46
 1130 0054 31D1     		bne	.L113
2772:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;				/* Goto extension */
 1131              		.loc 1 2772 0 is_stmt 1
 1132 0056 0826     		movs	r6, #8
 1133              	.LVL147:
 1134 0058 4FF00B08 		mov	r8, #11
 1135              	.LVL148:
 1136 005c E1E7     		b	.L107
 1137              	.LVL149:
 1138              	.L105:
2773:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
2774:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2775:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c >= 0x80) {				/* Extended character? */
 1139              		.loc 1 2775 0
 1140 005e 14F0800F 		tst	r4, #128
 1141 0062 02D0     		beq	.L108
2776:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2777:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = ExCvt[c - 0x80];		/* To upper extended characters (SBCS cfg) */
 1142              		.loc 1 2777 0
 1143 0064 803C     		subs	r4, r4, #128
 1144              	.LVL150:
 1145 0066 194B     		ldr	r3, .L119
 1146 0068 1C5D     		ldrb	r4, [r3, r4]	@ zero_extendqisi2
 1147              	.LVL151:
 1148              	.L108:
2778:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2779:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_DF1S
2780:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INVALID_NAME;		/* Reject extended characters (ASCII only cfg) */
2781:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2782:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2783:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2784:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c)) {				/* Check if it is a DBC 1st byte (always false at SBCS cfg.) */
2785:Middlewares/Third_Party/FatFs/src/ff.c **** 			d = (BYTE)p[si++];			/* Get 2nd byte */
2786:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!IsDBCS2(d) || i >= ni - 1) return FR_INVALID_NAME;	/* Reject invalid DBC */
2787:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2788:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = d;
2789:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* SBC */
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (chk_chr("\"*+,:;<=>\?[]|\x7F", c)) return FR_INVALID_NAME;	/* Reject illegal chrs for SFN */
 1149              		.loc 1 2790 0
 1150 006a 2146     		mov	r1, r4
 1151 006c 1848     		ldr	r0, .L119+4
 1152 006e FFF7FEFF 		bl	chk_chr
 1153              	.LVL152:
 1154 0072 28BB     		cbnz	r0, .L114
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
 1155              		.loc 1 2791 0
 1156 0074 A4F16103 		sub	r3, r4, #97
 1157 0078 DBB2     		uxtb	r3, r3
 1158 007a 192B     		cmp	r3, #25
 1159 007c 01D8     		bhi	.L109
 1160              		.loc 1 2791 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccTP8DMx.s 			page 70


 1161 007e 203C     		subs	r4, r4, #32
 1162              	.LVL153:
 1163 0080 E4B2     		uxtb	r4, r4
 1164              	.LVL154:
 1165              	.L109:
2792:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
 1166              		.loc 1 2792 0 is_stmt 1
 1167 0082 0BF80640 		strb	r4, [fp, r6]
 1168 0086 0136     		adds	r6, r6, #1
 1169              	.LVL155:
 1170 0088 CBE7     		b	.L107
 1171              	.L100:
2793:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2794:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2795:Middlewares/Third_Party/FatFs/src/ff.c **** 	*path = p + si;						/* Return pointer to the next segment */
 1172              		.loc 1 2795 0
 1173 008a 3D44     		add	r5, r5, r7
 1174              	.LVL156:
 1175 008c C9F80050 		str	r5, [r9]
2796:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == 0) return FR_INVALID_NAME;	/* Reject nul string */
 1176              		.loc 1 2796 0
 1177 0090 CEB1     		cbz	r6, .L115
2797:Middlewares/Third_Party/FatFs/src/ff.c **** 
2798:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sfn[0] == DDEM) sfn[0] = RDDEM;	/* If the first character collides with DDEM, replace it with 
 1178              		.loc 1 2798 0
 1179 0092 9AF82430 		ldrb	r3, [r10, #36]	@ zero_extendqisi2
 1180 0096 E52B     		cmp	r3, #229
 1181 0098 02D1     		bne	.L110
 1182              		.loc 1 2798 0 is_stmt 0 discriminator 1
 1183 009a 0523     		movs	r3, #5
 1184 009c 8AF82430 		strb	r3, [r10, #36]
 1185              	.L110:
2799:Middlewares/Third_Party/FatFs/src/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 1186              		.loc 1 2799 0 is_stmt 1
 1187 00a0 202C     		cmp	r4, #32
 1188 00a2 01D8     		bhi	.L116
 1189 00a4 0423     		movs	r3, #4
 1190 00a6 00E0     		b	.L111
 1191              	.L116:
 1192 00a8 0023     		movs	r3, #0
 1193              	.L111:
 1194              		.loc 1 2799 0 is_stmt 0 discriminator 4
 1195 00aa 8AF82F30 		strb	r3, [r10, #47]
2800:Middlewares/Third_Party/FatFs/src/ff.c **** 
2801:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
 1196              		.loc 1 2801 0 is_stmt 1 discriminator 4
 1197 00ae 0020     		movs	r0, #0
 1198 00b0 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1199              	.LVL157:
 1200              	.L112:
2771:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;				/* Goto extension */
 1201              		.loc 1 2771 0
 1202 00b4 0620     		movs	r0, #6
 1203 00b6 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1204              	.LVL158:
 1205              	.L113:
 1206 00ba 0620     		movs	r0, #6
ARM GAS  /tmp/ccTP8DMx.s 			page 71


 1207 00bc BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1208              	.LVL159:
 1209              	.L114:
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
 1210              		.loc 1 2790 0
 1211 00c0 0620     		movs	r0, #6
 1212 00c2 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1213              	.LVL160:
 1214              	.L115:
2796:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1215              		.loc 1 2796 0
 1216 00c6 0620     		movs	r0, #6
2802:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_LFN != 0 */
2803:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1217              		.loc 1 2803 0
 1218 00c8 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1219              	.LVL161:
 1220              	.L120:
 1221              		.align	2
 1222              	.L119:
 1223 00cc 00000000 		.word	.LANCHOR1
 1224 00d0 00000000 		.word	.LC0
 1225              		.cfi_endproc
 1226              	.LFE156:
 1228              		.section	.text.get_ldnumber,"ax",%progbits
 1229              		.align	2
 1230              		.thumb
 1231              		.thumb_func
 1233              	get_ldnumber:
 1234              	.LFB158:
2804:Middlewares/Third_Party/FatFs/src/ff.c **** 
2805:Middlewares/Third_Party/FatFs/src/ff.c **** 
2806:Middlewares/Third_Party/FatFs/src/ff.c **** 
2807:Middlewares/Third_Party/FatFs/src/ff.c **** 
2808:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2809:Middlewares/Third_Party/FatFs/src/ff.c **** /* Follow a file path                                                    */
2810:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2811:Middlewares/Third_Party/FatFs/src/ff.c **** 
2812:Middlewares/Third_Party/FatFs/src/ff.c **** static
2813:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT follow_path (	/* FR_OK(0): successful, !=0: error code */
2814:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Directory object to return last directory and found object */
2815:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Full-path string to find a file or directory */
2816:Middlewares/Third_Party/FatFs/src/ff.c **** )
2817:Middlewares/Third_Party/FatFs/src/ff.c **** {
2818:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2819:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ns;
2820:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID *obj = &dp->obj;
2821:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
2822:Middlewares/Third_Party/FatFs/src/ff.c **** 
2823:Middlewares/Third_Party/FatFs/src/ff.c **** 
2824:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2825:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path != '/' && *path != '\\') {	/* Without heading separator */
2826:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = fs->cdir;				/* Start from current directory */
2827:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
2828:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2829:Middlewares/Third_Party/FatFs/src/ff.c **** 	{										/* With heading separator */
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (*path == '/' || *path == '\\') path++;	/* Strip heading separator */
ARM GAS  /tmp/ccTP8DMx.s 			page 72


2831:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
2832:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2833:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2834:Middlewares/Third_Party/FatFs/src/ff.c **** 	obj->n_frag = 0;	/* Invalidate last fragment counter of the object */
2835:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2836:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT && obj->sclust) {	/* Retrieve the sub-directory status if needed */
2837:Middlewares/Third_Party/FatFs/src/ff.c **** 		DIR dj;
2838:Middlewares/Third_Party/FatFs/src/ff.c **** 
2839:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->c_scl = fs->cdc_scl;
2840:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->c_size = fs->cdc_size;
2841:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->c_ofs = fs->cdc_ofs;
2842:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = load_obj_dir(&dj, obj);
2843:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2844:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->objsize = ld_dword(fs->dirbuf + XDIR_FileSize);
2845:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
2846:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2847:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2848:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2849:Middlewares/Third_Party/FatFs/src/ff.c **** 
2850:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
2851:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NONAME;
2852:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, 0);
2853:Middlewares/Third_Party/FatFs/src/ff.c **** 
2854:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* Follow path */
2855:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2856:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = create_name(dp, &path);	/* Get a segment name of the path */
2857:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2858:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Find an object with the segment name */
2859:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
2860:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
2861:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
2862:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
2863:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) continue;	/* Continue to follow if not last segment */
2864:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fn[NSFLAG] = NS_NONAME;
2865:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_OK;
2866:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {							/* Could not find the object */
2867:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
2868:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2869:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2870:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
2871:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2872:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
2873:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get into the sub-directory */
2874:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(obj->attr & AM_DIR)) {		/* It is not a sub-directory and cannot follow */
2875:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_PATH; break;
2876:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2877:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2878:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {		/* Save containing directory information for next dir */
2879:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->c_scl = obj->sclust;
2880:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->c_size = ((DWORD)obj->objsize & 0xFFFFFF00) | obj->stat;
2881:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->c_ofs = dp->blk_ofs;
2882:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Open next directory */
2883:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
2884:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
2885:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
2886:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2887:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
ARM GAS  /tmp/ccTP8DMx.s 			page 73


2888:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->sclust = ld_clust(fs, fs->win + dp->dptr % SS(fs));	/* Open next directory */
2889:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2890:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2891:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2892:Middlewares/Third_Party/FatFs/src/ff.c **** 
2893:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2894:Middlewares/Third_Party/FatFs/src/ff.c **** }
2895:Middlewares/Third_Party/FatFs/src/ff.c **** 
2896:Middlewares/Third_Party/FatFs/src/ff.c **** 
2897:Middlewares/Third_Party/FatFs/src/ff.c **** 
2898:Middlewares/Third_Party/FatFs/src/ff.c **** 
2899:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2900:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get logical drive number from path name                               */
2901:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2902:Middlewares/Third_Party/FatFs/src/ff.c **** 
2903:Middlewares/Third_Party/FatFs/src/ff.c **** static
2904:Middlewares/Third_Party/FatFs/src/ff.c **** int get_ldnumber (		/* Returns logical drive number (-1:invalid drive) */
2905:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the path name */
2906:Middlewares/Third_Party/FatFs/src/ff.c **** )
2907:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1235              		.loc 1 2907 0
 1236              		.cfi_startproc
 1237              		@ args = 0, pretend = 0, frame = 0
 1238              		@ frame_needed = 0, uses_anonymous_args = 0
 1239              		@ link register save eliminated.
 1240              	.LVL162:
2908:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *tp, *tt;
2909:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
2910:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol = -1;
2911:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
2912:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const char* const volid[] = {_VOLUME_STRS};
2913:Middlewares/Third_Party/FatFs/src/ff.c **** 	const char *sp;
2914:Middlewares/Third_Party/FatFs/src/ff.c **** 	char c;
2915:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR tc;
2916:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2917:Middlewares/Third_Party/FatFs/src/ff.c **** 
2918:Middlewares/Third_Party/FatFs/src/ff.c **** 
2919:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path) {	/* If the pointer is not a null */
 1241              		.loc 1 2919 0
 1242 0000 0168     		ldr	r1, [r0]
 1243 0002 21B9     		cbnz	r1, .L126
2910:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
 1244              		.loc 1 2910 0
 1245 0004 4FF0FF33 		mov	r3, #-1
 1246 0008 17E0     		b	.L132
 1247              	.LVL163:
 1248              	.L125:
2920:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (tt = *path; (UINT)*tt >= (_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find ':' in the pa
 1249              		.loc 1 2920 0 discriminator 4
 1250 000a 0132     		adds	r2, r2, #1
 1251              	.LVL164:
 1252 000c 00E0     		b	.L122
 1253              	.LVL165:
 1254              	.L126:
 1255 000e 0A46     		mov	r2, r1
 1256              	.L122:
 1257              	.LVL166:
ARM GAS  /tmp/ccTP8DMx.s 			page 74


 1258              		.loc 1 2920 0 is_stmt 0 discriminator 1
 1259 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1260 0012 202B     		cmp	r3, #32
 1261 0014 01D9     		bls	.L124
 1262              		.loc 1 2920 0 discriminator 3
 1263 0016 3A2B     		cmp	r3, #58
 1264 0018 F7D1     		bne	.L125
 1265              	.L124:
2921:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (*tt == ':') {	/* If a ':' is exist in the path name */
 1266              		.loc 1 2921 0 is_stmt 1
 1267 001a 3A2B     		cmp	r3, #58
 1268 001c 0CD1     		bne	.L127
2907:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *tp, *tt;
 1269              		.loc 1 2907 0
 1270 001e 10B4     		push	{r4}
 1271              	.LCFI13:
 1272              		.cfi_def_cfa_offset 4
 1273              		.cfi_offset 4, -4
 1274              	.LVL167:
2922:Middlewares/Third_Party/FatFs/src/ff.c **** 			tp = *path;
2923:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = *tp++ - '0';
 1275              		.loc 1 2923 0
 1276 0020 4C1C     		adds	r4, r1, #1
 1277              	.LVL168:
 1278 0022 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1279 0024 303B     		subs	r3, r3, #48
 1280              	.LVL169:
2924:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
 1281              		.loc 1 2924 0
 1282 0026 092B     		cmp	r3, #9
 1283 0028 09D8     		bhi	.L128
 1284              		.loc 1 2924 0 is_stmt 0 discriminator 1
 1285 002a A242     		cmp	r2, r4
 1286 002c 0AD1     		bne	.L129
2925:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
 1287              		.loc 1 2925 0 is_stmt 1
 1288 002e 012B     		cmp	r3, #1
 1289 0030 0BD8     		bhi	.L130
 1290              	.LVL170:
2926:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
2927:Middlewares/Third_Party/FatFs/src/ff.c **** 					*path = ++tt;
 1291              		.loc 1 2927 0
 1292 0032 0132     		adds	r2, r2, #1
 1293              	.LVL171:
 1294 0034 0260     		str	r2, [r0]
 1295 0036 0AE0     		b	.L123
 1296              	.LVL172:
 1297              	.L127:
 1298              	.LCFI14:
 1299              		.cfi_def_cfa_offset 0
 1300              		.cfi_restore 4
2928:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2929:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2930:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID
2931:Middlewares/Third_Party/FatFs/src/ff.c **** 			 else {	/* No numeric drive number, find string drive id */
2932:Middlewares/Third_Party/FatFs/src/ff.c **** 				i = 0; tt++;
2933:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
ARM GAS  /tmp/ccTP8DMx.s 			page 75


2934:Middlewares/Third_Party/FatFs/src/ff.c **** 					sp = volid[i]; tp = *path;
2935:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {	/* Compare a string drive id with path name */
2936:Middlewares/Third_Party/FatFs/src/ff.c **** 						c = *sp++; tc = *tp++;
2937:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (IsLower(tc)) tc -= 0x20;
2938:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (c && (TCHAR)c == tc);
2939:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while ((c || tp != tt) && ++i < _VOLUMES);	/* Repeat for each id until pattern match */
2940:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
2941:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
2942:Middlewares/Third_Party/FatFs/src/ff.c **** 					*path = tt;
2943:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2944:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2945:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2946:Middlewares/Third_Party/FatFs/src/ff.c **** 			return vol;
2947:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2948:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0 && _VOLUMES >= 2
2949:Middlewares/Third_Party/FatFs/src/ff.c **** 		vol = CurrVol;	/* Current drive */
2950:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2951:Middlewares/Third_Party/FatFs/src/ff.c **** 		vol = 0;		/* Drive 0 */
 1301              		.loc 1 2951 0
 1302 0038 0023     		movs	r3, #0
 1303              	.LVL173:
 1304              	.L132:
2952:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2953:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2954:Middlewares/Third_Party/FatFs/src/ff.c **** 	return vol;
2955:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1305              		.loc 1 2955 0
 1306 003a 1846     		mov	r0, r3
 1307              	.LVL174:
 1308 003c 7047     		bx	lr
 1309              	.LVL175:
 1310              	.L128:
 1311              	.LCFI15:
 1312              		.cfi_def_cfa_offset 4
 1313              		.cfi_offset 4, -4
2910:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
 1314              		.loc 1 2910 0
 1315 003e 4FF0FF33 		mov	r3, #-1
 1316              	.LVL176:
 1317 0042 04E0     		b	.L123
 1318              	.LVL177:
 1319              	.L129:
 1320 0044 4FF0FF33 		mov	r3, #-1
 1321              	.LVL178:
 1322 0048 01E0     		b	.L123
 1323              	.LVL179:
 1324              	.L130:
 1325 004a 4FF0FF33 		mov	r3, #-1
 1326              	.LVL180:
 1327              	.L123:
 1328              		.loc 1 2955 0
 1329 004e 1846     		mov	r0, r3
 1330              	.LVL181:
 1331 0050 5DF8044B 		ldr	r4, [sp], #4
 1332              	.LCFI16:
 1333              		.cfi_restore 4
 1334              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccTP8DMx.s 			page 76


 1335              	.LVL182:
 1336 0054 7047     		bx	lr
 1337              		.cfi_endproc
 1338              	.LFE158:
 1340 0056 00BF     		.section	.text.putc_init,"ax",%progbits
 1341              		.align	2
 1342              		.thumb
 1343              		.thumb_func
 1345              	putc_init:
 1346              	.LFB182:
2956:Middlewares/Third_Party/FatFs/src/ff.c **** 
2957:Middlewares/Third_Party/FatFs/src/ff.c **** 
2958:Middlewares/Third_Party/FatFs/src/ff.c **** 
2959:Middlewares/Third_Party/FatFs/src/ff.c **** 
2960:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2961:Middlewares/Third_Party/FatFs/src/ff.c **** /* Load a sector and check if it is an FAT boot sector                   */
2962:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2963:Middlewares/Third_Party/FatFs/src/ff.c **** 
2964:Middlewares/Third_Party/FatFs/src/ff.c **** static
2965:Middlewares/Third_Party/FatFs/src/ff.c **** BYTE check_fs (	/* 0:FAT, 1:exFAT, 2:Valid BS but not FAT, 3:Not a BS, 4:Disk error */
2966:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
2967:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sect	/* Sector# (lba) to load and check if it is an FAT-VBR or not */
2968:Middlewares/Third_Party/FatFs/src/ff.c **** )
2969:Middlewares/Third_Party/FatFs/src/ff.c **** {
2970:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
2971:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
2972:Middlewares/Third_Party/FatFs/src/ff.c **** 
2973:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always placed 
2974:Middlewares/Third_Party/FatFs/src/ff.c **** 
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->win[BS_JmpBoot] == 0xE9 || (fs->win[BS_JmpBoot] == 0xEB && fs->win[BS_JmpBoot + 2] == 0x90
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
2977:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
2978:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2979:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2980:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!mem_cmp(fs->win + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11)) return 1;
2981:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2982:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 2;
2983:Middlewares/Third_Party/FatFs/src/ff.c **** }
2984:Middlewares/Third_Party/FatFs/src/ff.c **** 
2985:Middlewares/Third_Party/FatFs/src/ff.c **** 
2986:Middlewares/Third_Party/FatFs/src/ff.c **** 
2987:Middlewares/Third_Party/FatFs/src/ff.c **** 
2988:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2989:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find logical drive and check if the volume is mounted                 */
2990:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2991:Middlewares/Third_Party/FatFs/src/ff.c **** 
2992:Middlewares/Third_Party/FatFs/src/ff.c **** static
2993:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT find_volume (	/* FR_OK(0): successful, !=0: any error occurred */
2994:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path,	/* Pointer to pointer to the path name (drive number) */
2995:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** rfs,		/* Pointer to pointer to the found file system object */
2996:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mode			/* !=0: Check write protection for write access */
2997:Middlewares/Third_Party/FatFs/src/ff.c **** )
2998:Middlewares/Third_Party/FatFs/src/ff.c **** {
2999:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, *pt;
3000:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
3001:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
3002:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD bsect, fasize, tsect, sysect, nclst, szbfat, br[4];
ARM GAS  /tmp/ccTP8DMx.s 			page 77


3003:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD nrsv;
3004:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3005:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
3006:Middlewares/Third_Party/FatFs/src/ff.c **** 
3007:Middlewares/Third_Party/FatFs/src/ff.c **** 
3008:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3009:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = 0;
3010:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(path);
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3012:Middlewares/Third_Party/FatFs/src/ff.c **** 
3013:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check if the file system object is valid or not */
3014:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = FatFs[vol];					/* Get pointer to the file system object */
3015:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
3016:Middlewares/Third_Party/FatFs/src/ff.c **** 
3017:Middlewares/Third_Party/FatFs/src/ff.c **** 	ENTER_FF(fs);						/* Lock the volume */
3018:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = fs;							/* Return pointer to the file system object */
3019:Middlewares/Third_Party/FatFs/src/ff.c **** 
3020:Middlewares/Third_Party/FatFs/src/ff.c **** 	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
3021:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type) {					/* If the volume has been mounted */
3022:Middlewares/Third_Party/FatFs/src/ff.c **** 		stat = disk_status(fs->drv);
3023:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
3025:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
3026:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_OK;				/* The file system object is valid */
3028:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3029:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3030:Middlewares/Third_Party/FatFs/src/ff.c **** 
3031:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* The file system object is not valid. */
3032:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Following code attempts to mount the volume. (analyze BPB and initialize the fs object) */
3033:Middlewares/Third_Party/FatFs/src/ff.c **** 
3034:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = 0;					/* Clear the file system object */
3035:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
3036:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
3037:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
3038:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
3039:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!_FS_READONLY && mode && (stat & STA_PROTECT)) { /* Check disk write protection if needed */
3041:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
3042:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3043:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS					/* Get sector size (multiple sector size cfg only) */
3044:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(fs->drv, GET_SECTOR_SIZE, &SS(fs)) != RES_OK) return FR_DISK_ERR;
3045:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (SS(fs) > _MAX_SS || SS(fs) < _MIN_SS || (SS(fs) & (SS(fs) - 1))) return FR_DISK_ERR;
3046:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3047:Middlewares/Third_Party/FatFs/src/ff.c **** 
3048:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Find an FAT partition on the drive. Supports only generic partitioning rules, FDISK and SFD. */
3049:Middlewares/Third_Party/FatFs/src/ff.c **** 	bsect = 0;
3050:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
3051:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {		/* Get partition offset */
3053:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
3055:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3056:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = LD2PT(vol);					/* Partition number: 0:auto, 1-4:forced */
3057:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i) i--;
3058:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {							/* Find an FAT volume */
3059:Middlewares/Third_Party/FatFs/src/ff.c **** 			bsect = br[i];
ARM GAS  /tmp/ccTP8DMx.s 			page 78


3060:Middlewares/Third_Party/FatFs/src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
3061:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
3062:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 4) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
3064:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
3065:Middlewares/Third_Party/FatFs/src/ff.c **** 
3066:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* An FAT volume is found (bsect). Following code initializes the file system object */
3067:Middlewares/Third_Party/FatFs/src/ff.c **** 
3068:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3069:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 1) {
3070:Middlewares/Third_Party/FatFs/src/ff.c **** 		QWORD maxlba;
3071:Middlewares/Third_Party/FatFs/src/ff.c **** 
3072:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = BPB_ZeroedEx; i < BPB_ZeroedEx + 53 && fs->win[i] == 0; i++) ;	/* Check zero filler */
3073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i < BPB_ZeroedEx + 53) return FR_NO_FILESYSTEM;
3074:Middlewares/Third_Party/FatFs/src/ff.c **** 
3075:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_word(fs->win + BPB_FSVerEx) != 0x100) return FR_NO_FILESYSTEM;	/* Check exFAT revision (Mu
3076:Middlewares/Third_Party/FatFs/src/ff.c **** 
3077:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (1 << fs->win[BPB_BytsPerSecEx] != SS(fs)) {	/* (BPB_BytsPerSecEx must be equal to the physica
3078:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_NO_FILESYSTEM;
3079:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3080:Middlewares/Third_Party/FatFs/src/ff.c **** 
3081:Middlewares/Third_Party/FatFs/src/ff.c **** 		maxlba = ld_qword(fs->win + BPB_TotSecEx) + bsect;	/* Last LBA + 1 of the volume */
3082:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (maxlba >= 0x100000000) return FR_NO_FILESYSTEM;	/* (It cannot be handled in 32-bit LBA) */
3083:Middlewares/Third_Party/FatFs/src/ff.c **** 
3084:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = ld_dword(fs->win + BPB_FatSzEx);	/* Number of sectors per FAT */
3085:Middlewares/Third_Party/FatFs/src/ff.c **** 
3086:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fats = fs->win[BPB_NumFATsEx];			/* Number of FATs */
3087:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_fats != 1) return FR_NO_FILESYSTEM;	/* (Supports only 1 FAT) */
3088:Middlewares/Third_Party/FatFs/src/ff.c **** 
3089:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->csize = 1 << fs->win[BPB_SecPerClusEx];		/* Cluster size */
3090:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->csize == 0)	return FR_NO_FILESYSTEM;	/* (Must be 1..32768) */
3091:Middlewares/Third_Party/FatFs/src/ff.c **** 
3092:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = ld_dword(fs->win + BPB_NumClusEx);		/* Number of clusters */
3093:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst > MAX_EXFAT) return FR_NO_FILESYSTEM;	/* (Too many clusters) */
3094:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fatent = nclst + 2;
3095:Middlewares/Third_Party/FatFs/src/ff.c **** 
3096:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Boundaries and Limits */
3097:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->volbase = bsect;
3098:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->database = bsect + ld_dword(fs->win + BPB_DataOfsEx);
3099:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fatbase = bsect + ld_dword(fs->win + BPB_FatOfsEx);
3100:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (maxlba < (QWORD)fs->database + nclst * fs->csize) return FR_NO_FILESYSTEM;	/* (Volume size mu
3101:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = ld_dword(fs->win + BPB_RootClusEx);
3102:Middlewares/Third_Party/FatFs/src/ff.c **** 
3103:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Check if bitmap location is in assumption (at the first cluster) */
3104:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, clust2sect(fs, fs->dirbase)) != FR_OK) return FR_DISK_ERR;
3105:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < SS(fs); i += SZDIRE) {
3106:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->win[i] == 0x81 && ld_dword(fs->win + i + 20) == 2) break;	/* 81 entry with cluster #2? *
3107:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3108:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == SS(fs)) return FR_NO_FILESYSTEM;
3109:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3110:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
3111:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3112:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_EXFAT;			/* FAT sub-type */
3113:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
3114:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT */
3115:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_word(fs->win + BPB_BytsPerSec) != SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_BytsPerSec must
ARM GAS  /tmp/ccTP8DMx.s 			page 79


3117:Middlewares/Third_Party/FatFs/src/ff.c **** 
3118:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize = ld_word(fs->win + BPB_FATSz16);		/* Number of sectors per FAT */
3119:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
3120:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = fasize;
3121:Middlewares/Third_Party/FatFs/src/ff.c **** 
3122:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
3124:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
3125:Middlewares/Third_Party/FatFs/src/ff.c **** 
3126:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->csize = fs->win[BPB_SecPerClus];			/* Cluster size */
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
3128:Middlewares/Third_Party/FatFs/src/ff.c **** 
3129:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_rootdir = ld_word(fs->win + BPB_RootEntCnt);	/* Number of root directory entries */
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
3131:Middlewares/Third_Party/FatFs/src/ff.c **** 
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 		tsect = ld_word(fs->win + BPB_TotSec16);		/* Number of sectors on the volume */
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
3134:Middlewares/Third_Party/FatFs/src/ff.c **** 
3135:Middlewares/Third_Party/FatFs/src/ff.c **** 		nrsv = ld_word(fs->win + BPB_RsvdSecCnt);		/* Number of reserved sectors */
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
3137:Middlewares/Third_Party/FatFs/src/ff.c **** 
3138:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Determine the FAT sub type */
3139:Middlewares/Third_Party/FatFs/src/ff.c **** 		sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZDIRE);	/* RSV + FAT + DIR */
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
3141:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
3143:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT32;
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
3145:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
3146:Middlewares/Third_Party/FatFs/src/ff.c **** 
3147:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Boundaries and Limits */
3148:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
3149:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
3150:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
3151:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
3152:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
3155:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
3156:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
3157:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir == 0)	return FR_NO_FILESYSTEM;/* (BPB_RootEntCnt must not be 0) */
3159:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
3160:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
3162:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3163:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_FATSz must not
3164:Middlewares/Third_Party/FatFs/src/ff.c **** 
3165:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3166:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get FSINFO if available */
3167:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
3168:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag = 0x80;
3169:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
3170:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo32 == 1 */
3171:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& ld_word(fs->win + BPB_FSInfo32) == 1
3172:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& move_window(fs, bsect + 1) == FR_OK)
3173:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
ARM GAS  /tmp/ccTP8DMx.s 			page 80


3174:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
3175:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
3176:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
3177:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
3178:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3179:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 1) == 0
3180:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->free_clst = ld_dword(fs->win + FSI_Free_Count);
3181:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3182:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 2) == 0
3183:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->last_clst = ld_dword(fs->win + FSI_Nxt_Free);
3184:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3185:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3186:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3187:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* (_FS_NOFSINFO & 3) != 3 */
3188:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
3189:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3190:Middlewares/Third_Party/FatFs/src/ff.c **** 
3191:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = fmt;		/* FAT sub-type */
3192:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->id = ++Fsid;		/* File system mount ID */
3193:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
3194:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->lfnbuf = LfnBuf;	/* Static LFN working buffer */
3195:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3196:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->dirbuf = DirBuf;	/* Static directory block scratchpad buuffer */
3197:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3198:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3199:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
3200:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->cdir = 0;			/* Initialize current directory */
3201:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3202:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0			/* Clear file lock semaphores */
3203:Middlewares/Third_Party/FatFs/src/ff.c **** 	clear_lock(fs);
3204:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3205:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
3206:Middlewares/Third_Party/FatFs/src/ff.c **** }
3207:Middlewares/Third_Party/FatFs/src/ff.c **** 
3208:Middlewares/Third_Party/FatFs/src/ff.c **** 
3209:Middlewares/Third_Party/FatFs/src/ff.c **** 
3210:Middlewares/Third_Party/FatFs/src/ff.c **** 
3211:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3212:Middlewares/Third_Party/FatFs/src/ff.c **** /* Check if the file/directory object is valid or not                    */
3213:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3214:Middlewares/Third_Party/FatFs/src/ff.c **** 
3215:Middlewares/Third_Party/FatFs/src/ff.c **** static
3216:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT validate (	/* Returns FR_OK or FR_INVALID_OBJECT */
3217:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,		/* Pointer to the _OBJ, the 1st member in the FIL/DIR object, to check validity */
3218:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** fs		/* Pointer to pointer to the owner file system object to return */
3219:Middlewares/Third_Party/FatFs/src/ff.c **** )
3220:Middlewares/Third_Party/FatFs/src/ff.c **** {
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3222:Middlewares/Third_Party/FatFs/src/ff.c **** 
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!obj || !obj->fs || !obj->fs->fs_type || obj->fs->id != obj->id || (disk_status(obj->fs->drv) 
3224:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
3225:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INVALID_OBJECT;	/* The object is invalid */
3226:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
3227:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = obj->fs;			/* Owner file sytem object */
3228:Middlewares/Third_Party/FatFs/src/ff.c **** 		ENTER_FF(obj->fs);		/* Lock file system */
3229:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;			/* Valid object */
3230:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  /tmp/ccTP8DMx.s 			page 81


3231:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3232:Middlewares/Third_Party/FatFs/src/ff.c **** }
3233:Middlewares/Third_Party/FatFs/src/ff.c **** 
3234:Middlewares/Third_Party/FatFs/src/ff.c **** 
3235:Middlewares/Third_Party/FatFs/src/ff.c **** 
3236:Middlewares/Third_Party/FatFs/src/ff.c **** 
3237:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------------------------------------
3238:Middlewares/Third_Party/FatFs/src/ff.c **** 
3239:Middlewares/Third_Party/FatFs/src/ff.c ****    Public Functions (FatFs API)
3240:Middlewares/Third_Party/FatFs/src/ff.c **** 
3241:Middlewares/Third_Party/FatFs/src/ff.c **** ----------------------------------------------------------------------------*/
3242:Middlewares/Third_Party/FatFs/src/ff.c **** 
3243:Middlewares/Third_Party/FatFs/src/ff.c **** 
3244:Middlewares/Third_Party/FatFs/src/ff.c **** 
3245:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3246:Middlewares/Third_Party/FatFs/src/ff.c **** /* Mount/Unmount a Logical Drive                                         */
3247:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3248:Middlewares/Third_Party/FatFs/src/ff.c **** 
3249:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mount (
3250:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* Pointer to the file system object (NULL:unmount)*/
3251:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
3252:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt			/* Mode option 0:Do not mount (delayed mount), 1:Mount immediately */
3253:Middlewares/Third_Party/FatFs/src/ff.c **** )
3254:Middlewares/Third_Party/FatFs/src/ff.c **** {
3255:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *cfs;
3256:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
3257:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3258:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *rp = path;
3259:Middlewares/Third_Party/FatFs/src/ff.c **** 
3260:Middlewares/Third_Party/FatFs/src/ff.c **** 
3261:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3262:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&rp);
3263:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3264:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
3265:Middlewares/Third_Party/FatFs/src/ff.c **** 
3266:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (cfs) {
3267:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3268:Middlewares/Third_Party/FatFs/src/ff.c **** 		clear_lock(cfs);
3269:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3270:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Discard sync object of the current volume */
3271:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
3272:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3273:Middlewares/Third_Party/FatFs/src/ff.c **** 		cfs->fs_type = 0;				/* Clear old fs object */
3274:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3275:Middlewares/Third_Party/FatFs/src/ff.c **** 
3276:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs) {
3277:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fs_type = 0;				/* Clear new fs object */
3278:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Create sync object for the new volume */
3279:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
3280:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3281:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3282:Middlewares/Third_Party/FatFs/src/ff.c **** 	FatFs[vol] = fs;					/* Register new fs object */
3283:Middlewares/Third_Party/FatFs/src/ff.c **** 
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
3285:Middlewares/Third_Party/FatFs/src/ff.c **** 
3286:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
3287:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
ARM GAS  /tmp/ccTP8DMx.s 			page 82


3288:Middlewares/Third_Party/FatFs/src/ff.c **** }
3289:Middlewares/Third_Party/FatFs/src/ff.c **** 
3290:Middlewares/Third_Party/FatFs/src/ff.c **** 
3291:Middlewares/Third_Party/FatFs/src/ff.c **** 
3292:Middlewares/Third_Party/FatFs/src/ff.c **** 
3293:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3294:Middlewares/Third_Party/FatFs/src/ff.c **** /* Open or Create a File                                                 */
3295:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3296:Middlewares/Third_Party/FatFs/src/ff.c **** 
3297:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_open (
3298:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the blank file object */
3299:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file name */
3300:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mode			/* Access mode and file open mode flags */
3301:Middlewares/Third_Party/FatFs/src/ff.c **** )
3302:Middlewares/Third_Party/FatFs/src/ff.c **** {
3303:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3304:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3305:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3306:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3307:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dw, cl, bcs, clst, sc;
3308:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ofs;
3309:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3310:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3311:Middlewares/Third_Party/FatFs/src/ff.c **** 
3312:Middlewares/Third_Party/FatFs/src/ff.c **** 
3313:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fp) return FR_INVALID_OBJECT;
3314:Middlewares/Third_Party/FatFs/src/ff.c **** 
3315:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
3316:Middlewares/Third_Party/FatFs/src/ff.c **** 	mode &= _FS_READONLY ? FA_READ : FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_CREATE_NEW | FA_OPEN_A
3317:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, mode);
3318:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3319:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
3320:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
3321:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
3322:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
3323:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3324:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
3325:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3326:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3327:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3328:Middlewares/Third_Party/FatFs/src/ff.c **** 			else {
3329:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
3330:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3331:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3332:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3333:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create or Open a file */
3334:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
3335:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
3336:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
3337:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3338:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
3339:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3340:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&dj);
3341:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3342:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3343:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_CREATE_ALWAYS;		/* File is created */
3344:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  /tmp/ccTP8DMx.s 			page 83


3345:Middlewares/Third_Party/FatFs/src/ff.c **** 			else {								/* Any object is already existing */
3346:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
3347:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;
3348:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
3349:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (mode & FA_CREATE_NEW) res = FR_EXIST;	/* Cannot create as new file */
3350:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3351:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3352:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
3353:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();
3354:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3355:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
3356:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Get current allocation info */
3357:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.fs = fs;
3358:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = ld_dword(fs->dirbuf + XDIR_FstClus);
3359:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
3360:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
3361:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.n_frag = 0;
3362:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Initialize directory entry block */
3363:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_CrtTime, dw);	/* Set created time */
3364:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_CrtTime10] = 0;
3365:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ModTime, dw);	/* Set modified time */
3366:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_ModTime10] = 0;
3367:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_Attr] = AM_ARC;				/* Reset attribute */
3368:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FstClus, 0);		/* Reset file allocation info */
3369:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_qword(fs->dirbuf + XDIR_FileSize, 0);
3370:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_qword(fs->dirbuf + XDIR_ValidFileSize, 0);
3371:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_GenFlags] = 1;
3372:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = store_xdir(&dj);
3373:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK && fp->obj.sclust) {		/* Remove the cluster chain if exist */
3374:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = remove_chain(&fp->obj, fp->obj.sclust, 0);
3375:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->last_clst = fp->obj.sclust - 1;		/* Reuse the cluster hole */
3376:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3377:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
3378:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3379:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
3380:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean directory info */
3381:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_CrtTime, dw);	/* Set created time */
3382:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_ModTime, dw);	/* Set modified time */
3383:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
3384:Middlewares/Third_Party/FatFs/src/ff.c **** 					cl = ld_clust(fs, dj.dir);			/* Get cluster chain */
3385:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
3386:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_FileSize, 0);
3387:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
3388:Middlewares/Third_Party/FatFs/src/ff.c **** 
3389:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (cl) {							/* Remove the cluster chain if exist */
3390:Middlewares/Third_Party/FatFs/src/ff.c **** 						dw = fs->winsect;
3391:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = remove_chain(&dj.obj, cl, 0);
3392:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
3393:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, dw);
3394:Middlewares/Third_Party/FatFs/src/ff.c **** 							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
3395:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3396:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3397:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3398:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3399:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3400:Middlewares/Third_Party/FatFs/src/ff.c **** 		else {	/* Open an existing file */
3401:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Following succeeded */
ARM GAS  /tmp/ccTP8DMx.s 			page 84


3402:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
3403:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
3404:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
3405:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((mode & FA_WRITE) && (dj.obj.attr & AM_RDO)) { /* R/O violation */
3406:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
3407:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3408:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3409:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3410:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3411:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3412:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
3413:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_MODIFIED;
3414:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
3415:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_ptr = dj.dir;
3416:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3417:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.lockid = inc_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
3418:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!fp->obj.lockid) res = FR_INT_ERR;
3419:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3420:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3421:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* R/O configuration */
3422:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3423:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
3424:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3425:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3426:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
3427:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
3428:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3429:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3430:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3431:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3432:Middlewares/Third_Party/FatFs/src/ff.c **** 
3433:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3434:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3435:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
3436:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.c_scl = dj.obj.sclust;							/* Get containing directory info */
3437:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.c_size = ((DWORD)dj.obj.objsize & 0xFFFFFF00) | dj.obj.stat;
3438:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.c_ofs = dj.blk_ofs;
3439:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Get object allocation info */
3440:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
3441:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
3442:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
3443:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3444:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3445:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.sclust = ld_clust(fs, dj.dir);					/* Get object allocation info */
3446:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
3447:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3448:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3449:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->cltbl = 0;			/* Disable fast seek mode */
3450:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3451:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.fs = fs;	 	/* Validate the file object */
3452:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.id = fs->id;
3453:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag = mode;		/* Set file access mode */
3454:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->err = 0;			/* Clear error flag */
3455:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = 0;			/* Invalidate current data sector */
3456:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = 0;			/* Set file pointer top of the file */
3457:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3458:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
ARM GAS  /tmp/ccTP8DMx.s 			page 85


3459:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(fp->buf, 0, _MAX_SS);	/* Clear sector buffer */
3460:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3461:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((mode & FA_SEEKEND) && fp->obj.objsize > 0) {	/* Seek to end of file if FA_OPEN_APPEND is sp
3462:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
3463:Middlewares/Third_Party/FatFs/src/ff.c **** 				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
3464:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->obj.sclust;				/* Follow the cluster chain */
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
3466:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
3467:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1) res = FR_INT_ERR;
3468:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
3469:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3470:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;
3471:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
3472:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
3473:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_INT_ERR;
3474:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
3475:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->sect = sc + (DWORD)(ofs / SS(fs));
3476:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3477:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_read(fs->drv, fp->buf, fp->sect, 1) != RES_OK) res = FR_DISK_ERR;
3478:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3479:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3480:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3481:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3482:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3483:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3484:Middlewares/Third_Party/FatFs/src/ff.c **** 
3485:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
3486:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3487:Middlewares/Third_Party/FatFs/src/ff.c **** 
3488:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) fp->obj.fs = 0;	/* Invalidate file object on error */
3489:Middlewares/Third_Party/FatFs/src/ff.c **** 
3490:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3491:Middlewares/Third_Party/FatFs/src/ff.c **** }
3492:Middlewares/Third_Party/FatFs/src/ff.c **** 
3493:Middlewares/Third_Party/FatFs/src/ff.c **** 
3494:Middlewares/Third_Party/FatFs/src/ff.c **** 
3495:Middlewares/Third_Party/FatFs/src/ff.c **** 
3496:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3497:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read File                                                             */
3498:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3499:Middlewares/Third_Party/FatFs/src/ff.c **** 
3500:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_read (
3501:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp, 	/* Pointer to the file object */
3502:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* buff,	/* Pointer to data buffer */
3503:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btr,	/* Number of bytes to read */
3504:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* br	/* Pointer to number of bytes read */
3505:Middlewares/Third_Party/FatFs/src/ff.c **** )
3506:Middlewares/Third_Party/FatFs/src/ff.c **** {
3507:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3508:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3509:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
3510:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t remain;
3511:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rcnt, cc, csect;
3512:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *rbuff = (BYTE*)buff;
3513:Middlewares/Third_Party/FatFs/src/ff.c **** 
3514:Middlewares/Third_Party/FatFs/src/ff.c **** 
3515:Middlewares/Third_Party/FatFs/src/ff.c **** 	*br = 0;	/* Clear read byte counter */
ARM GAS  /tmp/ccTP8DMx.s 			page 86


3516:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);				/* Check validity of the file object */
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
3519:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
3520:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
3521:Middlewares/Third_Party/FatFs/src/ff.c **** 
3522:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btr;								/* Repeat until all data read */
3523:Middlewares/Third_Party/FatFs/src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
3524:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
3525:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
3526:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {					/* On the cluster boundary? */
3527:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
3528:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;		/* Follow cluster chain from the origin */
3529:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* Middle or end of the file */
3530:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3531:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->cltbl) {
3532:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
3533:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3534:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3535:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3536:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = get_fat(&fp->obj, fp->clust);	/* Follow cluster chain on the FAT */
3537:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3538:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst < 2) ABORT(fs, FR_INT_ERR);
3540:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
3541:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
3542:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3543:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect = clust2sect(fs, fp->clust);	/* Get current sector */
3544:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
3545:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
3546:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btr / SS(fs);					/* When remaining bytes >= sector size, */
3547:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cc) {							/* Read maximum contiguous sectors directly */
3548:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
3549:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
3550:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3551:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fs->drv, rbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
3552:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
3553:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3554:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->wflag && fs->winsect - sect < cc) {
3555:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fs->winsect - sect) * SS(fs)), fs->win, SS(fs));
3556:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3557:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 				if ((fp->flag & FA_DIRTY) && fp->sect - sect < cc) {
3559:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
3560:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3561:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3562:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3563:Middlewares/Third_Party/FatFs/src/ff.c **** 				rcnt = SS(fs) * cc;				/* Number of bytes transferred */
3564:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
3565:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3566:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3567:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->sect != sect) {			/* Load data sector if not in cache */
3568:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
3571:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
3572:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
ARM GAS  /tmp/ccTP8DMx.s 			page 87


3573:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fs->drv, fp->buf, sect, 1) != RES_OK)	ABORT(fs, FR_DISK_ERR);	/* Fill sector cach
3575:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3576:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3577:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = sect;
3578:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3579:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
3580:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btr) rcnt = btr;					/* Clip it by btr if needed */
3581:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3582:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
3583:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(rbuff, fs->win + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
3584:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3585:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(rbuff, fp->buf + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
3586:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3587:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3588:Middlewares/Third_Party/FatFs/src/ff.c **** 
3589:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, FR_OK);
3590:Middlewares/Third_Party/FatFs/src/ff.c **** }
3591:Middlewares/Third_Party/FatFs/src/ff.c **** 
3592:Middlewares/Third_Party/FatFs/src/ff.c **** 
3593:Middlewares/Third_Party/FatFs/src/ff.c **** 
3594:Middlewares/Third_Party/FatFs/src/ff.c **** 
3595:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3596:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3597:Middlewares/Third_Party/FatFs/src/ff.c **** /* Write File                                                            */
3598:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3599:Middlewares/Third_Party/FatFs/src/ff.c **** 
3600:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_write (
3601:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
3602:Middlewares/Third_Party/FatFs/src/ff.c **** 	const void* buff,	/* Pointer to the data to be written */
3603:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btw,			/* Number of bytes to write */
3604:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* bw			/* Pointer to number of bytes written */
3605:Middlewares/Third_Party/FatFs/src/ff.c **** )
3606:Middlewares/Third_Party/FatFs/src/ff.c **** {
3607:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3608:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3609:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
3610:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wcnt, cc, csect;
3611:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *wbuff = (const BYTE*)buff;
3612:Middlewares/Third_Party/FatFs/src/ff.c **** 
3613:Middlewares/Third_Party/FatFs/src/ff.c **** 
3614:Middlewares/Third_Party/FatFs/src/ff.c **** 	*bw = 0;	/* Clear write byte counter */
3615:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
3616:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
3617:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
3618:Middlewares/Third_Party/FatFs/src/ff.c **** 
3619:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check fptr wrap-around (file size cannot reach 4GiB on FATxx) */
3620:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((!_FS_EXFAT || fs->fs_type != FS_EXFAT) && (DWORD)(fp->fptr + btw) < (DWORD)fp->fptr) {
3621:Middlewares/Third_Party/FatFs/src/ff.c **** 		btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
3622:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3623:Middlewares/Third_Party/FatFs/src/ff.c **** 
3624:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btw;							/* Repeat until all data written */
3625:Middlewares/Third_Party/FatFs/src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->
3626:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs)) & (fs->csize - 1);	/* Sector offset in the cluster */
3628:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {				/* On the cluster boundary? */
3629:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
ARM GAS  /tmp/ccTP8DMx.s 			page 88


3630:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;	/* Follow from the origin */
3631:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) {		/* If no cluster is allocated, */
3632:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, 0);	/* create a new cluster chain */
3633:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3634:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* On the middle or end of the file */
3635:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3636:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->cltbl) {
3637:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
3638:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3639:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3640:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3641:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, fp->clust);	/* Follow or stretch cluster chain on the FAT */
3642:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3643:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3644:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
3645:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
3646:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
3647:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
3649:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3650:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3651:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->winsect == fp->sect && sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Write-back s
3652:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3653:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {		/* Write-back sector cache */
3654:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
3655:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
3656:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3657:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3658:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect = clust2sect(fs, fp->clust);	/* Get current sector */
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
3660:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
3661:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
3662:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cc) {						/* Write maximum contiguous sectors directly */
3663:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
3664:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
3665:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3666:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, wbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
3667:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
3668:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3669:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->winsect - sect < cc) {	/* Refill sector cache if it gets invalidated by the direct writ
3670:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fs->win, wbuff + ((fs->winsect - sect) * SS(fs)), SS(fs));
3671:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 0;
3672:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3673:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3674:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->sect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write *
3675:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->buf, wbuff + ((fp->sect - sect) * SS(fs)), SS(fs));
3676:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
3677:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3678:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3679:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3680:Middlewares/Third_Party/FatFs/src/ff.c **** 				wcnt = SS(fs) * cc;		/* Number of bytes transferred */
3681:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
3682:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3683:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3684:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->fptr >= fp->obj.objsize) {	/* Avoid silly cache filling on the growing edge */
3685:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);
3686:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->winsect = sect;
ARM GAS  /tmp/ccTP8DMx.s 			page 89


3687:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3688:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3689:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->sect != sect && 		/* Fill sector cache with file data */
3690:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr < fp->obj.objsize &&
3691:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fs, FR_DISK_ERR);
3693:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3694:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3695:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = sect;
3696:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3697:Middlewares/Third_Party/FatFs/src/ff.c **** 		wcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
3698:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
3699:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3700:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
3701:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(fs->win + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
3702:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->wflag = 1;
3703:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3704:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(fp->buf + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
3705:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_DIRTY;
3706:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3707:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3708:Middlewares/Third_Party/FatFs/src/ff.c **** 
3709:Middlewares/Third_Party/FatFs/src/ff.c **** 	fp->flag |= FA_MODIFIED;				/* Set file change flag */
3710:Middlewares/Third_Party/FatFs/src/ff.c **** 
3711:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, FR_OK);
3712:Middlewares/Third_Party/FatFs/src/ff.c **** }
3713:Middlewares/Third_Party/FatFs/src/ff.c **** 
3714:Middlewares/Third_Party/FatFs/src/ff.c **** 
3715:Middlewares/Third_Party/FatFs/src/ff.c **** 
3716:Middlewares/Third_Party/FatFs/src/ff.c **** 
3717:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3718:Middlewares/Third_Party/FatFs/src/ff.c **** /* Synchronize the File                                                  */
3719:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3720:Middlewares/Third_Party/FatFs/src/ff.c **** 
3721:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_sync (
3722:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
3723:Middlewares/Third_Party/FatFs/src/ff.c **** )
3724:Middlewares/Third_Party/FatFs/src/ff.c **** {
3725:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3726:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3727:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tm;
3728:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
3729:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3730:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3731:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3732:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3733:Middlewares/Third_Party/FatFs/src/ff.c **** 
3734:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
3735:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3736:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
3737:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3738:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {	/* Write-back cached data if needed */
3739:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
3740:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
3741:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3742:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3743:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Update the directory entry */
ARM GAS  /tmp/ccTP8DMx.s 			page 90


3744:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();				/* Modified time */
3745:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3746:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
3747:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = fill_first_frag(&fp->obj);	/* Fill first fragment on the FAT if needed */
3748:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3749:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = fill_last_frag(&fp->obj, fp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if nee
3750:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3751:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3752:Middlewares/Third_Party/FatFs/src/ff.c **** 					INIT_NAMBUF(fs);
3753:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = load_obj_dir(&dj, &fp->obj);	/* Load directory entry block */
3754:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
3755:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_Attr] |= AM_ARC;				/* Set archive bit */
3756:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_GenFlags] = fp->obj.stat | 1;	/* Update file allocation info */
3757:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_dword(fs->dirbuf + XDIR_FstClus, fp->obj.sclust);
3758:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_qword(fs->dirbuf + XDIR_FileSize, fp->obj.objsize);
3759:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_qword(fs->dirbuf + XDIR_ValidFileSize, fp->obj.objsize);
3760:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_dword(fs->dirbuf + XDIR_ModTime, tm);		/* Update modified time */
3761:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_ModTime10] = 0;
3762:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_dword(fs->dirbuf + XDIR_AccTime, 0);
3763:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = store_xdir(&dj);	/* Restore it to the directory */
3764:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
3765:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = sync_fs(fs);
3766:Middlewares/Third_Party/FatFs/src/ff.c **** 							fp->flag &= (BYTE)~FA_MODIFIED;
3767:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3768:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3769:Middlewares/Third_Party/FatFs/src/ff.c **** 					FREE_NAMBUF();
3770:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3771:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
3772:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3773:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3774:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, fp->dir_sect);
3775:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3776:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir = fp->dir_ptr;
3777:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] |= AM_ARC;						/* Set archive bit */
3778:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation info  */
3779:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
3780:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
3781:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_word(dir + DIR_LstAccDate, 0);
3782:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
3783:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);					/* Restore it to the directory */
3784:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_MODIFIED;
3785:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3786:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3787:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3788:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3789:Middlewares/Third_Party/FatFs/src/ff.c **** 
3790:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3791:Middlewares/Third_Party/FatFs/src/ff.c **** }
3792:Middlewares/Third_Party/FatFs/src/ff.c **** 
3793:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
3794:Middlewares/Third_Party/FatFs/src/ff.c **** 
3795:Middlewares/Third_Party/FatFs/src/ff.c **** 
3796:Middlewares/Third_Party/FatFs/src/ff.c **** 
3797:Middlewares/Third_Party/FatFs/src/ff.c **** 
3798:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3799:Middlewares/Third_Party/FatFs/src/ff.c **** /* Close File                                                            */
3800:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  /tmp/ccTP8DMx.s 			page 91


3801:Middlewares/Third_Party/FatFs/src/ff.c **** 
3802:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_close (
3803:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object to be closed */
3804:Middlewares/Third_Party/FatFs/src/ff.c **** )
3805:Middlewares/Third_Party/FatFs/src/ff.c **** {
3806:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3807:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3808:Middlewares/Third_Party/FatFs/src/ff.c **** 
3809:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3810:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_sync(fp);					/* Flush cached data */
3811:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
3812:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3813:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
3814:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = validate(&fp->obj, &fs);	/* Lock volume */
3815:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3816:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3817:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(fp->obj.lockid);	/* Decrement file open counter */
3818:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)
3819:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3820:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3821:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.fs = 0;			/* Invalidate file object */
3822:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3823:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
3824:Middlewares/Third_Party/FatFs/src/ff.c **** 			unlock_fs(fs, FR_OK);		/* Unlock volume */
3825:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3826:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3827:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3828:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3829:Middlewares/Third_Party/FatFs/src/ff.c **** }
3830:Middlewares/Third_Party/FatFs/src/ff.c **** 
3831:Middlewares/Third_Party/FatFs/src/ff.c **** 
3832:Middlewares/Third_Party/FatFs/src/ff.c **** 
3833:Middlewares/Third_Party/FatFs/src/ff.c **** 
3834:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH >= 1
3835:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3836:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Current Directory or Current Drive, Get Current Directory      */
3837:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3838:Middlewares/Third_Party/FatFs/src/ff.c **** 
3839:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES >= 2
3840:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chdrive (
3841:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Drive number */
3842:Middlewares/Third_Party/FatFs/src/ff.c **** )
3843:Middlewares/Third_Party/FatFs/src/ff.c **** {
3844:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
3845:Middlewares/Third_Party/FatFs/src/ff.c **** 
3846:Middlewares/Third_Party/FatFs/src/ff.c **** 
3847:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3848:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);
3849:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3850:Middlewares/Third_Party/FatFs/src/ff.c **** 
3851:Middlewares/Third_Party/FatFs/src/ff.c **** 	CurrVol = (BYTE)vol;	/* Set it as current volume */
3852:Middlewares/Third_Party/FatFs/src/ff.c **** 
3853:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
3854:Middlewares/Third_Party/FatFs/src/ff.c **** }
3855:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3856:Middlewares/Third_Party/FatFs/src/ff.c **** 
3857:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccTP8DMx.s 			page 92


3858:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chdir (
3859:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
3860:Middlewares/Third_Party/FatFs/src/ff.c **** )
3861:Middlewares/Third_Party/FatFs/src/ff.c **** {
3862:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3863:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3864:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3865:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3866:Middlewares/Third_Party/FatFs/src/ff.c **** 
3867:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
3868:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
3869:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3870:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
3871:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
3872:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the path */
3873:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* Follow completed */
3874:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
3875:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->cdir = dj.obj.sclust;	/* It is the start directory itself */
3876:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3877:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
3878:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->cdc_scl = dj.obj.c_scl;
3879:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->cdc_size = dj.obj.c_size;
3880:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->cdc_ofs = dj.obj.c_ofs;
3881:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3882:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3883:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3884:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {	/* It is a sub-directory */
3885:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3886:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_EXFAT) {
3887:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdir = ld_dword(fs->dirbuf + XDIR_FstClus);		/* Sub-directory cluster */
3888:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdc_scl = dj.obj.sclust;						/* Save containing directory information */
3889:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdc_size = ((DWORD)dj.obj.objsize & 0xFFFFFF00) | dj.obj.stat;
3890:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdc_ofs = dj.blk_ofs;
3891:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3892:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3893:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3894:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdir = ld_clust(fs, dj.dir);					/* Sub-directory cluster */
3895:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3896:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
3897:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_PATH;		/* Reached but a file */
3898:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3899:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3900:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3901:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
3902:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
3903:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3904:Middlewares/Third_Party/FatFs/src/ff.c **** 
3905:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3906:Middlewares/Third_Party/FatFs/src/ff.c **** }
3907:Middlewares/Third_Party/FatFs/src/ff.c **** 
3908:Middlewares/Third_Party/FatFs/src/ff.c **** 
3909:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH >= 2
3910:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getcwd (
3911:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* buff,	/* Pointer to the directory path */
3912:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT len		/* Size of path */
3913:Middlewares/Third_Party/FatFs/src/ff.c **** )
3914:Middlewares/Third_Party/FatFs/src/ff.c **** {
ARM GAS  /tmp/ccTP8DMx.s 			page 93


3915:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3916:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3917:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3918:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, n;
3919:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ccl;
3920:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR *tp;
3921:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO fno;
3922:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3923:Middlewares/Third_Party/FatFs/src/ff.c **** 
3924:Middlewares/Third_Party/FatFs/src/ff.c **** 
3925:Middlewares/Third_Party/FatFs/src/ff.c **** 	*buff = 0;
3926:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
3927:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume((const TCHAR**)&buff, &fs, 0);	/* Get current volume */
3928:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3929:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
3930:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
3931:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = len;			/* Bottom of buffer (directory stack base) */
3932:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {	/* (Cannot do getcwd on exFAT and returns root path)
3933:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.obj.sclust = fs->cdir;				/* Start to follow upper directory from current directory */
3934:Middlewares/Third_Party/FatFs/src/ff.c **** 			while ((ccl = dj.obj.sclust) != 0) {	/* Repeat while current directory is a sub-directory */
3935:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(&dj, 1 * SZDIRE);	/* Get parent directory */
3936:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3937:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, dj.sect);
3938:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3939:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.obj.sclust = ld_clust(fs, dj.dir);	/* Goto parent directory */
3940:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(&dj, 0);
3941:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3942:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {							/* Find the entry links to the child directory */
3943:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_read(&dj, 0);
3944:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
3945:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ccl == ld_clust(fs, dj.dir)) break;	/* Found the entry */
3946:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_next(&dj, 0);
3947:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (res == FR_OK);
3948:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_INT_ERR;/* It cannot be 'not found'. */
3949:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3950:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(&dj, &fno);		/* Get the directory name and push it to the buffer */
3951:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (n = 0; fno.fname[n]; n++) ;
3952:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < n + 3) {
3953:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NOT_ENOUGH_CORE; break;
3954:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3955:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (n) buff[--i] = fno.fname[--n];
3956:Middlewares/Third_Party/FatFs/src/ff.c **** 				buff[--i] = '/';
3957:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3958:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3959:Middlewares/Third_Party/FatFs/src/ff.c **** 		tp = buff;
3960:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3961:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES >= 2
3962:Middlewares/Third_Party/FatFs/src/ff.c **** 			*tp++ = '0' + CurrVol;			/* Put drive number */
3963:Middlewares/Third_Party/FatFs/src/ff.c **** 			*tp++ = ':';
3964:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3965:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i == len) {					/* Root-directory */
3966:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tp++ = '/';
3967:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {						/* Sub-directroy */
3968:Middlewares/Third_Party/FatFs/src/ff.c **** 				do		/* Add stacked path str */
3969:Middlewares/Third_Party/FatFs/src/ff.c **** 					*tp++ = buff[i++];
3970:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (i < len);
3971:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  /tmp/ccTP8DMx.s 			page 94


3972:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3973:Middlewares/Third_Party/FatFs/src/ff.c **** 		*tp = 0;
3974:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
3975:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3976:Middlewares/Third_Party/FatFs/src/ff.c **** 
3977:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3978:Middlewares/Third_Party/FatFs/src/ff.c **** }
3979:Middlewares/Third_Party/FatFs/src/ff.c **** 
3980:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_RPATH >= 2 */
3981:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_RPATH >= 1 */
3982:Middlewares/Third_Party/FatFs/src/ff.c **** 
3983:Middlewares/Third_Party/FatFs/src/ff.c **** 
3984:Middlewares/Third_Party/FatFs/src/ff.c **** 
3985:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
3986:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3987:Middlewares/Third_Party/FatFs/src/ff.c **** /* Seek File R/W Pointer                                                 */
3988:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3989:Middlewares/Third_Party/FatFs/src/ff.c **** 
3990:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_lseek (
3991:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
3992:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ofs		/* File pointer from top of file */
3993:Middlewares/Third_Party/FatFs/src/ff.c **** )
3994:Middlewares/Third_Party/FatFs/src/ff.c **** {
3995:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3996:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3997:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, bcs, nsect;
3998:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ifptr;
3999:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
4000:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, pcl, ncl, tcl, dsc, tlen, ulen, *tbl;
4001:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4002:Middlewares/Third_Party/FatFs/src/ff.c **** 
4003:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
4004:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) res = (FRESULT)fp->err;
4005:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
4006:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && fs->fs_type == FS_EXFAT) {
4007:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = fill_last_frag(&fp->obj, fp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if needed
4008:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4009:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4010:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fs, res);
4011:Middlewares/Third_Party/FatFs/src/ff.c **** 
4012:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
4013:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->cltbl) {	/* Fast seek */
4014:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
4015:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fp->cltbl;
4016:Middlewares/Third_Party/FatFs/src/ff.c **** 			tlen = *tbl++; ulen = 2;	/* Given table size and required table size */
4017:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
4018:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl) {
4019:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
4020:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Get a fragment */
4021:Middlewares/Third_Party/FatFs/src/ff.c **** 					tcl = cl; ncl = 0; ulen += 2;	/* Top, length and used items */
4022:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4023:Middlewares/Third_Party/FatFs/src/ff.c **** 						pcl = cl; ncl++;
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 						cl = get_fat(&fp->obj, cl);
4025:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
4026:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
4028:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
ARM GAS  /tmp/ccTP8DMx.s 			page 95


4029:Middlewares/Third_Party/FatFs/src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
4030:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4031:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (cl < fs->n_fatent);	/* Repeat until end of chain */
4032:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4033:Middlewares/Third_Party/FatFs/src/ff.c **** 			*fp->cltbl = ulen;	/* Number of items used */
4034:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ulen <= tlen) {
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tbl = 0;		/* Terminate table */
4036:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4037:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NOT_ENOUGH_CORE;	/* Given table size is smaller than required */
4038:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4039:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* Fast seek */
4040:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs > fp->obj.objsize) ofs = fp->obj.objsize;	/* Clip offset at the file size */
4041:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = ofs;				/* Set file pointer */
4042:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs) {
4043:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
4044:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, fp->clust);
4045:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!dsc) ABORT(fs, FR_INT_ERR);
4046:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
4047:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr % SS(fs) && dsc != fp->sect) {	/* Refill sector cache if needed */
4048:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
4049:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4050:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
4051:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
4052:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
4053:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4054:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4055:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_read(fs->drv, fp->buf, dsc, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Load current sec
4056:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4057:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->sect = dsc;
4058:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4059:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4060:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4061:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
4062:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4063:Middlewares/Third_Party/FatFs/src/ff.c **** 
4064:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Normal Seek */
4065:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
4066:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4067:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type != FS_EXFAT && ofs >= 0x100000000) ofs = 0xFFFFFFFF;	/* Clip at 4GiB-1 if at FATx
4068:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4069:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs > fp->obj.objsize && (_FS_READONLY || !(fp->flag & FA_WRITE))) {	/* In read-only mode, cl
4070:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs = fp->obj.objsize;
4071:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4072:Middlewares/Third_Party/FatFs/src/ff.c **** 		ifptr = fp->fptr;
4073:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr = nsect = 0;
4074:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
4075:Middlewares/Third_Party/FatFs/src/ff.c **** 			bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size (byte) */
4076:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ifptr > 0 &&
4077:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
4078:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);	/* start from the current cluster */
4079:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs -= fp->fptr;
4080:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->clust;
4081:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* When seek to back cluster, */
4082:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->obj.sclust;					/* start from the first cluster */
4083:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0) {						/* If no cluster chain, create a new chain */
4085:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(&fp->obj, 0);
ARM GAS  /tmp/ccTP8DMx.s 			page 96


4086:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) ABORT(fs, FR_INT_ERR);
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4088:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = clst;
4089:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4090:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4091:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;
4092:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4093:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst != 0) {
4094:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
4095:Middlewares/Third_Party/FatFs/src/ff.c **** 					ofs -= bcs; fp->fptr += bcs;
4096:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4097:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
4098:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fp->fptr > fp->obj.objsize) {	/* No FAT chain object needs correct objsize t
4099:Middlewares/Third_Party/FatFs/src/ff.c **** 							fp->obj.objsize = fp->fptr;
4100:Middlewares/Third_Party/FatFs/src/ff.c **** 							fp->flag |= FA_MODIFIED;
4101:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4102:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, clst);	/* Follow chain with forceed stretch */
4103:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (clst == 0) {				/* Clip file size in case of disk full */
4104:Middlewares/Third_Party/FatFs/src/ff.c **** 							ofs = 0; break;
4105:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4106:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
4107:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4108:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
4109:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = get_fat(&fp->obj, clst);	/* Follow cluster chain if not in write mode */
4110:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4111:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
4113:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
4114:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4115:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr += ofs;
4116:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ofs % SS(fs)) {
4117:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect = clust2sect(fs, clst);	/* Current sector */
4118:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!nsect) ABORT(fs, FR_INT_ERR);
4119:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
4120:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4121:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4122:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_READONLY && fp->fptr > fp->obj.objsize) {		/* Set file change flag if the file size is e
4124:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.objsize = fp->fptr;
4125:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA_MODIFIED;
4126:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4127:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) && nsect != fp->sect) {	/* Fill sector cache if needed */
4128:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
4129:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4130:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {			/* Write-back dirty sector cache */
4131:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
4132:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
4133:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4134:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4135:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fp->buf, nsect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Fill sector cach
4136:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4137:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = nsect;
4138:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4139:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4140:Middlewares/Third_Party/FatFs/src/ff.c **** 
4141:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4142:Middlewares/Third_Party/FatFs/src/ff.c **** }
ARM GAS  /tmp/ccTP8DMx.s 			page 97


4143:Middlewares/Third_Party/FatFs/src/ff.c **** 
4144:Middlewares/Third_Party/FatFs/src/ff.c **** 
4145:Middlewares/Third_Party/FatFs/src/ff.c **** 
4146:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1
4147:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4148:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create a Directory Object                                             */
4149:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4150:Middlewares/Third_Party/FatFs/src/ff.c **** 
4151:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_opendir (
4152:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to directory object to create */
4153:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
4154:Middlewares/Third_Party/FatFs/src/ff.c **** )
4155:Middlewares/Third_Party/FatFs/src/ff.c **** {
4156:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4157:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4158:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID *obj;
4159:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4160:Middlewares/Third_Party/FatFs/src/ff.c **** 
4161:Middlewares/Third_Party/FatFs/src/ff.c **** 
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp) return FR_INVALID_OBJECT;
4163:Middlewares/Third_Party/FatFs/src/ff.c **** 
4164:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4165:Middlewares/Third_Party/FatFs/src/ff.c **** 	obj = &dp->obj;
4166:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
4167:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4168:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->fs = fs;
4169:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4170:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
4171:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
4172:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
4173:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->attr & AM_DIR) {		/* This object is a sub-directory */
4174:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4175:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_EXFAT) {
4176:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->c_scl = obj->sclust;							/* Get containing directory inforamation */
4177:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->c_size = ((DWORD)obj->objsize & 0xFFFFFF00) | obj->stat;
4178:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->c_ofs = dp->blk_ofs;
4179:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Get object allocation info */
4180:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
4181:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
4182:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
4183:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4184:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
4185:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->sclust = ld_clust(fs, dp->dir);	/* Get object allocation info */
4186:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4187:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* This object is a file */
4188:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_PATH;
4189:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4190:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4191:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4192:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->id = fs->id;
4193:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
4194:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4195:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (obj->sclust) {
4197:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
4198:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!obj->lockid) res = FR_TOO_MANY_OPEN_FILES;
4199:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
ARM GAS  /tmp/ccTP8DMx.s 			page 98


4200:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->lockid = 0;	/* Root directory need not to be locked */
4201:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4202:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4203:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4204:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4205:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4206:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
4208:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) obj->fs = 0;		/* Invalidate the directory object if function faild */
4210:Middlewares/Third_Party/FatFs/src/ff.c **** 
4211:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4212:Middlewares/Third_Party/FatFs/src/ff.c **** }
4213:Middlewares/Third_Party/FatFs/src/ff.c **** 
4214:Middlewares/Third_Party/FatFs/src/ff.c **** 
4215:Middlewares/Third_Party/FatFs/src/ff.c **** 
4216:Middlewares/Third_Party/FatFs/src/ff.c **** 
4217:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4218:Middlewares/Third_Party/FatFs/src/ff.c **** /* Close Directory                                                       */
4219:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4220:Middlewares/Third_Party/FatFs/src/ff.c **** 
4221:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_closedir (
4222:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR *dp		/* Pointer to the directory object to be closed */
4223:Middlewares/Third_Party/FatFs/src/ff.c **** )
4224:Middlewares/Third_Party/FatFs/src/ff.c **** {
4225:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4227:Middlewares/Third_Party/FatFs/src/ff.c **** 
4228:Middlewares/Third_Party/FatFs/src/ff.c **** 
4229:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&dp->obj, &fs);			/* Check validity of the file object */
4230:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4231:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4232:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->obj.lockid) {				/* Decrement sub-directory open counter */
4233:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(dp->obj.lockid);
4234:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4235:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK)
4236:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4237:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
4238:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->obj.fs = 0;			/* Invalidate directory object */
4239:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4240:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
4241:Middlewares/Third_Party/FatFs/src/ff.c **** 		unlock_fs(fs, FR_OK);		/* Unlock volume */
4242:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4243:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4244:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
4245:Middlewares/Third_Party/FatFs/src/ff.c **** }
4246:Middlewares/Third_Party/FatFs/src/ff.c **** 
4247:Middlewares/Third_Party/FatFs/src/ff.c **** 
4248:Middlewares/Third_Party/FatFs/src/ff.c **** 
4249:Middlewares/Third_Party/FatFs/src/ff.c **** 
4250:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4251:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read Directory Entries in Sequence                                    */
4252:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4253:Middlewares/Third_Party/FatFs/src/ff.c **** 
4254:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_readdir (
4255:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the open directory object */
4256:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
ARM GAS  /tmp/ccTP8DMx.s 			page 99


4257:Middlewares/Third_Party/FatFs/src/ff.c **** )
4258:Middlewares/Third_Party/FatFs/src/ff.c **** {
4259:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4260:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4261:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4262:Middlewares/Third_Party/FatFs/src/ff.c **** 
4263:Middlewares/Third_Party/FatFs/src/ff.c **** 
4264:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&dp->obj, &fs);	/* Check validity of the directory object */
4265:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4266:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fno) {
4267:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
4268:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4269:Middlewares/Third_Party/FatFs/src/ff.c **** 			INIT_NAMBUF(fs);
4270:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(dp, 0);			/* Read an item */
4271:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
4272:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {				/* A valid entry is found */
4273:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
4275:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
4276:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4277:Middlewares/Third_Party/FatFs/src/ff.c **** 			FREE_NAMBUF();
4278:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4279:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4280:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4281:Middlewares/Third_Party/FatFs/src/ff.c **** }
4282:Middlewares/Third_Party/FatFs/src/ff.c **** 
4283:Middlewares/Third_Party/FatFs/src/ff.c **** 
4284:Middlewares/Third_Party/FatFs/src/ff.c **** 
4285:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FIND
4286:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4287:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find Next File                                                        */
4288:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4289:Middlewares/Third_Party/FatFs/src/ff.c **** 
4290:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_findnext (
4291:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the open directory object */
4292:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno	/* Pointer to the file information structure */
4293:Middlewares/Third_Party/FatFs/src/ff.c **** )
4294:Middlewares/Third_Party/FatFs/src/ff.c **** {
4295:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4296:Middlewares/Third_Party/FatFs/src/ff.c **** 
4297:Middlewares/Third_Party/FatFs/src/ff.c **** 
4298:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
4299:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_readdir(dp, fno);		/* Get a directory item */
4300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK || !fno || !fno->fname[0]) break;	/* Terminate if any error or end of directory 
4301:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pattern_matching(dp->pat, fno->fname, 0, 0)) break;		/* Test for the file name */
4302:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0 && _USE_FIND == 2
4303:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pattern_matching(dp->pat, fno->altname, 0, 0)) break;	/* Test for alternative name if exist *
4304:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4305:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4306:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
4307:Middlewares/Third_Party/FatFs/src/ff.c **** }
4308:Middlewares/Third_Party/FatFs/src/ff.c **** 
4309:Middlewares/Third_Party/FatFs/src/ff.c **** 
4310:Middlewares/Third_Party/FatFs/src/ff.c **** 
4311:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4312:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find First File                                                       */
4313:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  /tmp/ccTP8DMx.s 			page 100


4314:Middlewares/Third_Party/FatFs/src/ff.c **** 
4315:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_findfirst (
4316:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,				/* Pointer to the blank directory object */
4317:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno,			/* Pointer to the file information structure */
4318:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,		/* Pointer to the directory to open */
4319:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* pattern	/* Pointer to the matching pattern */
4320:Middlewares/Third_Party/FatFs/src/ff.c **** )
4321:Middlewares/Third_Party/FatFs/src/ff.c **** {
4322:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4323:Middlewares/Third_Party/FatFs/src/ff.c **** 
4324:Middlewares/Third_Party/FatFs/src/ff.c **** 
4325:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->pat = pattern;		/* Save pointer to pattern string */
4326:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_opendir(dp, path);		/* Open the target directory */
4327:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4328:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_findnext(dp, fno);	/* Find the first item */
4329:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4330:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
4331:Middlewares/Third_Party/FatFs/src/ff.c **** }
4332:Middlewares/Third_Party/FatFs/src/ff.c **** 
4333:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_FIND */
4334:Middlewares/Third_Party/FatFs/src/ff.c **** 
4335:Middlewares/Third_Party/FatFs/src/ff.c **** 
4336:Middlewares/Third_Party/FatFs/src/ff.c **** 
4337:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE == 0
4338:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4339:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get File Status                                                       */
4340:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4341:Middlewares/Third_Party/FatFs/src/ff.c **** 
4342:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_stat (
4343:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
4344:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
4345:Middlewares/Third_Party/FatFs/src/ff.c **** )
4346:Middlewares/Third_Party/FatFs/src/ff.c **** {
4347:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4348:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4349:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4350:Middlewares/Third_Party/FatFs/src/ff.c **** 
4351:Middlewares/Third_Party/FatFs/src/ff.c **** 
4352:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4353:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &dj.obj.fs, 0);
4354:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4355:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(dj.obj.fs);
4356:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4357:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
4358:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* It is origin directory */
4359:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
4360:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {							/* Found an object */
4361:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fno) get_fileinfo(&dj, fno);
4362:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4363:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4364:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4365:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4366:Middlewares/Third_Party/FatFs/src/ff.c **** 
4367:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.obj.fs, res);
4368:Middlewares/Third_Party/FatFs/src/ff.c **** }
4369:Middlewares/Third_Party/FatFs/src/ff.c **** 
4370:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccTP8DMx.s 			page 101


4371:Middlewares/Third_Party/FatFs/src/ff.c **** 
4372:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4373:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4374:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get Number of Free Clusters                                           */
4375:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4376:Middlewares/Third_Party/FatFs/src/ff.c **** 
4377:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getfree (
4378:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
4379:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD* nclst,		/* Pointer to a variable to return number of free clusters */
4380:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** fatfs		/* Pointer to return pointer to corresponding file system object */
4381:Middlewares/Third_Party/FatFs/src/ff.c **** )
4382:Middlewares/Third_Party/FatFs/src/ff.c **** {
4383:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4384:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4385:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD nfree, clst, sect, stat;
4386:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
4387:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *p;
4388:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID obj;
4389:Middlewares/Third_Party/FatFs/src/ff.c **** 
4390:Middlewares/Third_Party/FatFs/src/ff.c **** 
4391:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4392:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
4393:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4394:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fatfs = fs;				/* Return ptr to the fs object */
4395:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* If free_clst is valid, return it without full cluster scan */
4396:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) {
4397:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = fs->free_clst;
4398:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4399:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get number of free clusters */
4400:Middlewares/Third_Party/FatFs/src/ff.c **** 			nfree = 0;
4401:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
4402:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = 2; obj.fs = fs;
4403:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
4404:Middlewares/Third_Party/FatFs/src/ff.c **** 					stat = get_fat(&obj, clst);
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
4406:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) nfree++;
4408:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
4409:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4410:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4411:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {	/* exFAT: Scan bitmap table */
4412:Middlewares/Third_Party/FatFs/src/ff.c **** 					BYTE bm;
4413:Middlewares/Third_Party/FatFs/src/ff.c **** 					UINT b;
4414:Middlewares/Third_Party/FatFs/src/ff.c **** 
4415:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fs->n_fatent - 2;
4416:Middlewares/Third_Party/FatFs/src/ff.c **** 					sect = fs->database;
4417:Middlewares/Third_Party/FatFs/src/ff.c **** 					i = 0;
4418:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4419:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (i == 0 && (res = move_window(fs, sect++)) != FR_OK) break;
4420:Middlewares/Third_Party/FatFs/src/ff.c **** 						for (b = 8, bm = fs->win[i]; b && clst; b--, clst--) {
4421:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!(bm & 1)) nfree++;
4422:Middlewares/Third_Party/FatFs/src/ff.c **** 							bm >>= 1;
4423:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4424:Middlewares/Third_Party/FatFs/src/ff.c **** 						i = (i + 1) % SS(fs);
4425:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (clst);
4426:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4427:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  /tmp/ccTP8DMx.s 			page 102


4428:Middlewares/Third_Party/FatFs/src/ff.c **** 				{	/* FAT16/32: Sector alighed FAT entries */
4429:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fs->n_fatent; sect = fs->fatbase;
4430:Middlewares/Third_Party/FatFs/src/ff.c **** 					i = 0; p = 0;
4431:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4432:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (i == 0) {
4433:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, sect++);
4434:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res != FR_OK) break;
4435:Middlewares/Third_Party/FatFs/src/ff.c **** 							p = fs->win;
4436:Middlewares/Third_Party/FatFs/src/ff.c **** 							i = SS(fs);
4437:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4438:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (fs->fs_type == FS_FAT16) {
4439:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (ld_word(p) == 0) nfree++;
4440:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 2; i -= 2;
4441:Middlewares/Third_Party/FatFs/src/ff.c **** 						} else {
4442:Middlewares/Third_Party/FatFs/src/ff.c **** 							if ((ld_dword(p) & 0x0FFFFFFF) == 0) nfree++;
4443:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 4; i -= 4;
4444:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4445:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (--clst);
4446:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4447:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4448:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = nfree;			/* Return the free clusters */
4449:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst = nfree;	/* Now free_clst is valid */
4450:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;		/* FSInfo is to be updated */
4451:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4452:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4453:Middlewares/Third_Party/FatFs/src/ff.c **** 
4454:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4455:Middlewares/Third_Party/FatFs/src/ff.c **** }
4456:Middlewares/Third_Party/FatFs/src/ff.c **** 
4457:Middlewares/Third_Party/FatFs/src/ff.c **** 
4458:Middlewares/Third_Party/FatFs/src/ff.c **** 
4459:Middlewares/Third_Party/FatFs/src/ff.c **** 
4460:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4461:Middlewares/Third_Party/FatFs/src/ff.c **** /* Truncate File                                                         */
4462:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4463:Middlewares/Third_Party/FatFs/src/ff.c **** 
4464:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_truncate (
4465:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
4466:Middlewares/Third_Party/FatFs/src/ff.c **** )
4467:Middlewares/Third_Party/FatFs/src/ff.c **** {
4468:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4469:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4470:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl;
4471:Middlewares/Third_Party/FatFs/src/ff.c **** 
4472:Middlewares/Third_Party/FatFs/src/ff.c **** 
4473:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
4475:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
4476:Middlewares/Third_Party/FatFs/src/ff.c **** 
4477:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->fptr < fp->obj.objsize) {	/* Process when fptr is not on the eof */
4478:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
4479:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = remove_chain(&fp->obj, fp->obj.sclust, 0);
4480:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.sclust = 0;
4481:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* When truncate a part of the file, remove remaining clusters */
4482:Middlewares/Third_Party/FatFs/src/ff.c **** 			ncl = get_fat(&fp->obj, fp->clust);
4483:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
4484:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 0xFFFFFFFF) res = FR_DISK_ERR;
ARM GAS  /tmp/ccTP8DMx.s 			page 103


4485:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
4487:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
4488:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4489:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4490:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->obj.objsize = fp->fptr;	/* Set file size to current R/W point */
4491:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_MODIFIED;
4492:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
4493:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (fp->flag & FA_DIRTY)) {
4494:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
4495:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
4496:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4497:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
4498:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4499:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4500:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4501:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) ABORT(fs, res);
4502:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4503:Middlewares/Third_Party/FatFs/src/ff.c **** 
4504:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4505:Middlewares/Third_Party/FatFs/src/ff.c **** }
4506:Middlewares/Third_Party/FatFs/src/ff.c **** 
4507:Middlewares/Third_Party/FatFs/src/ff.c **** 
4508:Middlewares/Third_Party/FatFs/src/ff.c **** 
4509:Middlewares/Third_Party/FatFs/src/ff.c **** 
4510:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4511:Middlewares/Third_Party/FatFs/src/ff.c **** /* Delete a File/Directory                                               */
4512:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4513:Middlewares/Third_Party/FatFs/src/ff.c **** 
4514:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_unlink (
4515:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Pointer to the file or directory path */
4516:Middlewares/Third_Party/FatFs/src/ff.c **** )
4517:Middlewares/Third_Party/FatFs/src/ff.c **** {
4518:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4519:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj, sdj;
4520:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dclst = 0;
4521:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4522:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4523:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID obj;
4524:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4525:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4526:Middlewares/Third_Party/FatFs/src/ff.c **** 
4527:Middlewares/Third_Party/FatFs/src/ff.c **** 
4528:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4529:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);
4530:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4531:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4532:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4533:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
4534:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT)) {
4535:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
4536:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4537:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4538:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = chk_lock(&dj, 2);	/* Check if it is an open object */
4539:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4540:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* The object is accessible */
4541:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
ARM GAS  /tmp/ccTP8DMx.s 			page 104


4542:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
4543:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_RDO) {
4545:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
4546:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4547:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4548:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4549:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4550:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj.fs = fs;
4551:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
4552:Middlewares/Third_Party/FatFs/src/ff.c **** 					obj.sclust = dclst = ld_dword(fs->dirbuf + XDIR_FstClus);
4553:Middlewares/Third_Party/FatFs/src/ff.c **** 					obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
4554:Middlewares/Third_Party/FatFs/src/ff.c **** 					obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
4555:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4556:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4557:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
4558:Middlewares/Third_Party/FatFs/src/ff.c **** 					dclst = ld_clust(fs, dj.dir);
4559:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4560:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {			/* Is it a sub-directory? */
4561:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
4562:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (dclst == fs->cdir) {		 		/* Is it the current directory? */
4563:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
4564:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
4565:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4566:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
4567:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.obj.fs = fs;						/* Open the sub-directory */
4568:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.obj.sclust = dclst;
4569:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4570:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (fs->fs_type == FS_EXFAT) {
4571:Middlewares/Third_Party/FatFs/src/ff.c **** 							sdj.obj.objsize = obj.objsize;
4572:Middlewares/Third_Party/FatFs/src/ff.c **** 							sdj.obj.stat = obj.stat;
4573:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4574:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4575:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = dir_sdi(&sdj, 0);
4576:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
4577:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item */
4578:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? */
4579:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
4580:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4581:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4582:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4583:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4584:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4585:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&dj);			/* Remove the directory entry */
4586:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && dclst) {	/* Remove the cluster chain if exist */
4587:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4588:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(&obj, dclst, 0);
4589:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4590:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(&dj.obj, dclst, 0);
4591:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4592:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4593:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) res = sync_fs(fs);
4594:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4595:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4596:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4597:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4598:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccTP8DMx.s 			page 105


4599:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4600:Middlewares/Third_Party/FatFs/src/ff.c **** }
4601:Middlewares/Third_Party/FatFs/src/ff.c **** 
4602:Middlewares/Third_Party/FatFs/src/ff.c **** 
4603:Middlewares/Third_Party/FatFs/src/ff.c **** 
4604:Middlewares/Third_Party/FatFs/src/ff.c **** 
4605:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4606:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create a Directory                                                    */
4607:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4608:Middlewares/Third_Party/FatFs/src/ff.c **** 
4609:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mkdir (
4610:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Pointer to the directory path */
4611:Middlewares/Third_Party/FatFs/src/ff.c **** )
4612:Middlewares/Third_Party/FatFs/src/ff.c **** {
4613:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4614:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4615:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4616:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
4617:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
4618:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dsc, dcl, pcl, tm;
4619:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4620:Middlewares/Third_Party/FatFs/src/ff.c **** 
4621:Middlewares/Third_Party/FatFs/src/ff.c **** 
4622:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4623:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);
4624:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4625:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4626:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4627:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
4628:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
4629:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
4630:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
4631:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4632:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) {				/* Can create a new directory */
4633:Middlewares/Third_Party/FatFs/src/ff.c **** 			dcl = create_chain(&dj.obj, 0);		/* Allocate a cluster for the new directory table */
4634:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.obj.objsize = (DWORD)fs->csize * SS(fs);
4635:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
4636:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
4637:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
4640:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();
4641:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
4642:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, dcl);
4643:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = fs->win;
4644:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir, 0, SS(fs));
4645:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
4646:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir + DIR_Name, ' ', 11);	/* Create "." entry */
4647:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Name] = '.';
4648:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;
4649:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);
4650:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);
4651:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dir + SZDIRE, dir, SZDIRE); 	/* Create ".." entry */
4652:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[SZDIRE + 1] = '.'; pcl = dj.obj.sclust;
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_FAT32 && pcl == fs->dirbase) pcl = 0;
4654:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
4655:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
ARM GAS  /tmp/ccTP8DMx.s 			page 106


4656:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (n = fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
4657:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
4658:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
4659:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_window(fs);
4660:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
4661:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir, 0, SS(fs));
4662:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4663:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4665:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_register(&dj);	/* Register the object to the directoy */
4666:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4667:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4668:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4669:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {	/* Initialize directory entry block */
4670:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ModTime, tm);	/* Created time */
4671:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FstClus, dcl);	/* Table start cluster */
4672:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FileSize, (DWORD)dj.obj.objsize);	/* File size needs to be valid */
4673:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ValidFileSize, (DWORD)dj.obj.objsize);
4674:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_GenFlags] = 3;				/* Initialize the object flag (contiguous) */
4675:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_Attr] = AM_DIR;				/* Attribute */
4676:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = store_xdir(&dj);
4677:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4678:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4679:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
4680:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir = dj.dir;
4681:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);	/* Created time */
4682:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);				/* Table start cluster */
4683:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;				/* Attribute */
4684:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
4685:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4686:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
4687:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
4688:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4689:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4690:Middlewares/Third_Party/FatFs/src/ff.c **** 				remove_chain(&dj.obj, dcl, 0);		/* Could not register, remove cluster chain */
4691:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4692:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4693:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4694:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4695:Middlewares/Third_Party/FatFs/src/ff.c **** 
4696:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4697:Middlewares/Third_Party/FatFs/src/ff.c **** }
4698:Middlewares/Third_Party/FatFs/src/ff.c **** 
4699:Middlewares/Third_Party/FatFs/src/ff.c **** 
4700:Middlewares/Third_Party/FatFs/src/ff.c **** 
4701:Middlewares/Third_Party/FatFs/src/ff.c **** 
4702:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4703:Middlewares/Third_Party/FatFs/src/ff.c **** /* Rename a File/Directory                                               */
4704:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4705:Middlewares/Third_Party/FatFs/src/ff.c **** 
4706:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_rename (
4707:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path_old,	/* Pointer to the object name to be renamed */
4708:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path_new	/* Pointer to the new name */
4709:Middlewares/Third_Party/FatFs/src/ff.c **** )
4710:Middlewares/Third_Party/FatFs/src/ff.c **** {
4711:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4712:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR djo, djn;
ARM GAS  /tmp/ccTP8DMx.s 			page 107


4713:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4714:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE buf[_FS_EXFAT ? SZDIRE * 2 : 24], *dir;
4715:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dw;
4716:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4717:Middlewares/Third_Party/FatFs/src/ff.c **** 
4718:Middlewares/Third_Party/FatFs/src/ff.c **** 
4719:Middlewares/Third_Party/FatFs/src/ff.c **** 	get_ldnumber(&path_new);						/* Snip drive number of new name off */
4720:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path_old, &fs, FA_WRITE);	/* Get logical drive of the old object */
4721:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4722:Middlewares/Third_Party/FatFs/src/ff.c **** 		djo.obj.fs = fs;
4723:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4724:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
4725:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (djo.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check vali
4726:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4727:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4728:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = chk_lock(&djo, 2);
4729:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4730:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4731:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Object to be renamed is found */
4732:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4733:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {	/* At exFAT */
4734:Middlewares/Third_Party/FatFs/src/ff.c **** 				BYTE nf, nn;
4735:Middlewares/Third_Party/FatFs/src/ff.c **** 				WORD nh;
4736:Middlewares/Third_Party/FatFs/src/ff.c **** 
4737:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(buf, fs->dirbuf, SZDIRE * 2);	/* Save 85+C0 entry of old object */
4738:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof djo);
4739:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
4740:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
4741:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
4742:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4743:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
4744:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
4745:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
4746:Middlewares/Third_Party/FatFs/src/ff.c **** 						nf = fs->dirbuf[XDIR_NumSec]; nn = fs->dirbuf[XDIR_NumName];
4747:Middlewares/Third_Party/FatFs/src/ff.c **** 						nh = ld_word(fs->dirbuf + XDIR_NameHash);
4748:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(fs->dirbuf, buf, SZDIRE * 2);
4749:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_NumSec] = nf; fs->dirbuf[XDIR_NumName] = nn;
4750:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_word(fs->dirbuf + XDIR_NameHash, nh);
4751:Middlewares/Third_Party/FatFs/src/ff.c **** /* Start of critical section where an interruption can cause a cross-link */
4752:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = store_xdir(&djn);
4753:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4754:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4755:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
4756:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4757:Middlewares/Third_Party/FatFs/src/ff.c **** 			{	/* At FAT12/FAT16/FAT32 */
4758:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(buf, djo.dir + DIR_Attr, 21);	/* Save information about the object except name */
4759:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
4760:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
4761:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
4762:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
4763:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4764:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
4765:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
4766:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
4767:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir = djn.dir;					/* Copy information about object except name */
4768:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
4769:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
ARM GAS  /tmp/ccTP8DMx.s 			page 108


4770:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
4771:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.obj.sclust != djn.obj.sclust) {	/* Update .. entry in the
4772:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
4773:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!dw) {
4774:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = FR_INT_ERR;
4775:Middlewares/Third_Party/FatFs/src/ff.c **** 							} else {
4776:Middlewares/Third_Party/FatFs/src/ff.c **** /* Start of critical section where an interruption can cause a cross-link */
4777:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = move_window(fs, dw);
4778:Middlewares/Third_Party/FatFs/src/ff.c **** 								dir = fs->win + SZDIRE * 1;	/* Ptr to .. entry */
4779:Middlewares/Third_Party/FatFs/src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
4780:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
4781:Middlewares/Third_Party/FatFs/src/ff.c **** 									fs->wflag = 1;
4782:Middlewares/Third_Party/FatFs/src/ff.c **** 								}
4783:Middlewares/Third_Party/FatFs/src/ff.c **** 							}
4784:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4785:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4786:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4787:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4788:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4789:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&djo);		/* Remove old entry */
4790:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
4791:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
4792:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4793:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4794:Middlewares/Third_Party/FatFs/src/ff.c **** /* End of the critical section */
4795:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4796:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4797:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4798:Middlewares/Third_Party/FatFs/src/ff.c **** 
4799:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4800:Middlewares/Third_Party/FatFs/src/ff.c **** }
4801:Middlewares/Third_Party/FatFs/src/ff.c **** 
4802:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
4803:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE == 0 */
4804:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 1 */
4805:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 2 */
4806:Middlewares/Third_Party/FatFs/src/ff.c **** 
4807:Middlewares/Third_Party/FatFs/src/ff.c **** 
4808:Middlewares/Third_Party/FatFs/src/ff.c **** 
4809:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_CHMOD && !_FS_READONLY
4810:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4811:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Attribute                                                      */
4812:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4813:Middlewares/Third_Party/FatFs/src/ff.c **** 
4814:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chmod (
4815:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
4816:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE attr,			/* Attribute bits */
4817:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mask			/* Attribute mask to change */
4818:Middlewares/Third_Party/FatFs/src/ff.c **** )
4819:Middlewares/Third_Party/FatFs/src/ff.c **** {
4820:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4821:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4822:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4823:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4824:Middlewares/Third_Party/FatFs/src/ff.c **** 
4825:Middlewares/Third_Party/FatFs/src/ff.c **** 
4826:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);	/* Get logical drive */
ARM GAS  /tmp/ccTP8DMx.s 			page 109


4827:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4828:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4829:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4830:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4831:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (dj.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check objec
4832:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4833:Middlewares/Third_Party/FatFs/src/ff.c **** 			mask &= AM_RDO|AM_HID|AM_SYS|AM_ARC;	/* Valid attribute mask */
4834:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4835:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
4836:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->dirbuf[XDIR_Attr] = (attr & mask) | (fs->dirbuf[XDIR_Attr] & (BYTE)~mask);	/* Apply attribu
4837:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = store_xdir(&dj);
4838:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
4839:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4840:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
4841:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.dir[DIR_Attr] = (attr & mask) | (dj.dir[DIR_Attr] & (BYTE)~mask);	/* Apply attribute change 
4842:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
4843:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4844:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4845:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(fs);
4846:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4847:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4848:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4849:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4850:Middlewares/Third_Party/FatFs/src/ff.c **** 
4851:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4852:Middlewares/Third_Party/FatFs/src/ff.c **** }
4853:Middlewares/Third_Party/FatFs/src/ff.c **** 
4854:Middlewares/Third_Party/FatFs/src/ff.c **** 
4855:Middlewares/Third_Party/FatFs/src/ff.c **** 
4856:Middlewares/Third_Party/FatFs/src/ff.c **** 
4857:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4858:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Timestamp                                                      */
4859:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4860:Middlewares/Third_Party/FatFs/src/ff.c **** 
4861:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_utime (
4862:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file/directory name */
4863:Middlewares/Third_Party/FatFs/src/ff.c **** 	const FILINFO* fno	/* Pointer to the time stamp to be set */
4864:Middlewares/Third_Party/FatFs/src/ff.c **** )
4865:Middlewares/Third_Party/FatFs/src/ff.c **** {
4866:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4867:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4868:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4869:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4870:Middlewares/Third_Party/FatFs/src/ff.c **** 
4871:Middlewares/Third_Party/FatFs/src/ff.c **** 
4872:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);	/* Get logical drive */
4873:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4874:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4875:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4876:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4877:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (dj.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check objec
4878:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4879:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4880:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
4881:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(fs->dirbuf + XDIR_ModTime, (DWORD)fno->fdate << 16 | fno->ftime);
4882:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = store_xdir(&dj);
4883:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
ARM GAS  /tmp/ccTP8DMx.s 			page 110


4884:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4885:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
4886:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(dj.dir + DIR_ModTime, (DWORD)fno->fdate << 16 | fno->ftime);
4887:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
4888:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4889:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4890:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(fs);
4891:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4892:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4893:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4894:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4895:Middlewares/Third_Party/FatFs/src/ff.c **** 
4896:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4897:Middlewares/Third_Party/FatFs/src/ff.c **** }
4898:Middlewares/Third_Party/FatFs/src/ff.c **** 
4899:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_CHMOD && !_FS_READONLY */
4900:Middlewares/Third_Party/FatFs/src/ff.c **** 
4901:Middlewares/Third_Party/FatFs/src/ff.c **** 
4902:Middlewares/Third_Party/FatFs/src/ff.c **** 
4903:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LABEL
4904:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4905:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get Volume Label                                                      */
4906:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4907:Middlewares/Third_Party/FatFs/src/ff.c **** 
4908:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getlabel (
4909:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
4910:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* label,		/* Pointer to a buffer to return the volume label */
4911:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD* vsn			/* Pointer to a variable to return the volume serial number */
4912:Middlewares/Third_Party/FatFs/src/ff.c **** )
4913:Middlewares/Third_Party/FatFs/src/ff.c **** {
4914:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4915:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4916:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4917:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT si, di;
4918:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE || _FS_EXFAT
4919:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
4920:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4921:Middlewares/Third_Party/FatFs/src/ff.c **** 
4922:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4923:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
4924:Middlewares/Third_Party/FatFs/src/ff.c **** 
4925:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get volume label */
4926:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && label) {
4927:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs; dj.obj.sclust = 0;	/* Open root directory */
4928:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(&dj, 0);
4929:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4930:Middlewares/Third_Party/FatFs/src/ff.c **** 		 	res = dir_read(&dj, 1);			/* Find a volume label entry */
4931:Middlewares/Third_Party/FatFs/src/ff.c **** 		 	if (res == FR_OK) {
4932:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4933:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
4934:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (si = di = 0; si < dj.dir[XDIR_NumLabel]; si++) {	/* Extract volume label from 83 entry */
4935:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = ld_word(dj.dir + XDIR_Label + si * 2);
4936:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
4937:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = w;
4938:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4939:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = ff_convert(w, 0);	/* Unicode -> OEM */
4940:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (w == 0) w = '?';	/* Replace wrong character */
ARM GAS  /tmp/ccTP8DMx.s 			page 111


4941:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_DF1S && w >= 0x100) label[di++] = (char)(w >> 8);
4942:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = (char)w;
4943:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4944:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4945:Middlewares/Third_Party/FatFs/src/ff.c **** 					label[di] = 0;
4946:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4947:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4948:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
4949:Middlewares/Third_Party/FatFs/src/ff.c **** 					si = di = 0;		/* Extract volume label from AM_VOL entry with code comversion */
4950:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4951:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
4952:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = (si < 11) ? dj.dir[si++] : ' ';
4953:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (IsDBCS1(w) && si < 11 && IsDBCS2(dj.dir[si])) {
4954:Middlewares/Third_Party/FatFs/src/ff.c **** 							w = w << 8 | dj.dir[si++];
4955:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4956:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = ff_convert(w, 1);	/* OEM -> Unicode */
4957:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4958:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = dj.dir[si++];
4959:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4960:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (di < 11);
4961:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {				/* Truncate trailing spaces */
4962:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di] = 0;
4963:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (di == 0) break;
4964:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (label[--di] == ' ');
4965:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4966:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4967:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4968:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) {	/* No label entry and return nul string */
4969:Middlewares/Third_Party/FatFs/src/ff.c **** 			label[0] = 0;
4970:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
4971:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4972:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4973:Middlewares/Third_Party/FatFs/src/ff.c **** 
4974:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get volume serial number */
4975:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && vsn) {
4976:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, fs->volbase);
4977:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4978:Middlewares/Third_Party/FatFs/src/ff.c **** 			switch (fs->fs_type) {
4979:Middlewares/Third_Party/FatFs/src/ff.c **** 			case FS_EXFAT:
4980:Middlewares/Third_Party/FatFs/src/ff.c **** 				di = BPB_VolIDEx; break;
4981:Middlewares/Third_Party/FatFs/src/ff.c **** 
4982:Middlewares/Third_Party/FatFs/src/ff.c **** 			case FS_FAT32:
4983:Middlewares/Third_Party/FatFs/src/ff.c **** 				di = BS_VolID32; break;
4984:Middlewares/Third_Party/FatFs/src/ff.c **** 
4985:Middlewares/Third_Party/FatFs/src/ff.c **** 			default:
4986:Middlewares/Third_Party/FatFs/src/ff.c **** 				di = BS_VolID;
4987:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4988:Middlewares/Third_Party/FatFs/src/ff.c **** 			*vsn = ld_dword(fs->win + di);
4989:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4990:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4991:Middlewares/Third_Party/FatFs/src/ff.c **** 
4992:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4993:Middlewares/Third_Party/FatFs/src/ff.c **** }
4994:Middlewares/Third_Party/FatFs/src/ff.c **** 
4995:Middlewares/Third_Party/FatFs/src/ff.c **** 
4996:Middlewares/Third_Party/FatFs/src/ff.c **** 
4997:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
ARM GAS  /tmp/ccTP8DMx.s 			page 112


4998:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4999:Middlewares/Third_Party/FatFs/src/ff.c **** /* Set Volume Label                                                      */
5000:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5001:Middlewares/Third_Party/FatFs/src/ff.c **** 
5002:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_setlabel (
5003:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* label	/* Pointer to the volume label to set */
5004:Middlewares/Third_Party/FatFs/src/ff.c **** )
5005:Middlewares/Third_Party/FatFs/src/ff.c **** {
5006:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
5007:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
5008:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
5009:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE dirvn[22];
5010:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j, slen;
5011:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
5012:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const char badchr[] = "\"*+,.:;<=>\?[]|\x7F";
5013:Middlewares/Third_Party/FatFs/src/ff.c **** 
5014:Middlewares/Third_Party/FatFs/src/ff.c **** 
5015:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
5016:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&label, &fs, FA_WRITE);
5017:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fs, res);
5018:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
5019:Middlewares/Third_Party/FatFs/src/ff.c **** 
5020:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get length of given volume label */
5021:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (slen = 0; (UINT)label[slen] >= ' '; slen++) ;	/* Get name length */
5022:Middlewares/Third_Party/FatFs/src/ff.c **** 
5023:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5024:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
5025:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = j = 0; i < slen; ) {	/* Create volume label in directory form */
5026:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = label[i++];
5027:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
5028:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsDBCS1(w)) {
5029:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = (i < slen && IsDBCS2(label[i])) ? w << 8 | (BYTE)label[i++] : 0;
5030:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5031:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(w, 1);
5032:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5033:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w == 0 || chk_chr(badchr, w) || j == 22) {	/* Check validity check validity of the volume la
5034:Middlewares/Third_Party/FatFs/src/ff.c **** 				LEAVE_FF(fs, FR_INVALID_NAME);
5035:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5036:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(dirvn + j, w); j += 2;
5037:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5038:Middlewares/Third_Party/FatFs/src/ff.c **** 		slen = j;
5039:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
5040:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5041:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* On the FAT12/16/32 volume */
5042:Middlewares/Third_Party/FatFs/src/ff.c **** 		for ( ; slen && label[slen - 1] == ' '; slen--) ;	/* Remove trailing spaces */
5043:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (slen) {		/* Is there a volume label to be set? */
5044:Middlewares/Third_Party/FatFs/src/ff.c **** 			dirvn[0] = 0; i = j = 0;	/* Create volume label in directory form */
5045:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
5046:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
5047:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(ff_wtoupper(label[i++]), 0);
5048:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5049:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = (BYTE)label[i++];
5050:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsDBCS1(w)) {
5051:Middlewares/Third_Party/FatFs/src/ff.c **** 					w = (j < 10 && i < slen && IsDBCS2(label[i])) ? w << 8 | (BYTE)label[i++] : 0;
5052:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5053:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
5054:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(ff_wtoupper(ff_convert(w, 1)), 0);
ARM GAS  /tmp/ccTP8DMx.s 			page 113


5055:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5056:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsLower(w)) w -= 0x20;			/* To upper ASCII characters */
5057:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
5058:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w >= 0x80) w = ExCvt[w - 0x80];	/* To upper extended characters (SBCS cfg) */
5059:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5060:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!_DF1S && w >= 0x80) w = 0;		/* Reject extended characters (ASCII cfg) */
5061:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5062:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5063:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5064:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w == 0 || chk_chr(badchr, w) || j >= (UINT)((w >= 0x100) ? 10 : 11)) {	/* Reject invalid ch
5065:Middlewares/Third_Party/FatFs/src/ff.c **** 					LEAVE_FF(fs, FR_INVALID_NAME);
5066:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5067:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w >= 0x100) dirvn[j++] = (BYTE)(w >> 8);
5068:Middlewares/Third_Party/FatFs/src/ff.c **** 				dirvn[j++] = (BYTE)w;
5069:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (i < slen);
5070:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (j < 11) dirvn[j++] = ' ';	/* Fill remaining name field */
5071:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dirvn[0] == DDEM) LEAVE_FF(fs, FR_INVALID_NAME);	/* Reject illegal name (heading DDEM) */
5072:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5073:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5074:Middlewares/Third_Party/FatFs/src/ff.c **** 
5075:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Set volume label */
5076:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.sclust = 0;		/* Open root directory */
5077:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(&dj, 0);
5078:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
5079:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_read(&dj, 1);	/* Get volume label entry */
5080:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
5081:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {
5082:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.dir[XDIR_NumLabel] = (BYTE)(slen / 2);	/* Change the volume label */
5083:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(dj.dir + XDIR_Label, dirvn, slen);
5084:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5085:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (slen) {
5086:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dj.dir, dirvn, 11);	/* Change the volume label */
5087:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
5088:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.dir[DIR_Name] = DDEM;	/* Remove the volume label */
5089:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5090:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5091:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
5092:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = sync_fs(fs);
5093:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* No volume label entry is found or error */
5094:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) {
5095:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
5096:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (slen) {	/* Create a volume label entry */
5097:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_alloc(&dj, 1);	/* Allocate an entry */
5098:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
5099:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_set(dj.dir, 0, SZDIRE);	/* Clear the entry */
5100:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {
5101:Middlewares/Third_Party/FatFs/src/ff.c **** 							dj.dir[XDIR_Type] = 0x83;		/* Create 83 entry */
5102:Middlewares/Third_Party/FatFs/src/ff.c **** 							dj.dir[XDIR_NumLabel] = (BYTE)(slen / 2);
5103:Middlewares/Third_Party/FatFs/src/ff.c **** 							mem_cpy(dj.dir + XDIR_Label, dirvn, slen);
5104:Middlewares/Third_Party/FatFs/src/ff.c **** 						} else {
5105:Middlewares/Third_Party/FatFs/src/ff.c **** 							dj.dir[DIR_Attr] = AM_VOL;		/* Create volume label entry */
5106:Middlewares/Third_Party/FatFs/src/ff.c **** 							mem_cpy(dj.dir, dirvn, 11);
5107:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
5108:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
5109:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = sync_fs(fs);
5110:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
5111:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
ARM GAS  /tmp/ccTP8DMx.s 			page 114


5112:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5113:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5114:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5115:Middlewares/Third_Party/FatFs/src/ff.c **** 
5116:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
5117:Middlewares/Third_Party/FatFs/src/ff.c **** }
5118:Middlewares/Third_Party/FatFs/src/ff.c **** 
5119:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
5120:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_LABEL */
5121:Middlewares/Third_Party/FatFs/src/ff.c **** 
5122:Middlewares/Third_Party/FatFs/src/ff.c **** 
5123:Middlewares/Third_Party/FatFs/src/ff.c **** 
5124:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_EXPAND && !_FS_READONLY
5125:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5126:Middlewares/Third_Party/FatFs/src/ff.c **** /* Allocate a Contiguous Blocks to the File                              */
5127:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5128:Middlewares/Third_Party/FatFs/src/ff.c **** 
5129:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_expand (
5130:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
5131:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t fsz,	/* File size to be expanded to */
5132:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt		/* Operation mode 0:Find and prepare or 1:Find and allocate */
5133:Middlewares/Third_Party/FatFs/src/ff.c **** )
5134:Middlewares/Third_Party/FatFs/src/ff.c **** {
5135:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
5136:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
5137:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD n, clst, stcl, scl, ncl, tcl, lclst;
5138:Middlewares/Third_Party/FatFs/src/ff.c **** 
5139:Middlewares/Third_Party/FatFs/src/ff.c **** 
5140:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
5141:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
5142:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fsz == 0 || fp->obj.objsize != 0 || !(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);
5143:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5144:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type != FS_EXFAT && fsz >= 0x100000000) LEAVE_FF(fs, FR_DENIED);	/* Check if in size li
5145:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5146:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (DWORD)fs->csize * SS(fs);	/* Cluster size */
5147:Middlewares/Third_Party/FatFs/src/ff.c **** 	tcl = (DWORD)(fsz / n) + ((fsz & (n - 1)) ? 1 : 0);	/* Number of clusters required */
5148:Middlewares/Third_Party/FatFs/src/ff.c **** 	stcl = fs->last_clst; lclst = 0;
5149:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stcl < 2 || stcl >= fs->n_fatent) stcl = 2;
5150:Middlewares/Third_Party/FatFs/src/ff.c **** 
5151:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5152:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {
5153:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = find_bitmap(fs, stcl, tcl);			/* Find a contiguous cluster block */
5154:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0) res = FR_DENIED;				/* No contiguous cluster block was found */
5155:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0xFFFFFFFF) res = FR_DISK_ERR;
5156:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {	/* A contiguous free area is found */
5157:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (opt) {		/* Allocate it now */
5158:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = change_bitmap(fs, scl, tcl, 1);	/* Mark the cluster block 'in use' */
5159:Middlewares/Third_Party/FatFs/src/ff.c **** 				lclst = scl + tcl - 1;
5160:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {		/* Set it as suggested point for next allocation */
5161:Middlewares/Third_Party/FatFs/src/ff.c **** 				lclst = scl - 1;
5162:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5163:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5164:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
5165:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5166:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
5167:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst = stcl; ncl = 0;
5168:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {	/* Find a contiguous cluster block */
ARM GAS  /tmp/ccTP8DMx.s 			page 115


5169:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = get_fat(&fp->obj, clst);
5170:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (++clst >= fs->n_fatent) clst = 2;
5171:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (n == 1) { res = FR_INT_ERR; break; }
5172:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (n == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
5173:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (n == 0) {	/* Is it a free cluster? */
5174:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++ncl == tcl) break;	/* Break if a contiguous cluster block is found */
5175:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5176:Middlewares/Third_Party/FatFs/src/ff.c **** 				scl = clst; ncl = 0;		/* Not a free cluster */
5177:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5178:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == stcl) { res = FR_DENIED; break; }	/* No contiguous cluster? */
5179:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5180:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {	/* A contiguous free area is found */
5181:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (opt) {		/* Allocate it now */
5182:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (clst = scl, n = tcl; n; clst++, n--) {	/* Create a cluster chain on the FAT */
5183:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = put_fat(fs, clst, (n == 1) ? 0xFFFFFFFF : clst + 1);
5184:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
5185:Middlewares/Third_Party/FatFs/src/ff.c **** 					lclst = clst;
5186:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5187:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {		/* Set it as suggested point for next allocation */
5188:Middlewares/Third_Party/FatFs/src/ff.c **** 				lclst = scl - 1;
5189:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5190:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5191:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5192:Middlewares/Third_Party/FatFs/src/ff.c **** 
5193:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
5194:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = lclst;		/* Set suggested start cluster to start next */
5195:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt) {	/* Is it allocated now? */
5196:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.sclust = scl;		/* Update object allocation information */
5197:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.objsize = fsz;
5198:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT) fp->obj.stat = 2;	/* Set status 'contiguous chain' */
5199:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA_MODIFIED;
5200:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->free_clst <= fs->n_fatent - 2) {	/* Update FSINFO */
5201:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->free_clst -= tcl;
5202:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->fsi_flag |= 1;
5203:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5204:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5205:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5206:Middlewares/Third_Party/FatFs/src/ff.c **** 
5207:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
5208:Middlewares/Third_Party/FatFs/src/ff.c **** }
5209:Middlewares/Third_Party/FatFs/src/ff.c **** 
5210:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_EXPAND && !_FS_READONLY */
5211:Middlewares/Third_Party/FatFs/src/ff.c **** 
5212:Middlewares/Third_Party/FatFs/src/ff.c **** 
5213:Middlewares/Third_Party/FatFs/src/ff.c **** 
5214:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FORWARD
5215:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5216:Middlewares/Third_Party/FatFs/src/ff.c **** /* Forward data to the stream directly                                   */
5217:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5218:Middlewares/Third_Party/FatFs/src/ff.c **** 
5219:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_forward (
5220:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp, 						/* Pointer to the file object */
5221:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT (*func)(const BYTE*,UINT),	/* Pointer to the streaming function */
5222:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btf,						/* Number of bytes to forward */
5223:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* bf						/* Pointer to number of bytes forwarded */
5224:Middlewares/Third_Party/FatFs/src/ff.c **** )
5225:Middlewares/Third_Party/FatFs/src/ff.c **** {
ARM GAS  /tmp/ccTP8DMx.s 			page 116


5226:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
5227:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
5228:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
5229:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t remain;
5230:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rcnt, csect;
5231:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dbuf;
5232:Middlewares/Third_Party/FatFs/src/ff.c **** 
5233:Middlewares/Third_Party/FatFs/src/ff.c **** 
5234:Middlewares/Third_Party/FatFs/src/ff.c **** 	*bf = 0;	/* Clear transfer byte counter */
5235:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
5236:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
5237:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
5238:Middlewares/Third_Party/FatFs/src/ff.c **** 
5239:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
5240:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btf > remain) btf = (UINT)remain;			/* Truncate btf by remaining bytes */
5241:Middlewares/Third_Party/FatFs/src/ff.c **** 
5242:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btf && (*func)(0, 0);					/* Repeat until all data transferred or stream goes busy */
5243:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr += rcnt, *bf += rcnt, btf -= rcnt) {
5244:Middlewares/Third_Party/FatFs/src/ff.c **** 		csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
5245:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {				/* On the sector boundary? */
5246:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {						/* On the cluster boundary? */
5247:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = (fp->fptr == 0) ?			/* On the top of the file? */
5248:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust : get_fat(&fp->obj, fp->clust);
5249:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) ABORT(fs, FR_INT_ERR);
5250:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
5251:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;					/* Update current cluster */
5252:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5253:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5254:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = clust2sect(fs, fp->clust);			/* Get current data sector */
5255:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!sect) ABORT(fs, FR_INT_ERR);
5256:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect += csect;
5257:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
5258:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window to the file dat
5259:Middlewares/Third_Party/FatFs/src/ff.c **** 		dbuf = fs->win;
5260:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5261:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->sect != sect) {		/* Fill sector cache with file data */
5262:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
5263:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
5264:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
5265:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
5266:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5267:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5268:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
5269:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5270:Middlewares/Third_Party/FatFs/src/ff.c **** 		dbuf = fp->buf;
5271:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5272:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->sect = sect;
5273:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
5274:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btf) rcnt = btf;					/* Clip it by btr if needed */
5275:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = (*func)(dbuf + ((UINT)fp->fptr % SS(fs)), rcnt);	/* Forward the file data */
5276:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!rcnt) ABORT(fs, FR_INT_ERR);
5277:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5278:Middlewares/Third_Party/FatFs/src/ff.c **** 
5279:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, FR_OK);
5280:Middlewares/Third_Party/FatFs/src/ff.c **** }
5281:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_FORWARD */
5282:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccTP8DMx.s 			page 117


5283:Middlewares/Third_Party/FatFs/src/ff.c **** 
5284:Middlewares/Third_Party/FatFs/src/ff.c **** 
5285:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_MKFS && !_FS_READONLY
5286:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5287:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create an FAT/exFAT volume                                            */
5288:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5289:Middlewares/Third_Party/FatFs/src/ff.c **** 
5290:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mkfs (
5291:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Logical drive number */
5292:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt,			/* Format option */
5293:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD au,			/* Size of allocation unit (cluster) [byte] */
5294:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* work,			/* Pointer to working buffer */
5295:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT len			/* Size of working buffer */
5296:Middlewares/Third_Party/FatFs/src/ff.c **** )
5297:Middlewares/Third_Party/FatFs/src/ff.c **** {
5298:Middlewares/Third_Party/FatFs/src/ff.c **** 	const UINT n_fats = 1;		/* Number of FATs for FAT12/16/32 volume (1 or 2) */
5299:Middlewares/Third_Party/FatFs/src/ff.c **** 	const UINT n_rootdir = 512;	/* Number of root directory entries for FAT12/16 volume */
5300:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD cst[] = {1, 4, 16, 64, 256, 512, 0};	/* Cluster size boundary for FAT12/16 volum
5301:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD cst32[] = {1, 2, 4, 8, 16, 32, 0};	/* Cluster size boundary for FAT32 volume (12
5302:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, sys, *buf, *pte, pdrv, part;
5303:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD ss;
5304:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD szb_buf, sz_buf, sz_blk, n_clst, pau, sect, nsect, n;
5305:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD b_vol, b_fat, b_data;				/* Base LBA for volume, fat, data */
5306:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sz_vol, sz_rsv, sz_fat, sz_dir;	/* Size for volume, fat, dir, data */
5307:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
5308:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
5309:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
5310:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM || _FS_EXFAT
5311:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tbl[3];
5312:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5313:Middlewares/Third_Party/FatFs/src/ff.c **** 
5314:Middlewares/Third_Party/FatFs/src/ff.c **** 
5315:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check mounted drive and clear work area */
5316:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);					/* Get target logical drive */
5317:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
5318:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
5319:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
5320:Middlewares/Third_Party/FatFs/src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:create as new, 1-4:get from partition table) */
5321:Middlewares/Third_Party/FatFs/src/ff.c **** 
5322:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check physical drive status */
5323:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(pdrv);
5324:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
5325:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
5326:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
5327:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
5328:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_SIZE, &ss) != RES_OK) return FR_DISK_ERR;
5329:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ss > _MAX_SS || ss < _MIN_SS || (ss & (ss - 1))) return FR_DISK_ERR;
5330:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5331:Middlewares/Third_Party/FatFs/src/ff.c **** 	ss = _MAX_SS;
5332:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((au != 0 && au < ss) || au > 0x1000000 || (au & (au - 1))) return FR_INVALID_PARAMETER;	/* Che
5334:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
5335:Middlewares/Third_Party/FatFs/src/ff.c **** 
5336:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get working buffer */
5337:Middlewares/Third_Party/FatFs/src/ff.c **** 	buf = (BYTE*)work;		/* Working buffer */
5338:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_buf = len / ss;		/* Size of working buffer (sector) */
5339:Middlewares/Third_Party/FatFs/src/ff.c **** 	szb_buf = sz_buf * ss;	/* Size of working buffer (byte) */
ARM GAS  /tmp/ccTP8DMx.s 			page 118


5340:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!szb_buf) return FR_MKFS_ABORTED;
5341:Middlewares/Third_Party/FatFs/src/ff.c **** 
5342:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine where the volume to be located (b_vol, sz_vol) */
5343:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_MULTI_PARTITION && part != 0) {
5344:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get partition information from partition table in the MBR */
5345:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_read(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Load MBR */
5346:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_word(buf + BS_55AA) != 0xAA55) return FR_MKFS_ABORTED;	/* Check if MBR is valid */
5347:Middlewares/Third_Party/FatFs/src/ff.c **** 		pte = buf + (MBR_Table + (part - 1) * SZ_PTE);
5348:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!pte[PTE_System]) return FR_MKFS_ABORTED;	/* No partition? */
5349:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = ld_dword(pte + PTE_StLba);		/* Get volume start sector */
5350:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol = ld_dword(pte + PTE_SizLba);	/* Get volume size */
5351:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
5352:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create a single-partition in this function */
5353:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &sz_vol) != RES_OK) return FR_DISK_ERR;
5354:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
5355:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
5356:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
5357:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5358:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sz_vol < 128) return FR_MKFS_ABORTED;	/* Check if volume size is >=128s */
5359:Middlewares/Third_Party/FatFs/src/ff.c **** 
5360:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Pre-determine the FAT type */
5361:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
5362:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_EXFAT && (opt & FM_EXFAT)) {	/* exFAT possible? */
5363:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((opt & FM_ANY) == FM_EXFAT || sz_vol >= 0x4000000 || au > 128) {	/* exFAT only, vol >= 64Ms 
5364:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_EXFAT; break;
5365:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5366:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (au > 128) return FR_INVALID_PARAMETER;	/* Too large au for FAT/FAT32 */
5368:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
5369:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((opt & FM_ANY) == FM_FAT32 || !(opt & FM_FAT)) {	/* FAT32 only or no-FAT? */
5370:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_FAT32; break;
5371:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5372:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5373:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(opt & FM_FAT)) return FR_INVALID_PARAMETER;	/* no-FAT? */
5374:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT16;
5375:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (0);
5376:Middlewares/Third_Party/FatFs/src/ff.c **** 
5377:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5378:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_EXFAT) {	/* Create an exFAT volume */
5379:Middlewares/Third_Party/FatFs/src/ff.c **** 		DWORD szb_bit, szb_case, sum, nb, cl;
5380:Middlewares/Third_Party/FatFs/src/ff.c **** 		WCHAR ch, si;
5381:Middlewares/Third_Party/FatFs/src/ff.c **** 		UINT j, st;
5382:Middlewares/Third_Party/FatFs/src/ff.c **** 		BYTE b;
5383:Middlewares/Third_Party/FatFs/src/ff.c **** 
5384:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x1000) return FR_MKFS_ABORTED;	/* Too small volume? */
5385:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
5386:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[0] = b_vol; tbl[1] = b_vol + sz_vol - 1;	/* Inform the device the volume area may be erased *
5387:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_ioctl(pdrv, CTRL_TRIM, tbl);
5388:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5389:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Determine FAT location, data location and number of clusters */
5390:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!au) {	/* au auto-selection */
5391:Middlewares/Third_Party/FatFs/src/ff.c **** 			au = 8;
5392:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol >= 0x80000) au = 64;		/* >= 512Ks */
5393:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol >= 0x4000000) au = 256;	/* >= 64Ms */
5394:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5395:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_fat = b_vol + 32;										/* FAT start at offset 32 */
5396:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_fat = ((sz_vol / au + 2) * 4 + ss - 1) / ss;			/* Number of FAT sectors */
ARM GAS  /tmp/ccTP8DMx.s 			page 119


5397:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_data = (b_fat + sz_fat + sz_blk - 1) & ~(sz_blk - 1);	/* Align data area to the erase block bou
5398:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (b_data >= sz_vol / 2) return FR_MKFS_ABORTED;		/* Too small volume? */
5399:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_clst = (sz_vol - (b_data - b_vol)) / au;				/* Number of clusters */
5400:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n_clst <16) return FR_MKFS_ABORTED;					/* Too few clusters? */
5401:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n_clst > MAX_EXFAT) return FR_MKFS_ABORTED;			/* Too many clusters? */
5402:Middlewares/Third_Party/FatFs/src/ff.c **** 
5403:Middlewares/Third_Party/FatFs/src/ff.c **** 		szb_bit = (n_clst + 7) / 8;						/* Size of allocation bitmap */
5404:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[0] = (szb_bit + au * ss - 1) / (au * ss);	/* Number of allocation bitmap clusters */
5405:Middlewares/Third_Party/FatFs/src/ff.c **** 
5406:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create a compressed up-case table */
5407:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_data + au * tbl[0];	/* Table start sector */
5408:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = 0;						/* Table checksum to be stored in the 82 entry */
5409:Middlewares/Third_Party/FatFs/src/ff.c **** 		st = si = i = j = szb_case = 0;
5410:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5411:Middlewares/Third_Party/FatFs/src/ff.c **** 			switch (st) {
5412:Middlewares/Third_Party/FatFs/src/ff.c **** 			case 0:
5413:Middlewares/Third_Party/FatFs/src/ff.c **** 				ch = ff_wtoupper(si);	/* Get an up-case char */
5414:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ch != si) {
5415:Middlewares/Third_Party/FatFs/src/ff.c **** 					si++; break;		/* Store the up-case char if exist */
5416:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5417:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (j = 1; (WCHAR)(si + j) && (WCHAR)(si + j) == ff_wtoupper((WCHAR)(si + j)); j++) ;	/* Get r
5418:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (j >= 128) {
5419:Middlewares/Third_Party/FatFs/src/ff.c **** 					ch = 0xFFFF; st = 2; break;	/* Compress the no-case block if run is >= 128 */
5420:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5421:Middlewares/Third_Party/FatFs/src/ff.c **** 				st = 1;			/* Do not compress short run */
5422:Middlewares/Third_Party/FatFs/src/ff.c **** 				/* go to next case */
5423:Middlewares/Third_Party/FatFs/src/ff.c **** 			case 1:
5424:Middlewares/Third_Party/FatFs/src/ff.c **** 				ch = si++;		/* Fill the short run */
5425:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (--j == 0) st = 0;
5426:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
5427:Middlewares/Third_Party/FatFs/src/ff.c **** 
5428:Middlewares/Third_Party/FatFs/src/ff.c **** 			default:
5429:Middlewares/Third_Party/FatFs/src/ff.c **** 				ch = (WCHAR)j; si += j;	/* Number of chars to skip */
5430:Middlewares/Third_Party/FatFs/src/ff.c **** 				st = 0;
5431:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5432:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = xsum32(buf[i + 0] = (BYTE)ch, sum);		/* Put it into the write buffer */
5433:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = xsum32(buf[i + 1] = (BYTE)(ch >> 8), sum);
5434:Middlewares/Third_Party/FatFs/src/ff.c **** 			i += 2; szb_case += 2;
5435:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!si || i == szb_buf) {		/* Write buffered data when buffer full or end of process */
5436:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = (i + ss - 1) / ss;
5437:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5438:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect += n; i = 0;
5439:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5440:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (si);
5441:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[1] = (szb_case + au * ss - 1) / (au * ss);	/* Number of up-case table clusters */
5442:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[2] = 1;										/* Number of root dir clusters */
5443:Middlewares/Third_Party/FatFs/src/ff.c **** 
5444:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize the allocation bitmap */
5445:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_data; nsect = (szb_bit + ss - 1) / ss;	/* Start of bitmap and number of sectors */
5446:Middlewares/Third_Party/FatFs/src/ff.c **** 		nb = tbl[0] + tbl[1] + tbl[2];					/* Number of clusters in-use by system */
5447:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5448:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, szb_buf);
5449:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; nb >= 8 && i < szb_buf; buf[i++] = 0xFF, nb -= 8) ;
5450:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (b = 1; nb && i < szb_buf; buf[i] |= b, b <<= 1, nb--) ;
5451:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;		/* Write the buffered data */
5452:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5453:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
ARM GAS  /tmp/ccTP8DMx.s 			page 120


5454:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5455:Middlewares/Third_Party/FatFs/src/ff.c **** 
5456:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize the FAT */
5457:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_fat; nsect = sz_fat;	/* Start of FAT and number of FAT sectors */
5458:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = nb = cl = 0;
5459:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5460:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, szb_buf); i = 0;	/* Clear work area and reset write index */
5461:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl == 0) {	/* Set entry 0 and 1 */
5462:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + i, 0xFFFFFFF8); i += 4; cl++;
5463:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + i, 0xFFFFFFFF); i += 4; cl++;
5464:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5465:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {			/* Create chains of bitmap, up-case and root dir */
5466:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (nb && i < szb_buf) {			/* Create a chain */
5467:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(buf + i, (nb > 1) ? cl + 1 : 0xFFFFFFFF);
5468:Middlewares/Third_Party/FatFs/src/ff.c **** 					i += 4; cl++; nb--;
5469:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5470:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!nb && j < 3) nb = tbl[j++];	/* Next chain */
5471:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (nb && i < szb_buf);
5472:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;	/* Write the buffered data */
5473:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5474:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5475:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5476:Middlewares/Third_Party/FatFs/src/ff.c **** 
5477:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize the root directory */
5478:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(buf, 0, szb_buf);
5479:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[SZDIRE * 0 + 0] = 0x83;		/* 83 entry (volume label) */
5480:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[SZDIRE * 1 + 0] = 0x81;		/* 81 entry (allocation bitmap) */
5481:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 1 + 20, 2);
5482:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 1 + 24, szb_bit);
5483:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[SZDIRE * 2 + 0] = 0x82;		/* 82 entry (up-case table) */
5484:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 4, sum);
5485:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 20, 2 + tbl[0]);
5486:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 24, szb_case);
5487:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_data + au * (tbl[0] + tbl[1]);	nsect = au;	/* Start of the root directory and number of 
5488:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {	/* Fill root directory sectors */
5489:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;
5490:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5491:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5492:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5493:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5494:Middlewares/Third_Party/FatFs/src/ff.c **** 
5495:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create two set of the exFAT VBR blocks */
5496:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_vol;
5497:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 0; n < 2; n++) {
5498:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Main record (+0) */
5499:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5500:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11);	/* Boot jump code (x86), OEM name */
5501:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_VolOfsEx, b_vol);					/* Volume offset in the physical drive [sector] */
5502:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_TotSecEx, sz_vol);					/* Volume size [sector] */
5503:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FatOfsEx, b_fat - b_vol);			/* FAT offset [sector] */
5504:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FatSzEx, sz_fat);					/* FAT size [sector] */
5505:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_DataOfsEx, b_data - b_vol);			/* Data offset [sector] */
5506:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_NumClusEx, n_clst);					/* Number of clusters */
5507:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_RootClusEx, 2 + tbl[0] + tbl[1]);	/* Root dir cluster # */
5508:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_VolIDEx, GET_FATTIME());				/* VSN */
5509:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FSVerEx, 0x100);						/* File system version (1.00) */
5510:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (buf[BPB_BytsPerSecEx] = 0, i = ss; i >>= 1; buf[BPB_BytsPerSecEx]++) ;	/* Log2 of sector si
ARM GAS  /tmp/ccTP8DMx.s 			page 121


5511:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (buf[BPB_SecPerClusEx] = 0, i = au; i >>= 1; buf[BPB_SecPerClusEx]++) ;	/* Log2 of cluster s
5512:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BPB_NumFATsEx] = 1;					/* Number of FATs */
5513:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BPB_DrvNumEx] = 0x80;				/* Drive number (for int13) */
5514:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_BootCodeEx, 0xFEEB);	/* Boot code (x86) */
5515:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);			/* Signature (placed here regardless of sector size) */
5516:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = sum = 0; i < ss; i++) {		/* VBR checksum */
5517:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i != BPB_VolFlagEx && i != BPB_VolFlagEx + 1 && i != BPB_PercInUseEx) sum = xsum32(buf[i], 
5518:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5519:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5520:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Extended bootstrap record (+1..+8) */
5521:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5522:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + ss - 2, 0xAA55);	/* Signature (placed at end of sector) */
5523:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (j = 1; j < 9; j++) {
5524:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (i = 0; i < ss; sum = xsum32(buf[i++], sum)) ;	/* VBR checksum */
5525:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5526:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5527:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* OEM/Reserved record (+9..+10) */
5528:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5529:Middlewares/Third_Party/FatFs/src/ff.c **** 			for ( ; j < 11; j++) {
5530:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (i = 0; i < ss; sum = xsum32(buf[i++], sum)) ;	/* VBR checksum */
5531:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5532:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5533:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Sum record (+11) */
5534:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; i < ss; i += 4) st_dword(buf + i, sum);		/* Fill with checksum value */
5535:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5536:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5537:Middlewares/Third_Party/FatFs/src/ff.c **** 
5538:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
5539:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT */
5540:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* Create an FAT12/16/32 volume */
5541:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5542:Middlewares/Third_Party/FatFs/src/ff.c **** 			pau = au;
5543:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Pre-determine number of clusters and FAT sub-type */
5544:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {	/* FAT32 volume */
5545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!pau) {	/* au auto-selection */
5546:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x20000;	/* Volume size in unit of 128KS */
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst32[i] && cst32[i] <= n; i++, pau <<= 1) ;	/* Get from table */
5548:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5549:Middlewares/Third_Party/FatFs/src/ff.c **** 				n_clst = sz_vol / pau;	/* Number of clusters */
5550:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat = (n_clst * 4 + 8 + ss - 1) / ss;	/* FAT size [sector] */
5551:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 32;	/* Number of reserved sectors */
5552:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = 0;		/* No static directory */
5553:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16 || n_clst > MAX_FAT32) return FR_MKFS_ABORTED;
5554:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* FAT12/16 volume */
5555:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!pau) {	/* au auto-selection */
5556:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x1000;	/* Volume size in unit of 4KS */
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst[i] && cst[i] <= n; i++, pau <<= 1) ;	/* Get from table */
5558:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5559:Middlewares/Third_Party/FatFs/src/ff.c **** 				n_clst = sz_vol / pau;
5560:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT12) {
5561:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = n_clst * 2 + 4;		/* FAT size [byte] */
5562:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
5563:Middlewares/Third_Party/FatFs/src/ff.c **** 					fmt = FS_FAT12;
5564:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = (n_clst * 3 + 1) / 2 + 3;	/* FAT size [byte] */
5565:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5566:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat = (n + ss - 1) / ss;		/* FAT size [sector] */
5567:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 1;						/* Number of reserved sectors */
ARM GAS  /tmp/ccTP8DMx.s 			page 122


5568:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = (DWORD)n_rootdir * SZDIRE / ss;	/* Rootdir size [sector] */
5569:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5570:Middlewares/Third_Party/FatFs/src/ff.c **** 			b_fat = b_vol + sz_rsv;						/* FAT base */
5571:Middlewares/Third_Party/FatFs/src/ff.c **** 			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
5572:Middlewares/Third_Party/FatFs/src/ff.c **** 
5573:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Align data base to erase block boundary (for flash memory media) */
5574:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = ((b_data + sz_blk - 1) & ~(sz_blk - 1)) - b_data;	/* Next nearest erase block from current d
5575:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
5576:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv += n; b_fat += n;
5577:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* FAT12/16: Expand FAT size */
5578:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat += n / n_fats;
5579:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5580:Middlewares/Third_Party/FatFs/src/ff.c **** 
5581:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Determine number of clusters and final check of validity of the FAT sub-type */
5582:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol < b_data + pau * 16 - b_vol) return FR_MKFS_ABORTED;	/* Too small volume */
5583:Middlewares/Third_Party/FatFs/src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
5584:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
5585:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16) {	/* Too few clusters for FAT32 */
5586:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau / 2) != 0) continue;	/* Adjust cluster size and retry */
5587:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
5588:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5589:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5590:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT16) {
5591:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT16) {	/* Too many clusters for FAT16 */
5592:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (pau * 2) <= 64) {
5593:Middlewares/Third_Party/FatFs/src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
5594:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
5595:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((opt & FM_FAT32)) {
5596:Middlewares/Third_Party/FatFs/src/ff.c **** 						fmt = FS_FAT32; continue;	/* Switch type to FAT32 and retry */
5597:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
5598:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
5599:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
5600:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5601:Middlewares/Third_Party/FatFs/src/ff.c **** 				if  (n_clst <= MAX_FAT12) {	/* Too few clusters for FAT16 */
5602:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
5603:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
5604:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5605:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5606:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT12 && n_clst > MAX_FAT12) return FR_MKFS_ABORTED;	/* Too many clusters for FAT1
5607:Middlewares/Third_Party/FatFs/src/ff.c **** 
5608:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Ok, it is the valid cluster configuration */
5609:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
5610:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (1);
5611:Middlewares/Third_Party/FatFs/src/ff.c **** 
5612:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
5613:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[0] = b_vol; tbl[1] = b_vol + sz_vol - 1;	/* Inform the device the volume area can be erased *
5614:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_ioctl(pdrv, CTRL_TRIM, tbl);
5615:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5616:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create FAT VBR */
5617:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(buf, 0, ss);
5618:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(buf + BS_JmpBoot, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code (x86), OEM name */
5619:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_BytsPerSec, ss);				/* Sector size [byte] */
5620:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_SecPerClus] = (BYTE)pau;				/* Cluster size [sector] */
5621:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RsvdSecCnt, (WORD)sz_rsv);	/* Size of reserved area */
5622:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_NumFATs] = (BYTE)n_fats;				/* Number of FATs */
5623:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RootEntCnt, (WORD)((fmt == FS_FAT32) ? 0 : n_rootdir));	/* Number of root direc
5624:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
ARM GAS  /tmp/ccTP8DMx.s 			page 123


5625:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_TotSec16, (WORD)sz_vol);	/* Volume size in 16-bit LBA */
5626:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5627:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_TotSec32, sz_vol);		/* Volume size in 32-bit LBA */
5628:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5629:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_Media] = 0xF8;							/* Media descriptor byte */
5630:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_SecPerTrk, 63);				/* Number of sectors per track (for int13) */
5631:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_NumHeads, 255);				/* Number of heads (for int13) */
5632:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + BPB_HiddSec, b_vol);				/* Volume offset in the physical drive [sector] */
5633:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
5634:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BS_VolID32, GET_FATTIME());	/* VSN */
5635:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FATSz32, sz_fat);		/* FAT size [sector] */
5636:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_RootClus32, 2);			/* Root directory cluster # (2) */
5637:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FSInfo32, 1);				/* Offset of FSINFO sector (VBR + 1) */
5638:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_BkBootSec32, 6);			/* Offset of backup VBR (VBR + 6) */
5639:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum32] = 0x80;					/* Drive number (for int13) */
5640:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig32] = 0x29;					/* Extended boot signature */
5641:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
5642:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5643:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BS_VolID, GET_FATTIME());	/* VSN */
5644:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FATSz16, (WORD)sz_fat);	/* FAT size [sector] */
5645:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum] = 0x80;						/* Drive number (for int13) */
5646:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig] = 0x29;						/* Extended boot signature */
5647:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
5648:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5649:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BS_55AA, 0xAA55);					/* Signature (offset is fixed here regardless of sector size)
5650:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, buf, b_vol, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the VBR sector 
5651:Middlewares/Third_Party/FatFs/src/ff.c **** 
5652:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create FSINFO record if needed */
5653:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
5654:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 6, 1);		/* Write backup VBR (VBR + 6) */
5655:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5656:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_LeadSig, 0x41615252);
5657:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_StrucSig, 0x61417272);
5658:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
5659:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
5660:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);
5661:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 7, 1);		/* Write backup FSINFO (VBR + 7) */
5662:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 1, 1);		/* Write original FSINFO (VBR + 1) */
5663:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5664:Middlewares/Third_Party/FatFs/src/ff.c **** 
5665:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize FAT area */
5666:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(buf, 0, (UINT)szb_buf);
5667:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_fat;		/* FAT start sector */
5668:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < n_fats; i++) {			/* Initialize FATs each */
5669:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
5670:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 0, 0xFFFFFFF8);	/* Entry 0 */
5671:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 4, 0xFFFFFFFF);	/* Entry 1 */
5672:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 8, 0x0FFFFFFF);	/* Entry 2 (root directory) */
5673:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 0, (fmt == FS_FAT12) ? 0xFFFFF8 : 0xFFFFFFF8);	/* Entry 0 and 1 */
5675:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5676:Middlewares/Third_Party/FatFs/src/ff.c **** 			nsect = sz_fat;		/* Number of FAT sectors */
5677:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {	/* Fill FAT sectors */
5678:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = (nsect > sz_buf) ? sz_buf : nsect;
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
5680:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(buf, 0, ss);
5681:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect += n; nsect -= n;
ARM GAS  /tmp/ccTP8DMx.s 			page 124


5682:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (nsect);
5683:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5684:Middlewares/Third_Party/FatFs/src/ff.c **** 
5685:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize root directory (fill with zero) */
5686:Middlewares/Third_Party/FatFs/src/ff.c **** 		nsect = (fmt == FS_FAT32) ? pau : sz_dir;	/* Number of root directory sectors */
5687:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5688:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;
5689:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
5690:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5691:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5692:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5693:Middlewares/Third_Party/FatFs/src/ff.c **** 
5694:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine system ID in the partition table */
5695:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_FS_EXFAT && fmt == FS_EXFAT) {
5696:Middlewares/Third_Party/FatFs/src/ff.c **** 		sys = 0x07;			/* HPFS/NTFS/exFAT */
5697:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
5698:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
5699:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x0C;		/* FAT32X */
5700:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5701:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol >= 0x10000) {
5702:Middlewares/Third_Party/FatFs/src/ff.c **** 				sys = 0x06;	/* FAT12/16 (>=64KS) */
5703:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5704:Middlewares/Third_Party/FatFs/src/ff.c **** 				sys = (fmt == FS_FAT16) ? 0x04 : 0x01;	/* FAT16 (<64KS) : FAT12 (<64KS) */
5705:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5706:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5707:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5708:Middlewares/Third_Party/FatFs/src/ff.c **** 
5709:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Update partition information */
5710:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_MULTI_PARTITION && part != 0) {	/* Created in the existing partition */
5711:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update system ID in the partition table */
5712:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_read(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Read the MBR */
5713:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[MBR_Table + (part - 1) * SZ_PTE + PTE_System] = sys;		/* Set system ID */
5714:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it back to the MBR */
5715:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* Created as a new single partition */
5716:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(opt & FM_SFD)) {	/* Create partition table if in FDISK format */
5717:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5718:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);		/* MBR signature */
5719:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte = buf + MBR_Table;				/* Create partition table for single partition in the drive */
5720:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_Boot] = 0;					/* Boot indicator */
5721:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StHead] = 1;				/* Start head */
5722:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StSec] = 1;					/* Start sector */
5723:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StCyl] = 0;					/* Start cylinder */
5724:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_System] = sys;				/* System type */
5725:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (b_vol + sz_vol) / (63 * 255);	/* (End CHS may be invalid) */
5726:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdHead] = 254;				/* End head */
5727:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdSec] = (BYTE)(n >> 2 | 63);	/* End sector */
5728:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdCyl] = (BYTE)n;			/* End cylinder */
5729:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_StLba, b_vol);	/* Start offset in LBA */
5730:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_SizLba, sz_vol);	/* Size in sectors */
5731:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the MBR */
5732:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5733:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5734:Middlewares/Third_Party/FatFs/src/ff.c **** 
5735:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, CTRL_SYNC, 0) != RES_OK) return FR_DISK_ERR;
5736:Middlewares/Third_Party/FatFs/src/ff.c **** 
5737:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
5738:Middlewares/Third_Party/FatFs/src/ff.c **** }
ARM GAS  /tmp/ccTP8DMx.s 			page 125


5739:Middlewares/Third_Party/FatFs/src/ff.c **** 
5740:Middlewares/Third_Party/FatFs/src/ff.c **** 
5741:Middlewares/Third_Party/FatFs/src/ff.c **** 
5742:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MULTI_PARTITION
5743:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5744:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create partition table on the physical drive                          */
5745:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5746:Middlewares/Third_Party/FatFs/src/ff.c **** 
5747:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_fdisk (
5748:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE pdrv,			/* Physical drive number */
5749:Middlewares/Third_Party/FatFs/src/ff.c **** 	const DWORD* szt,	/* Pointer to the size table for each partitions */
5750:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* work			/* Pointer to the working buffer */
5751:Middlewares/Third_Party/FatFs/src/ff.c **** )
5752:Middlewares/Third_Party/FatFs/src/ff.c **** {
5753:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, n, sz_cyl, tot_cyl, b_cyl, e_cyl, p_cyl;
5754:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s_hd, e_hd, *p, *buf = (BYTE*)work;
5755:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
5756:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sz_disk, sz_part, s_part;
5757:Middlewares/Third_Party/FatFs/src/ff.c **** 
5758:Middlewares/Third_Party/FatFs/src/ff.c **** 
5759:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(pdrv);
5760:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
5761:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
5762:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &sz_disk)) return FR_DISK_ERR;
5763:Middlewares/Third_Party/FatFs/src/ff.c **** 
5764:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine the CHS without any consideration of the drive geometry */
5765:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (n = 16; n < 256 && sz_disk / n / 63 > 1024; n *= 2) ;
5766:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n == 256) n--;
5767:Middlewares/Third_Party/FatFs/src/ff.c **** 	e_hd = n - 1;
5768:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_cyl = 63 * n;
5769:Middlewares/Third_Party/FatFs/src/ff.c **** 	tot_cyl = sz_disk / sz_cyl;
5770:Middlewares/Third_Party/FatFs/src/ff.c **** 
5771:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create partition table */
5772:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(buf, 0, _MAX_SS);
5773:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = buf + MBR_Table; b_cyl = 0;
5774:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < 4; i++, p += SZ_PTE) {
5775:Middlewares/Third_Party/FatFs/src/ff.c **** 		p_cyl = (szt[i] <= 100U) ? (DWORD)tot_cyl * szt[i] / 100 : szt[i] / sz_cyl;	/* Number of cylinder
5776:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!p_cyl) continue;
5777:Middlewares/Third_Party/FatFs/src/ff.c **** 		s_part = (DWORD)sz_cyl * b_cyl;
5778:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_part = (DWORD)sz_cyl * p_cyl;
5779:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 0) {	/* Exclude first track of cylinder 0 */
5780:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_hd = 1;
5781:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_part += 63; sz_part -= 63;
5782:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5783:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_hd = 0;
5784:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5785:Middlewares/Third_Party/FatFs/src/ff.c **** 		e_cyl = b_cyl + p_cyl - 1;	/* End cylinder */
5786:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (e_cyl >= tot_cyl) return FR_INVALID_PARAMETER;
5787:Middlewares/Third_Party/FatFs/src/ff.c **** 
5788:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Set partition table */
5789:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[1] = s_hd;						/* Start head */
5790:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[2] = (BYTE)((b_cyl >> 2) + 1);	/* Start sector */
5791:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[3] = (BYTE)b_cyl;					/* Start cylinder */
5792:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[4] = 0x07;						/* System type (temporary setting) */
5793:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[5] = e_hd;						/* End head */
5794:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[6] = (BYTE)((e_cyl >> 2) + 63);	/* End sector */
5795:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[7] = (BYTE)e_cyl;					/* End cylinder */
ARM GAS  /tmp/ccTP8DMx.s 			page 126


5796:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(p + 8, s_part);			/* Start sector in LBA */
5797:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(p + 12, sz_part);			/* Number of sectors */
5798:Middlewares/Third_Party/FatFs/src/ff.c **** 
5799:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Next partition */
5800:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_cyl += p_cyl;
5801:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5802:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(p, 0xAA55);
5803:Middlewares/Third_Party/FatFs/src/ff.c **** 
5804:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Write it to the MBR */
5805:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (disk_write(pdrv, buf, 0, 1) != RES_OK || disk_ioctl(pdrv, CTRL_SYNC, 0) != RES_OK) ? FR_DI
5806:Middlewares/Third_Party/FatFs/src/ff.c **** }
5807:Middlewares/Third_Party/FatFs/src/ff.c **** 
5808:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _MULTI_PARTITION */
5809:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_MKFS && !_FS_READONLY */
5810:Middlewares/Third_Party/FatFs/src/ff.c **** 
5811:Middlewares/Third_Party/FatFs/src/ff.c **** 
5812:Middlewares/Third_Party/FatFs/src/ff.c **** 
5813:Middlewares/Third_Party/FatFs/src/ff.c **** 
5814:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_STRFUNC
5815:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5816:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get a string from the file                                            */
5817:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5818:Middlewares/Third_Party/FatFs/src/ff.c **** 
5819:Middlewares/Third_Party/FatFs/src/ff.c **** TCHAR* f_gets (
5820:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* buff,	/* Pointer to the string buffer to read */
5821:Middlewares/Third_Party/FatFs/src/ff.c **** 	int len,		/* Size of string buffer (characters) */
5822:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp			/* Pointer to the file object */
5823:Middlewares/Third_Party/FatFs/src/ff.c **** )
5824:Middlewares/Third_Party/FatFs/src/ff.c **** {
5825:Middlewares/Third_Party/FatFs/src/ff.c **** 	int n = 0;
5826:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, *p = buff;
5827:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s[2];
5828:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rc;
5829:Middlewares/Third_Party/FatFs/src/ff.c **** 
5830:Middlewares/Third_Party/FatFs/src/ff.c **** 
5831:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (n < len - 1) {	/* Read characters until buffer gets filled */
5832:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
5833:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STRF_ENCODE == 3		/* Read a character in UTF-8 */
5834:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
5835:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
5836:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
5837:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c >= 0x80) {
5838:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c < 0xC0) continue;	/* Skip stray trailer */
5839:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c < 0xE0) {			/* Two-byte sequence (0x80-0x7FF) */
5840:Middlewares/Third_Party/FatFs/src/ff.c **** 				f_read(fp, s, 1, &rc);
5841:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (rc != 1) break;
5842:Middlewares/Third_Party/FatFs/src/ff.c **** 				c = (c & 0x1F) << 6 | (s[0] & 0x3F);
5843:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c < 0x80) c = '?';	/* Reject invalid code range */
5844:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5845:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c < 0xF0) {		/* Three-byte sequence (0x800-0xFFFF) */
5846:Middlewares/Third_Party/FatFs/src/ff.c **** 					f_read(fp, s, 2, &rc);
5847:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (rc != 2) break;
5848:Middlewares/Third_Party/FatFs/src/ff.c **** 					c = c << 12 | (s[0] & 0x3F) << 6 | (s[1] & 0x3F);
5849:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c < 0x800) c = '?';	/* Reject invalid code range */
5850:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {			/* Reject four-byte sequence */
5851:Middlewares/Third_Party/FatFs/src/ff.c **** 					c = '?';
5852:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
ARM GAS  /tmp/ccTP8DMx.s 			page 127


5853:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5854:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5855:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 2		/* Read a character in UTF-16BE */
5856:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 2, &rc);
5857:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 2) break;
5858:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[1] + (s[0] << 8);
5859:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 1		/* Read a character in UTF-16LE */
5860:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 2, &rc);
5861:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 2) break;
5862:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0] + (s[1] << 8);
5863:Middlewares/Third_Party/FatFs/src/ff.c **** #else						/* Read a character in ANSI/OEM */
5864:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
5865:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
5866:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
5867:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c)) {
5868:Middlewares/Third_Party/FatFs/src/ff.c **** 			f_read(fp, s, 1, &rc);
5869:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (rc != 1) break;
5870:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (c << 8) + s[0];
5871:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5872:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = ff_convert(c, 1);	/* OEM -> Unicode */
5873:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) c = '?';
5874:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5875:Middlewares/Third_Party/FatFs/src/ff.c **** #else						/* Read a character without conversion */
5876:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
5877:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
5878:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
5879:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5880:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_USE_STRFUNC == 2 && c == '\r') continue;	/* Strip '\r' */
5881:Middlewares/Third_Party/FatFs/src/ff.c **** 		*p++ = c;
5882:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
5883:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
5884:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5885:Middlewares/Third_Party/FatFs/src/ff.c **** 	*p = 0;
5886:Middlewares/Third_Party/FatFs/src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
5887:Middlewares/Third_Party/FatFs/src/ff.c **** }
5888:Middlewares/Third_Party/FatFs/src/ff.c **** 
5889:Middlewares/Third_Party/FatFs/src/ff.c **** 
5890:Middlewares/Third_Party/FatFs/src/ff.c **** 
5891:Middlewares/Third_Party/FatFs/src/ff.c **** 
5892:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
5893:Middlewares/Third_Party/FatFs/src/ff.c **** #include <stdarg.h>
5894:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5895:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a character to the file                                           */
5896:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5897:Middlewares/Third_Party/FatFs/src/ff.c **** 
5898:Middlewares/Third_Party/FatFs/src/ff.c **** typedef struct {
5899:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL *fp;		/* Ptr to the writing file */
5900:Middlewares/Third_Party/FatFs/src/ff.c **** 	int idx, nchr;	/* Write index of buf[] (-1:error), number of chars written */
5901:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE buf[64];	/* Write buffer */
5902:Middlewares/Third_Party/FatFs/src/ff.c **** } putbuff;
5903:Middlewares/Third_Party/FatFs/src/ff.c **** 
5904:Middlewares/Third_Party/FatFs/src/ff.c **** 
5905:Middlewares/Third_Party/FatFs/src/ff.c **** static
5906:Middlewares/Third_Party/FatFs/src/ff.c **** void putc_bfd (		/* Buffered write with code conversion */
5907:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb,
5908:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c
5909:Middlewares/Third_Party/FatFs/src/ff.c **** )
ARM GAS  /tmp/ccTP8DMx.s 			page 128


5910:Middlewares/Third_Party/FatFs/src/ff.c **** {
5911:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bw;
5912:Middlewares/Third_Party/FatFs/src/ff.c **** 	int i;
5913:Middlewares/Third_Party/FatFs/src/ff.c **** 
5914:Middlewares/Third_Party/FatFs/src/ff.c **** 
5915:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_USE_STRFUNC == 2 && c == '\n') {	 /* LF -> CRLF conversion */
5916:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(pb, '\r');
5917:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5918:Middlewares/Third_Party/FatFs/src/ff.c **** 
5919:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = pb->idx;		/* Write index of pb->buf[] */
5920:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i < 0) return;
5921:Middlewares/Third_Party/FatFs/src/ff.c **** 
5922:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
5923:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STRF_ENCODE == 3			/* Write a character in UTF-8 */
5924:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (c < 0x80) {				/* 7-bit */
5925:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)c;
5926:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
5927:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c < 0x800) {		/* 11-bit */
5928:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0xC0 | c >> 6);
5929:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* 16-bit */
5930:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0xE0 | c >> 12);
5931:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0x80 | (c >> 6 & 0x3F));
5932:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5933:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)(0x80 | (c & 0x3F));
5934:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5935:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 2			/* Write a character in UTF-16BE */
5936:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
5937:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5938:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 1			/* Write a character in UTF-16LE */
5939:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5940:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
5941:Middlewares/Third_Party/FatFs/src/ff.c **** #else							/* Write a character in ANSI/OEM */
5942:Middlewares/Third_Party/FatFs/src/ff.c **** 	c = ff_convert(c, 0);	/* Unicode -> OEM */
5943:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!c) c = '?';
5944:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (c >= 0x100)
5945:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)(c >> 8);
5946:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5947:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5948:Middlewares/Third_Party/FatFs/src/ff.c **** #else							/* Write a character without conversion */
5949:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5950:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5951:Middlewares/Third_Party/FatFs/src/ff.c **** 
5952:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i >= (int)(sizeof pb->buf) - 3) {	/* Write buffered characters to the file */
5953:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_write(pb->fp, pb->buf, (UINT)i, &bw);
5954:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
5955:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5956:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->idx = i;
5957:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr++;
5958:Middlewares/Third_Party/FatFs/src/ff.c **** }
5959:Middlewares/Third_Party/FatFs/src/ff.c **** 
5960:Middlewares/Third_Party/FatFs/src/ff.c **** 
5961:Middlewares/Third_Party/FatFs/src/ff.c **** static
5962:Middlewares/Third_Party/FatFs/src/ff.c **** int putc_flush (		/* Flush left characters in the buffer */
5963:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb
5964:Middlewares/Third_Party/FatFs/src/ff.c **** )
5965:Middlewares/Third_Party/FatFs/src/ff.c **** {
5966:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
ARM GAS  /tmp/ccTP8DMx.s 			page 129


5967:Middlewares/Third_Party/FatFs/src/ff.c **** 
5968:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   pb->idx >= 0	/* Flush buffered characters to the file */
5969:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb->fp, pb->buf, (UINT)pb->idx, &nw) == FR_OK
5970:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb->idx == nw) return pb->nchr;
5971:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
5972:Middlewares/Third_Party/FatFs/src/ff.c **** }
5973:Middlewares/Third_Party/FatFs/src/ff.c **** 
5974:Middlewares/Third_Party/FatFs/src/ff.c **** 
5975:Middlewares/Third_Party/FatFs/src/ff.c **** static
5976:Middlewares/Third_Party/FatFs/src/ff.c **** void putc_init (		/* Initialize write buffer */
5977:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb,
5978:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp
5979:Middlewares/Third_Party/FatFs/src/ff.c **** )
5980:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1347              		.loc 1 5980 0
 1348              		.cfi_startproc
 1349              		@ args = 0, pretend = 0, frame = 0
 1350              		@ frame_needed = 0, uses_anonymous_args = 0
 1351              		@ link register save eliminated.
 1352              	.LVL183:
5981:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->fp = fp;
 1353              		.loc 1 5981 0
 1354 0000 0160     		str	r1, [r0]
5982:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr = pb->idx = 0;
 1355              		.loc 1 5982 0
 1356 0002 0023     		movs	r3, #0
 1357 0004 4360     		str	r3, [r0, #4]
 1358 0006 8360     		str	r3, [r0, #8]
 1359 0008 7047     		bx	lr
 1360              		.cfi_endproc
 1361              	.LFE182:
 1363              		.section	.text.validate,"ax",%progbits
 1364              		.align	2
 1365              		.thumb
 1366              		.thumb_func
 1368              	validate:
 1369              	.LFB161:
3220:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 1370              		.loc 1 3220 0
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 0
 1373              		@ frame_needed = 0, uses_anonymous_args = 0
 1374              	.LVL184:
 1375 0000 38B5     		push	{r3, r4, r5, lr}
 1376              	.LCFI17:
 1377              		.cfi_def_cfa_offset 16
 1378              		.cfi_offset 3, -16
 1379              		.cfi_offset 4, -12
 1380              		.cfi_offset 5, -8
 1381              		.cfi_offset 14, -4
 1382 0002 0C46     		mov	r4, r1
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1383              		.loc 1 3223 0
 1384 0004 70B1     		cbz	r0, .L135
 1385 0006 0546     		mov	r5, r0
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1386              		.loc 1 3223 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccTP8DMx.s 			page 130


 1387 0008 0368     		ldr	r3, [r0]
 1388 000a 5BB1     		cbz	r3, .L135
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1389              		.loc 1 3223 0 discriminator 2
 1390 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1391 000e 4AB1     		cbz	r2, .L135
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1392              		.loc 1 3223 0 discriminator 3
 1393 0010 D988     		ldrh	r1, [r3, #6]
 1394              	.LVL185:
 1395 0012 8288     		ldrh	r2, [r0, #4]
 1396 0014 9142     		cmp	r1, r2
 1397 0016 05D1     		bne	.L135
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1398              		.loc 1 3223 0 discriminator 4
 1399 0018 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 1400              	.LVL186:
 1401 001a FFF7FEFF 		bl	disk_status
 1402              	.LVL187:
 1403 001e 10F0010F 		tst	r0, #1
 1404 0022 03D0     		beq	.L136
 1405              	.LVL188:
 1406              	.L135:
3224:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INVALID_OBJECT;	/* The object is invalid */
 1407              		.loc 1 3224 0 is_stmt 1
 1408 0024 0023     		movs	r3, #0
 1409 0026 2360     		str	r3, [r4]
 1410              	.LVL189:
3225:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 1411              		.loc 1 3225 0
 1412 0028 0920     		movs	r0, #9
 1413 002a 38BD     		pop	{r3, r4, r5, pc}
 1414              	.LVL190:
 1415              	.L136:
3227:Middlewares/Third_Party/FatFs/src/ff.c **** 		ENTER_FF(obj->fs);		/* Lock file system */
 1416              		.loc 1 3227 0
 1417 002c 2B68     		ldr	r3, [r5]
 1418 002e 2360     		str	r3, [r4]
 1419              	.LVL191:
3229:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1420              		.loc 1 3229 0
 1421 0030 0020     		movs	r0, #0
 1422              	.LVL192:
3232:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1423              		.loc 1 3232 0
 1424 0032 38BD     		pop	{r3, r4, r5, pc}
 1425              		.cfi_endproc
 1426              	.LFE161:
 1428              		.section	.text.sync_window,"ax",%progbits
 1429              		.align	2
 1430              		.thumb
 1431              		.thumb_func
 1433              	sync_window:
 1434              	.LFB137:
 886:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD wsect;
 1435              		.loc 1 886 0
 1436              		.cfi_startproc
ARM GAS  /tmp/ccTP8DMx.s 			page 131


 1437              		@ args = 0, pretend = 0, frame = 0
 1438              		@ frame_needed = 0, uses_anonymous_args = 0
 1439              	.LVL193:
 1440 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1441              	.LCFI18:
 1442              		.cfi_def_cfa_offset 24
 1443              		.cfi_offset 3, -24
 1444              		.cfi_offset 4, -20
 1445              		.cfi_offset 5, -16
 1446              		.cfi_offset 6, -12
 1447              		.cfi_offset 7, -8
 1448              		.cfi_offset 14, -4
 1449              	.LVL194:
 892:Middlewares/Third_Party/FatFs/src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 1450              		.loc 1 892 0
 1451 0002 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 1452 0004 03B3     		cbz	r3, .L143
 1453 0006 0446     		mov	r4, r0
 893:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 1454              		.loc 1 893 0
 1455 0008 C66A     		ldr	r6, [r0, #44]
 1456              	.LVL195:
 894:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 1457              		.loc 1 894 0
 1458 000a 00F13007 		add	r7, r0, #48
 1459 000e 0123     		movs	r3, #1
 1460 0010 3246     		mov	r2, r6
 1461 0012 3946     		mov	r1, r7
 1462 0014 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 1463              	.LVL196:
 1464 0016 FFF7FEFF 		bl	disk_write
 1465              	.LVL197:
 1466 001a B8B9     		cbnz	r0, .L144
 897:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 1467              		.loc 1 897 0
 1468 001c 0023     		movs	r3, #0
 1469 001e E370     		strb	r3, [r4, #3]
 898:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 1470              		.loc 1 898 0
 1471 0020 236A     		ldr	r3, [r4, #32]
 1472 0022 F31A     		subs	r3, r6, r3
 1473 0024 A269     		ldr	r2, [r4, #24]
 1474 0026 9342     		cmp	r3, r2
 1475 0028 12D2     		bcs	.L145
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1476              		.loc 1 899 0
 1477 002a A578     		ldrb	r5, [r4, #2]	@ zero_extendqisi2
 1478              	.LVL198:
 1479 002c 08E0     		b	.L141
 1480              	.L142:
 900:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_write(fs->drv, fs->win, wsect, 1);
 1481              		.loc 1 900 0 discriminator 3
 1482 002e A369     		ldr	r3, [r4, #24]
 1483 0030 1E44     		add	r6, r6, r3
 1484              	.LVL199:
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 1485              		.loc 1 901 0 discriminator 3
ARM GAS  /tmp/ccTP8DMx.s 			page 132


 1486 0032 0123     		movs	r3, #1
 1487 0034 3246     		mov	r2, r6
 1488 0036 3946     		mov	r1, r7
 1489 0038 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1490 003a FFF7FEFF 		bl	disk_write
 1491              	.LVL200:
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1492              		.loc 1 899 0 discriminator 3
 1493 003e 013D     		subs	r5, r5, #1
 1494              	.LVL201:
 1495              	.L141:
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1496              		.loc 1 899 0 is_stmt 0 discriminator 1
 1497 0040 012D     		cmp	r5, #1
 1498 0042 F4D8     		bhi	.L142
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1499              		.loc 1 889 0 is_stmt 1
 1500 0044 0020     		movs	r0, #0
 1501 0046 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1502              	.LVL202:
 1503              	.L143:
 1504 0048 0020     		movs	r0, #0
 1505              	.LVL203:
 1506 004a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1507              	.LVL204:
 1508              	.L144:
 895:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 1509              		.loc 1 895 0
 1510 004c 0120     		movs	r0, #1
 1511 004e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1512              	.LVL205:
 1513              	.L145:
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1514              		.loc 1 889 0
 1515 0050 0020     		movs	r0, #0
 1516              	.LVL206:
 907:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1517              		.loc 1 907 0
 1518 0052 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1519              		.cfi_endproc
 1520              	.LFE137:
 1522              		.section	.text.move_window,"ax",%progbits
 1523              		.align	2
 1524              		.thumb
 1525              		.thumb_func
 1527              	move_window:
 1528              	.LFB138:
 916:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 1529              		.loc 1 916 0
 1530              		.cfi_startproc
 1531              		@ args = 0, pretend = 0, frame = 0
 1532              		@ frame_needed = 0, uses_anonymous_args = 0
 1533              	.LVL207:
 1534 0000 70B5     		push	{r4, r5, r6, lr}
 1535              	.LCFI19:
 1536              		.cfi_def_cfa_offset 16
 1537              		.cfi_offset 4, -16
ARM GAS  /tmp/ccTP8DMx.s 			page 133


 1538              		.cfi_offset 5, -12
 1539              		.cfi_offset 6, -8
 1540              		.cfi_offset 14, -4
 1541              	.LVL208:
 920:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 1542              		.loc 1 920 0
 1543 0002 C36A     		ldr	r3, [r0, #44]
 1544 0004 8B42     		cmp	r3, r1
 1545 0006 12D0     		beq	.L150
 1546 0008 0446     		mov	r4, r0
 1547 000a 0D46     		mov	r5, r1
 922:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1548              		.loc 1 922 0
 1549 000c FFF7FEFF 		bl	sync_window
 1550              	.LVL209:
 924:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 1551              		.loc 1 924 0
 1552 0010 0646     		mov	r6, r0
 1553 0012 68B9     		cbnz	r0, .L148
 925:Middlewares/Third_Party/FatFs/src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 1554              		.loc 1 925 0
 1555 0014 0123     		movs	r3, #1
 1556 0016 2A46     		mov	r2, r5
 1557 0018 04F13001 		add	r1, r4, #48
 1558 001c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1559              	.LVL210:
 1560 001e FFF7FEFF 		bl	disk_read
 1561              	.LVL211:
 1562 0022 10B1     		cbz	r0, .L149
 927:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 1563              		.loc 1 927 0
 1564 0024 0126     		movs	r6, #1
 926:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 1565              		.loc 1 926 0
 1566 0026 4FF0FF35 		mov	r5, #-1
 1567              	.LVL212:
 1568              	.L149:
 929:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1569              		.loc 1 929 0
 1570 002a E562     		str	r5, [r4, #44]
 1571 002c 00E0     		b	.L148
 1572              	.LVL213:
 1573              	.L150:
 917:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1574              		.loc 1 917 0
 1575 002e 0026     		movs	r6, #0
 1576              	.LVL214:
 1577              	.L148:
 933:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1578              		.loc 1 933 0
 1579 0030 3046     		mov	r0, r6
 1580 0032 70BD     		pop	{r4, r5, r6, pc}
 1581              		.cfi_endproc
 1582              	.LFE138:
 1584              		.section	.text.check_fs,"ax",%progbits
 1585              		.align	2
 1586              		.thumb
ARM GAS  /tmp/ccTP8DMx.s 			page 134


 1587              		.thumb_func
 1589              	check_fs:
 1590              	.LFB159:
2969:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
 1591              		.loc 1 2969 0
 1592              		.cfi_startproc
 1593              		@ args = 0, pretend = 0, frame = 0
 1594              		@ frame_needed = 0, uses_anonymous_args = 0
 1595              	.LVL215:
 1596 0000 10B5     		push	{r4, lr}
 1597              	.LCFI20:
 1598              		.cfi_def_cfa_offset 8
 1599              		.cfi_offset 4, -8
 1600              		.cfi_offset 14, -4
 1601 0002 0446     		mov	r4, r0
2970:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
 1602              		.loc 1 2970 0
 1603 0004 0023     		movs	r3, #0
 1604 0006 C370     		strb	r3, [r0, #3]
 1605 0008 4FF0FF33 		mov	r3, #-1
 1606 000c C362     		str	r3, [r0, #44]
2971:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1607              		.loc 1 2971 0
 1608 000e FFF7FEFF 		bl	move_window
 1609              	.LVL216:
 1610 0012 18BB     		cbnz	r0, .L156
2973:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1611              		.loc 1 2973 0
 1612 0014 04F22E20 		addw	r0, r4, #558
 1613 0018 FFF7FEFF 		bl	ld_word
 1614              	.LVL217:
 1615 001c 4AF65523 		movw	r3, #43605
 1616 0020 9842     		cmp	r0, r3
 1617 0022 1DD1     		bne	.L157
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
 1618              		.loc 1 2975 0
 1619 0024 94F83030 		ldrb	r3, [r4, #48]	@ zero_extendqisi2
 1620 0028 E92B     		cmp	r3, #233
 1621 002a 05D0     		beq	.L155
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
 1622              		.loc 1 2975 0 is_stmt 0 discriminator 1
 1623 002c 236B     		ldr	r3, [r4, #48]
 1624 002e 03F0FF13 		and	r3, r3, #16711935
 1625 0032 0F4A     		ldr	r2, .L162
 1626 0034 9342     		cmp	r3, r2
 1627 0036 15D1     		bne	.L158
 1628              	.L155:
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
 1629              		.loc 1 2976 0 is_stmt 1
 1630 0038 04F16600 		add	r0, r4, #102
 1631 003c FFF7FEFF 		bl	ld_dword
 1632              	.LVL218:
 1633 0040 20F07F40 		bic	r0, r0, #-16777216
 1634 0044 0B4B     		ldr	r3, .L162+4
 1635 0046 9842     		cmp	r0, r3
 1636 0048 0ED0     		beq	.L159
2977:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  /tmp/ccTP8DMx.s 			page 135


 1637              		.loc 1 2977 0
 1638 004a 04F18200 		add	r0, r4, #130
 1639 004e FFF7FEFF 		bl	ld_dword
 1640              	.LVL219:
 1641 0052 094B     		ldr	r3, .L162+8
 1642 0054 9842     		cmp	r0, r3
 1643 0056 09D1     		bne	.L160
 1644 0058 0020     		movs	r0, #0
 1645 005a 10BD     		pop	{r4, pc}
 1646              	.LVL220:
 1647              	.L156:
2971:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1648              		.loc 1 2971 0
 1649 005c 0420     		movs	r0, #4
 1650 005e 10BD     		pop	{r4, pc}
 1651              	.LVL221:
 1652              	.L157:
2973:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1653              		.loc 1 2973 0
 1654 0060 0320     		movs	r0, #3
 1655 0062 10BD     		pop	{r4, pc}
 1656              	.LVL222:
 1657              	.L158:
2982:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1658              		.loc 1 2982 0
 1659 0064 0220     		movs	r0, #2
 1660 0066 10BD     		pop	{r4, pc}
 1661              	.LVL223:
 1662              	.L159:
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
 1663              		.loc 1 2976 0
 1664 0068 0020     		movs	r0, #0
 1665 006a 10BD     		pop	{r4, pc}
 1666              	.LVL224:
 1667              	.L160:
2982:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1668              		.loc 1 2982 0
 1669 006c 0220     		movs	r0, #2
2983:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1670              		.loc 1 2983 0
 1671 006e 10BD     		pop	{r4, pc}
 1672              	.LVL225:
 1673              	.L163:
 1674              		.align	2
 1675              	.L162:
 1676 0070 EB009000 		.word	9437419
 1677 0074 46415400 		.word	5521734
 1678 0078 46415433 		.word	861159750
 1679              		.cfi_endproc
 1680              	.LFE159:
 1682              		.section	.text.find_volume,"ax",%progbits
 1683              		.align	2
 1684              		.thumb
 1685              		.thumb_func
 1687              	find_volume:
 1688              	.LFB160:
2998:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, *pt;
ARM GAS  /tmp/ccTP8DMx.s 			page 136


 1689              		.loc 1 2998 0
 1690              		.cfi_startproc
 1691              		@ args = 0, pretend = 0, frame = 16
 1692              		@ frame_needed = 0, uses_anonymous_args = 0
 1693              	.LVL226:
 1694 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1695              	.LCFI21:
 1696              		.cfi_def_cfa_offset 32
 1697              		.cfi_offset 4, -32
 1698              		.cfi_offset 5, -28
 1699              		.cfi_offset 6, -24
 1700              		.cfi_offset 7, -20
 1701              		.cfi_offset 8, -16
 1702              		.cfi_offset 9, -12
 1703              		.cfi_offset 10, -8
 1704              		.cfi_offset 14, -4
 1705 0004 84B0     		sub	sp, sp, #16
 1706              	.LCFI22:
 1707              		.cfi_def_cfa_offset 48
 1708 0006 0E46     		mov	r6, r1
 1709 0008 1746     		mov	r7, r2
3009:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(path);
 1710              		.loc 1 3009 0
 1711 000a 0023     		movs	r3, #0
 1712 000c 0B60     		str	r3, [r1]
3010:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 1713              		.loc 1 3010 0
 1714 000e FFF7FEFF 		bl	get_ldnumber
 1715              	.LVL227:
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1716              		.loc 1 3011 0
 1717 0012 051E     		subs	r5, r0, #0
 1718 0014 C0F22F81 		blt	.L182
3014:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
 1719              		.loc 1 3014 0
 1720 0018 AC4B     		ldr	r3, .L208
 1721 001a 53F82540 		ldr	r4, [r3, r5, lsl #2]
 1722              	.LVL228:
3015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1723              		.loc 1 3015 0
 1724 001e 002C     		cmp	r4, #0
 1725 0020 00F02B81 		beq	.L183
3018:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1726              		.loc 1 3018 0
 1727 0024 3460     		str	r4, [r6]
3020:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type) {					/* If the volume has been mounted */
 1728              		.loc 1 3020 0
 1729 0026 07F0FE07 		and	r7, r7, #254
 1730              	.LVL229:
3021:Middlewares/Third_Party/FatFs/src/ff.c **** 		stat = disk_status(fs->drv);
 1731              		.loc 1 3021 0
 1732 002a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1733 002c 73B1     		cbz	r3, .L166
3022:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
 1734              		.loc 1 3022 0
 1735 002e 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1736              	.LVL230:
ARM GAS  /tmp/ccTP8DMx.s 			page 137


 1737 0030 FFF7FEFF 		bl	disk_status
 1738              	.LVL231:
3023:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
 1739              		.loc 1 3023 0
 1740 0034 10F0010F 		tst	r0, #1
 1741 0038 08D1     		bne	.L166
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
 1742              		.loc 1 3024 0
 1743 003a 002F     		cmp	r7, #0
 1744 003c 00F01F81 		beq	.L184
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
 1745              		.loc 1 3024 0 is_stmt 0 discriminator 1
 1746 0040 10F0040F 		tst	r0, #4
 1747 0044 40F01D81 		bne	.L185
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1748              		.loc 1 3027 0 is_stmt 1
 1749 0048 0020     		movs	r0, #0
 1750              	.LVL232:
 1751 004a 3BE1     		b	.L165
 1752              	.L166:
3034:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
 1753              		.loc 1 3034 0
 1754 004c 0023     		movs	r3, #0
 1755 004e 2370     		strb	r3, [r4]
3035:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
 1756              		.loc 1 3035 0
 1757 0050 E8B2     		uxtb	r0, r5
 1758 0052 6070     		strb	r0, [r4, #1]
3036:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
 1759              		.loc 1 3036 0
 1760 0054 FFF7FEFF 		bl	disk_initialize
 1761              	.LVL233:
3037:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
 1762              		.loc 1 3037 0
 1763 0058 10F0010F 		tst	r0, #1
 1764 005c 40F01381 		bne	.L186
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
 1765              		.loc 1 3040 0
 1766 0060 1FB1     		cbz	r7, .L167
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
 1767              		.loc 1 3040 0 is_stmt 0 discriminator 1
 1768 0062 10F0040F 		tst	r0, #4
 1769 0066 40F01081 		bne	.L187
 1770              	.L167:
 1771              	.LVL234:
3050:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
 1772              		.loc 1 3050 0 is_stmt 1
 1773 006a 0021     		movs	r1, #0
 1774 006c 2046     		mov	r0, r4
 1775              	.LVL235:
 1776 006e FFF7FEFF 		bl	check_fs
 1777              	.LVL236:
3051:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {		/* Get partition offset */
 1778              		.loc 1 3051 0
 1779 0072 0228     		cmp	r0, #2
 1780 0074 15D0     		beq	.L188
3049:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
ARM GAS  /tmp/ccTP8DMx.s 			page 138


 1781              		.loc 1 3049 0
 1782 0076 0026     		movs	r6, #0
 1783              	.LVL237:
 1784 0078 28E0     		b	.L169
 1785              	.LVL238:
 1786              	.L171:
3053:Middlewares/Third_Party/FatFs/src/ff.c **** 			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
 1787              		.loc 1 3053 0
 1788 007a 04F13000 		add	r0, r4, #48
 1789 007e 2B01     		lsls	r3, r5, #4
 1790 0080 03F5DF73 		add	r3, r3, #446
 1791 0084 1844     		add	r0, r0, r3
 1792              	.LVL239:
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1793              		.loc 1 3054 0
 1794 0086 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1795 0088 1BB1     		cbz	r3, .L189
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1796              		.loc 1 3054 0 is_stmt 0 discriminator 1
 1797 008a 0830     		adds	r0, r0, #8
 1798              	.LVL240:
 1799 008c FFF7FEFF 		bl	ld_dword
 1800              	.LVL241:
 1801 0090 00E0     		b	.L170
 1802              	.LVL242:
 1803              	.L189:
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1804              		.loc 1 3054 0
 1805 0092 0020     		movs	r0, #0
 1806              	.LVL243:
 1807              	.L170:
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1808              		.loc 1 3054 0 discriminator 4
 1809 0094 04AB     		add	r3, sp, #16
 1810 0096 03EB8503 		add	r3, r3, r5, lsl #2
 1811 009a 43F8100C 		str	r0, [r3, #-16]
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 1812              		.loc 1 3052 0 is_stmt 1 discriminator 4
 1813 009e 0135     		adds	r5, r5, #1
 1814              	.LVL244:
 1815 00a0 00E0     		b	.L168
 1816              	.LVL245:
 1817              	.L188:
 1818 00a2 0025     		movs	r5, #0
 1819              	.LVL246:
 1820              	.L168:
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 1821              		.loc 1 3052 0 is_stmt 0 discriminator 2
 1822 00a4 032D     		cmp	r5, #3
 1823 00a6 E8D9     		bls	.L171
 1824 00a8 0025     		movs	r5, #0
 1825              	.LVL247:
 1826              	.L173:
3059:Middlewares/Third_Party/FatFs/src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
 1827              		.loc 1 3059 0 is_stmt 1
 1828 00aa 04AB     		add	r3, sp, #16
 1829 00ac 03EB8503 		add	r3, r3, r5, lsl #2
ARM GAS  /tmp/ccTP8DMx.s 			page 139


 1830 00b0 53F8106C 		ldr	r6, [r3, #-16]
 1831              	.LVL248:
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 1832              		.loc 1 3060 0
 1833 00b4 26B1     		cbz	r6, .L190
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 1834              		.loc 1 3060 0 is_stmt 0 discriminator 1
 1835 00b6 3146     		mov	r1, r6
 1836 00b8 2046     		mov	r0, r4
 1837 00ba FFF7FEFF 		bl	check_fs
 1838              	.LVL249:
 1839 00be 00E0     		b	.L172
 1840              	.L190:
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 1841              		.loc 1 3060 0
 1842 00c0 0320     		movs	r0, #3
 1843              	.L172:
 1844              	.LVL250:
3061:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1845              		.loc 1 3061 0 is_stmt 1 discriminator 4
 1846 00c2 0128     		cmp	r0, #1
 1847 00c4 02D9     		bls	.L169
3061:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1848              		.loc 1 3061 0 is_stmt 0 discriminator 1
 1849 00c6 0135     		adds	r5, r5, #1
 1850              	.LVL251:
 1851 00c8 032D     		cmp	r5, #3
 1852 00ca EED9     		bls	.L173
 1853              	.LVL252:
 1854              	.L169:
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 1855              		.loc 1 3063 0 is_stmt 1
 1856 00cc 0428     		cmp	r0, #4
 1857 00ce 00F0DE80 		beq	.L191
3064:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1858              		.loc 1 3064 0
 1859 00d2 0128     		cmp	r0, #1
 1860 00d4 00F2DD80 		bhi	.L192
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1861              		.loc 1 3116 0
 1862 00d8 04F13B00 		add	r0, r4, #59
 1863              	.LVL253:
 1864 00dc FFF7FEFF 		bl	ld_word
 1865              	.LVL254:
 1866 00e0 B0F5007F 		cmp	r0, #512
 1867 00e4 40F0D780 		bne	.L193
3118:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
 1868              		.loc 1 3118 0
 1869 00e8 04F14600 		add	r0, r4, #70
 1870 00ec FFF7FEFF 		bl	ld_word
 1871              	.LVL255:
 1872 00f0 8046     		mov	r8, r0
 1873              	.LVL256:
3119:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = fasize;
 1874              		.loc 1 3119 0
 1875 00f2 20B9     		cbnz	r0, .L174
3119:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = fasize;
ARM GAS  /tmp/ccTP8DMx.s 			page 140


 1876              		.loc 1 3119 0 is_stmt 0 discriminator 1
 1877 00f4 04F15400 		add	r0, r4, #84
 1878              	.LVL257:
 1879 00f8 FFF7FEFF 		bl	ld_dword
 1880              	.LVL258:
 1881 00fc 8046     		mov	r8, r0
 1882              	.LVL259:
 1883              	.L174:
3120:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1884              		.loc 1 3120 0 is_stmt 1
 1885 00fe C4F81880 		str	r8, [r4, #24]
3122:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
 1886              		.loc 1 3122 0
 1887 0102 94F84090 		ldrb	r9, [r4, #64]	@ zero_extendqisi2
 1888 0106 84F80290 		strb	r9, [r4, #2]
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
 1889              		.loc 1 3123 0
 1890 010a 09F1FF33 		add	r3, r9, #-1
 1891 010e DBB2     		uxtb	r3, r3
 1892 0110 012B     		cmp	r3, #1
 1893 0112 00F2C280 		bhi	.L194
3124:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1894              		.loc 1 3124 0
 1895 0116 08FB09F9 		mul	r9, r8, r9
 1896              	.LVL260:
3126:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
 1897              		.loc 1 3126 0
 1898 011a 94F83D50 		ldrb	r5, [r4, #61]	@ zero_extendqisi2
 1899 011e 6581     		strh	r5, [r4, #10]	@ movhi
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1900              		.loc 1 3127 0
 1901 0120 002D     		cmp	r5, #0
 1902 0122 00F0BC80 		beq	.L195
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1903              		.loc 1 3127 0 is_stmt 0 discriminator 2
 1904 0126 6B1E     		subs	r3, r5, #1
 1905 0128 1D42     		tst	r5, r3
 1906 012a 40F0BA80 		bne	.L196
3129:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
 1907              		.loc 1 3129 0 is_stmt 1
 1908 012e 04F14100 		add	r0, r4, #65
 1909 0132 FFF7FEFF 		bl	ld_word
 1910              	.LVL261:
 1911 0136 8246     		mov	r10, r0
 1912 0138 2081     		strh	r0, [r4, #8]	@ movhi
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1913              		.loc 1 3130 0
 1914 013a 10F00F0F 		tst	r0, #15
 1915 013e 40F0B280 		bne	.L197
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
 1916              		.loc 1 3132 0
 1917 0142 04F14300 		add	r0, r4, #67
 1918 0146 FFF7FEFF 		bl	ld_word
 1919              	.LVL262:
 1920 014a 0746     		mov	r7, r0
 1921              	.LVL263:
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccTP8DMx.s 			page 141


 1922              		.loc 1 3133 0
 1923 014c 20B9     		cbnz	r0, .L175
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1924              		.loc 1 3133 0 is_stmt 0 discriminator 1
 1925 014e 04F15000 		add	r0, r4, #80
 1926              	.LVL264:
 1927 0152 FFF7FEFF 		bl	ld_dword
 1928              	.LVL265:
 1929 0156 0746     		mov	r7, r0
 1930              	.LVL266:
 1931              	.L175:
3135:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
 1932              		.loc 1 3135 0 is_stmt 1
 1933 0158 04F13E00 		add	r0, r4, #62
 1934              	.LVL267:
 1935 015c FFF7FEFF 		bl	ld_word
 1936              	.LVL268:
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1937              		.loc 1 3136 0
 1938 0160 0346     		mov	r3, r0
 1939 0162 0028     		cmp	r0, #0
 1940 0164 00F0A180 		beq	.L198
3139:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
 1941              		.loc 1 3139 0
 1942 0168 09EB0002 		add	r2, r9, r0
 1943 016c 02EB1A12 		add	r2, r2, r10, lsr #4
 1944              	.LVL269:
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 1945              		.loc 1 3140 0
 1946 0170 9742     		cmp	r7, r2
 1947 0172 C0F09C80 		bcc	.L199
3141:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 1948              		.loc 1 3141 0
 1949 0176 BF1A     		subs	r7, r7, r2
 1950              	.LVL270:
 1951 0178 B7FBF5F5 		udiv	r5, r7, r5
 1952              	.LVL271:
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT32;
 1953              		.loc 1 3142 0
 1954 017c 002D     		cmp	r5, #0
 1955 017e 00F09880 		beq	.L200
 1956              	.LVL272:
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
 1957              		.loc 1 3144 0
 1958 0182 4FF6F571 		movw	r1, #65525
 1959 0186 8D42     		cmp	r5, r1
 1960 0188 01D9     		bls	.L201
3143:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
 1961              		.loc 1 3143 0
 1962 018a 0327     		movs	r7, #3
 1963 018c 00E0     		b	.L176
 1964              	.L201:
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
 1965              		.loc 1 3144 0
 1966 018e 0227     		movs	r7, #2
 1967              	.L176:
 1968              	.LVL273:
ARM GAS  /tmp/ccTP8DMx.s 			page 142


3145:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1969              		.loc 1 3145 0
 1970 0190 40F6F571 		movw	r1, #4085
 1971 0194 8D42     		cmp	r5, r1
 1972 0196 00D8     		bhi	.L177
 1973 0198 0127     		movs	r7, #1
 1974              	.LVL274:
 1975              	.L177:
3148:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
 1976              		.loc 1 3148 0
 1977 019a 0235     		adds	r5, r5, #2
 1978              	.LVL275:
 1979 019c 6561     		str	r5, [r4, #20]
3149:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
 1980              		.loc 1 3149 0
 1981 019e E661     		str	r6, [r4, #28]
3150:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
 1982              		.loc 1 3150 0
 1983 01a0 3344     		add	r3, r3, r6
 1984 01a2 2362     		str	r3, [r4, #32]
3151:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
 1985              		.loc 1 3151 0
 1986 01a4 3244     		add	r2, r2, r6
 1987              	.LVL276:
 1988 01a6 A262     		str	r2, [r4, #40]
3152:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
 1989              		.loc 1 3152 0
 1990 01a8 032F     		cmp	r7, #3
 1991 01aa 0FD1     		bne	.L178
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
 1992              		.loc 1 3153 0
 1993 01ac 04F15A00 		add	r0, r4, #90
 1994              	.LVL277:
 1995 01b0 FFF7FEFF 		bl	ld_word
 1996              	.LVL278:
 1997 01b4 0028     		cmp	r0, #0
 1998 01b6 7ED1     		bne	.L203
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 1999              		.loc 1 3154 0
 2000 01b8 BAF1000F 		cmp	r10, #0
 2001 01bc 7DD1     		bne	.L204
3155:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
 2002              		.loc 1 3155 0
 2003 01be 04F15C00 		add	r0, r4, #92
 2004 01c2 FFF7FEFF 		bl	ld_dword
 2005              	.LVL279:
 2006 01c6 6062     		str	r0, [r4, #36]
3156:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 2007              		.loc 1 3156 0
 2008 01c8 AD00     		lsls	r5, r5, #2
 2009              	.LVL280:
 2010 01ca 0EE0     		b	.L179
 2011              	.LVL281:
 2012              	.L178:
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 2013              		.loc 1 3158 0
 2014 01cc BAF1000F 		cmp	r10, #0
ARM GAS  /tmp/ccTP8DMx.s 			page 143


 2015 01d0 75D0     		beq	.L205
3159:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
 2016              		.loc 1 3159 0
 2017 01d2 4B44     		add	r3, r3, r9
 2018 01d4 6362     		str	r3, [r4, #36]
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2019              		.loc 1 3161 0
 2020 01d6 022F     		cmp	r7, #2
 2021 01d8 01D1     		bne	.L180
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2022              		.loc 1 3161 0 is_stmt 0 discriminator 1
 2023 01da 6D00     		lsls	r5, r5, #1
 2024              	.LVL282:
 2025 01dc 05E0     		b	.L179
 2026              	.LVL283:
 2027              	.L180:
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2028              		.loc 1 3161 0 discriminator 2
 2029 01de 05EB4503 		add	r3, r5, r5, lsl #1
 2030 01e2 05F00105 		and	r5, r5, #1
 2031              	.LVL284:
 2032 01e6 05EB5305 		add	r5, r5, r3, lsr #1
 2033              	.LVL285:
 2034              	.L179:
3163:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2035              		.loc 1 3163 0 is_stmt 1
 2036 01ea 05F2FF15 		addw	r5, r5, #511
 2037              	.LVL286:
 2038 01ee B8EB552F 		cmp	r8, r5, lsr #9
 2039 01f2 66D3     		bcc	.L206
3167:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag = 0x80;
 2040              		.loc 1 3167 0
 2041 01f4 4FF0FF33 		mov	r3, #-1
 2042 01f8 2361     		str	r3, [r4, #16]
 2043 01fa E360     		str	r3, [r4, #12]
3168:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
 2044              		.loc 1 3168 0
 2045 01fc 8023     		movs	r3, #128
 2046 01fe 2371     		strb	r3, [r4, #4]
3170:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& ld_word(fs->win + BPB_FSInfo32) == 1
 2047              		.loc 1 3170 0
 2048 0200 032F     		cmp	r7, #3
 2049 0202 2CD1     		bne	.L181
3171:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& move_window(fs, bsect + 1) == FR_OK)
 2050              		.loc 1 3171 0
 2051 0204 04F16000 		add	r0, r4, #96
 2052 0208 FFF7FEFF 		bl	ld_word
 2053              	.LVL287:
 2054 020c 0128     		cmp	r0, #1
 2055 020e 26D1     		bne	.L181
3172:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
 2056              		.loc 1 3172 0
 2057 0210 711C     		adds	r1, r6, #1
 2058 0212 2046     		mov	r0, r4
 2059 0214 FFF7FEFF 		bl	move_window
 2060              	.LVL288:
 2061 0218 08BB     		cbnz	r0, .L181
ARM GAS  /tmp/ccTP8DMx.s 			page 144


3174:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
 2062              		.loc 1 3174 0
 2063 021a 0023     		movs	r3, #0
 2064 021c 2371     		strb	r3, [r4, #4]
3175:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
 2065              		.loc 1 3175 0
 2066 021e 04F22E20 		addw	r0, r4, #558
 2067 0222 FFF7FEFF 		bl	ld_word
 2068              	.LVL289:
 2069 0226 4AF65523 		movw	r3, #43605
 2070 022a 9842     		cmp	r0, r3
 2071 022c 17D1     		bne	.L181
3176:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
 2072              		.loc 1 3176 0
 2073 022e 04F13000 		add	r0, r4, #48
 2074 0232 FFF7FEFF 		bl	ld_dword
 2075              	.LVL290:
 2076 0236 264B     		ldr	r3, .L208+4
 2077 0238 9842     		cmp	r0, r3
 2078 023a 10D1     		bne	.L181
3177:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
 2079              		.loc 1 3177 0
 2080 023c 04F50570 		add	r0, r4, #532
 2081 0240 FFF7FEFF 		bl	ld_dword
 2082              	.LVL291:
 2083 0244 234B     		ldr	r3, .L208+8
 2084 0246 9842     		cmp	r0, r3
 2085 0248 09D1     		bne	.L181
3180:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2086              		.loc 1 3180 0
 2087 024a 04F50670 		add	r0, r4, #536
 2088 024e FFF7FEFF 		bl	ld_dword
 2089              	.LVL292:
 2090 0252 2061     		str	r0, [r4, #16]
3183:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2091              		.loc 1 3183 0
 2092 0254 04F50770 		add	r0, r4, #540
 2093 0258 FFF7FEFF 		bl	ld_dword
 2094              	.LVL293:
 2095 025c E060     		str	r0, [r4, #12]
 2096              	.L181:
3191:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->id = ++Fsid;		/* File system mount ID */
 2097              		.loc 1 3191 0
 2098 025e 2770     		strb	r7, [r4]
3192:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
 2099              		.loc 1 3192 0
 2100 0260 1D4A     		ldr	r2, .L208+12
 2101 0262 1388     		ldrh	r3, [r2]
 2102 0264 0133     		adds	r3, r3, #1
 2103 0266 9BB2     		uxth	r3, r3
 2104 0268 1380     		strh	r3, [r2]	@ movhi
 2105 026a E380     		strh	r3, [r4, #6]	@ movhi
3203:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2106              		.loc 1 3203 0
 2107 026c 2046     		mov	r0, r4
 2108 026e FFF7FEFF 		bl	clear_lock
 2109              	.LVL294:
ARM GAS  /tmp/ccTP8DMx.s 			page 145


3205:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2110              		.loc 1 3205 0
 2111 0272 0020     		movs	r0, #0
 2112 0274 26E0     		b	.L165
 2113              	.LVL295:
 2114              	.L182:
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2115              		.loc 1 3011 0
 2116 0276 0B20     		movs	r0, #11
 2117              	.LVL296:
 2118 0278 24E0     		b	.L165
 2119              	.LVL297:
 2120              	.L183:
3015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2121              		.loc 1 3015 0
 2122 027a 0C20     		movs	r0, #12
 2123              	.LVL298:
 2124 027c 22E0     		b	.L165
 2125              	.LVL299:
 2126              	.L184:
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2127              		.loc 1 3027 0
 2128 027e 0020     		movs	r0, #0
 2129              	.LVL300:
 2130 0280 20E0     		b	.L165
 2131              	.LVL301:
 2132              	.L185:
3025:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 2133              		.loc 1 3025 0
 2134 0282 0A20     		movs	r0, #10
 2135              	.LVL302:
 2136 0284 1EE0     		b	.L165
 2137              	.LVL303:
 2138              	.L186:
3038:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2139              		.loc 1 3038 0
 2140 0286 0320     		movs	r0, #3
 2141              	.LVL304:
 2142 0288 1CE0     		b	.L165
 2143              	.LVL305:
 2144              	.L187:
3041:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2145              		.loc 1 3041 0
 2146 028a 0A20     		movs	r0, #10
 2147              	.LVL306:
 2148 028c 1AE0     		b	.L165
 2149              	.LVL307:
 2150              	.L191:
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 2151              		.loc 1 3063 0
 2152 028e 0120     		movs	r0, #1
 2153              	.LVL308:
 2154 0290 18E0     		b	.L165
 2155              	.LVL309:
 2156              	.L192:
3064:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2157              		.loc 1 3064 0
ARM GAS  /tmp/ccTP8DMx.s 			page 146


 2158 0292 0D20     		movs	r0, #13
 2159              	.LVL310:
 2160 0294 16E0     		b	.L165
 2161              	.L193:
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2162              		.loc 1 3116 0
 2163 0296 0D20     		movs	r0, #13
 2164 0298 14E0     		b	.L165
 2165              	.LVL311:
 2166              	.L194:
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
 2167              		.loc 1 3123 0
 2168 029a 0D20     		movs	r0, #13
 2169              	.LVL312:
 2170 029c 12E0     		b	.L165
 2171              	.LVL313:
 2172              	.L195:
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2173              		.loc 1 3127 0
 2174 029e 0D20     		movs	r0, #13
 2175 02a0 10E0     		b	.L165
 2176              	.L196:
 2177 02a2 0D20     		movs	r0, #13
 2178 02a4 0EE0     		b	.L165
 2179              	.L197:
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2180              		.loc 1 3130 0
 2181 02a6 0D20     		movs	r0, #13
 2182 02a8 0CE0     		b	.L165
 2183              	.LVL314:
 2184              	.L198:
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2185              		.loc 1 3136 0
 2186 02aa 0D20     		movs	r0, #13
 2187              	.LVL315:
 2188 02ac 0AE0     		b	.L165
 2189              	.LVL316:
 2190              	.L199:
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 2191              		.loc 1 3140 0
 2192 02ae 0D20     		movs	r0, #13
 2193              	.LVL317:
 2194 02b0 08E0     		b	.L165
 2195              	.LVL318:
 2196              	.L200:
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT32;
 2197              		.loc 1 3142 0
 2198 02b2 0D20     		movs	r0, #13
 2199              	.LVL319:
 2200 02b4 06E0     		b	.L165
 2201              	.LVL320:
 2202              	.L203:
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
 2203              		.loc 1 3153 0
 2204 02b6 0D20     		movs	r0, #13
 2205 02b8 04E0     		b	.L165
 2206              	.L204:
ARM GAS  /tmp/ccTP8DMx.s 			page 147


3154:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 2207              		.loc 1 3154 0
 2208 02ba 0D20     		movs	r0, #13
 2209 02bc 02E0     		b	.L165
 2210              	.LVL321:
 2211              	.L205:
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 2212              		.loc 1 3158 0
 2213 02be 0D20     		movs	r0, #13
 2214              	.LVL322:
 2215 02c0 00E0     		b	.L165
 2216              	.LVL323:
 2217              	.L206:
3163:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2218              		.loc 1 3163 0
 2219 02c2 0D20     		movs	r0, #13
 2220              	.LVL324:
 2221              	.L165:
3206:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2222              		.loc 1 3206 0
 2223 02c4 04B0     		add	sp, sp, #16
 2224              	.LCFI23:
 2225              		.cfi_def_cfa_offset 32
 2226              		@ sp needed
 2227 02c6 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2228              	.L209:
 2229 02ca 00BF     		.align	2
 2230              	.L208:
 2231 02cc 00000000 		.word	.LANCHOR2
 2232 02d0 52526141 		.word	1096897106
 2233 02d4 72724161 		.word	1631679090
 2234 02d8 00000000 		.word	.LANCHOR3
 2235              		.cfi_endproc
 2236              	.LFE160:
 2238              		.section	.text.put_fat,"ax",%progbits
 2239              		.align	2
 2240              		.thumb
 2241              		.thumb_func
 2243              	put_fat:
 2244              	.LFB142:
1086:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
 2245              		.loc 1 1086 0
 2246              		.cfi_startproc
 2247              		@ args = 0, pretend = 0, frame = 0
 2248              		@ frame_needed = 0, uses_anonymous_args = 0
 2249              	.LVL325:
 2250 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2251              	.LCFI24:
 2252              		.cfi_def_cfa_offset 32
 2253              		.cfi_offset 4, -32
 2254              		.cfi_offset 5, -28
 2255              		.cfi_offset 6, -24
 2256              		.cfi_offset 7, -20
 2257              		.cfi_offset 8, -16
 2258              		.cfi_offset 9, -12
 2259              		.cfi_offset 10, -8
 2260              		.cfi_offset 14, -4
ARM GAS  /tmp/ccTP8DMx.s 			page 148


 2261              	.LVL326:
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
 2262              		.loc 1 1091 0
 2263 0004 0129     		cmp	r1, #1
 2264 0006 77D9     		bls	.L219
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
 2265              		.loc 1 1091 0 is_stmt 0 discriminator 1
 2266 0008 4369     		ldr	r3, [r0, #20]
 2267 000a 9942     		cmp	r1, r3
 2268 000c 76D2     		bcs	.L220
 2269 000e 1746     		mov	r7, r2
 2270 0010 0C46     		mov	r4, r1
 2271 0012 0646     		mov	r6, r0
1092:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :	/* Bitfield items */
 2272              		.loc 1 1092 0 is_stmt 1
 2273 0014 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 2274 0016 022B     		cmp	r3, #2
 2275 0018 40D0     		beq	.L212
 2276 001a 032B     		cmp	r3, #3
 2277 001c 51D0     		beq	.L213
 2278 001e 012B     		cmp	r3, #1
 2279 0020 6ED1     		bne	.L222
 2280              	.LVL327:
1094:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2281              		.loc 1 1094 0
 2282 0022 01EB5108 		add	r8, r1, r1, lsr #1
 2283              	.LVL328:
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2284              		.loc 1 1095 0
 2285 0026 016A     		ldr	r1, [r0, #32]
 2286              	.LVL329:
 2287 0028 01EB5821 		add	r1, r1, r8, lsr #9
 2288 002c FFF7FEFF 		bl	move_window
 2289              	.LVL330:
1096:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc++ % SS(fs);
 2290              		.loc 1 1096 0
 2291 0030 0546     		mov	r5, r0
 2292 0032 0028     		cmp	r0, #0
 2293 0034 65D1     		bne	.L211
1097:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 2294              		.loc 1 1097 0
 2295 0036 06F1300A 		add	r10, r6, #48
 2296 003a 08F10109 		add	r9, r8, #1
 2297              	.LVL331:
 2298 003e C8F30808 		ubfx	r8, r8, #0, #9
 2299              	.LVL332:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2300              		.loc 1 1098 0
 2301 0042 14F00104 		ands	r4, r4, #1
 2302              	.LVL333:
 2303 0046 09D0     		beq	.L215
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2304              		.loc 1 1098 0 is_stmt 0 discriminator 1
 2305 0048 1AF80820 		ldrb	r2, [r10, r8]	@ zero_extendqisi2
 2306 004c 3B01     		lsls	r3, r7, #4
 2307 004e 03F47F63 		and	r3, r3, #4080
 2308 0052 02F00F02 		and	r2, r2, #15
ARM GAS  /tmp/ccTP8DMx.s 			page 149


 2309 0056 1343     		orrs	r3, r3, r2
 2310 0058 DBB2     		uxtb	r3, r3
 2311 005a 00E0     		b	.L216
 2312              	.L215:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2313              		.loc 1 1098 0 discriminator 2
 2314 005c FBB2     		uxtb	r3, r7
 2315              	.L216:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2316              		.loc 1 1098 0 discriminator 4
 2317 005e 0AF80830 		strb	r3, [r10, r8]
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2318              		.loc 1 1099 0 is_stmt 1 discriminator 4
 2319 0062 0123     		movs	r3, #1
 2320 0064 F370     		strb	r3, [r6, #3]
1100:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2321              		.loc 1 1100 0 discriminator 4
 2322 0066 316A     		ldr	r1, [r6, #32]
 2323 0068 01EB5921 		add	r1, r1, r9, lsr #9
 2324 006c 3046     		mov	r0, r6
 2325              	.LVL334:
 2326 006e FFF7FEFF 		bl	move_window
 2327              	.LVL335:
1101:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc % SS(fs);
 2328              		.loc 1 1101 0 discriminator 4
 2329 0072 0546     		mov	r5, r0
 2330 0074 0028     		cmp	r0, #0
 2331 0076 44D1     		bne	.L211
1102:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 2332              		.loc 1 1102 0
 2333 0078 C9F30809 		ubfx	r9, r9, #0, #9
 2334              	.LVL336:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2335              		.loc 1 1103 0
 2336 007c 14B1     		cbz	r4, .L217
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2337              		.loc 1 1103 0 is_stmt 0 discriminator 1
 2338 007e C7F30712 		ubfx	r2, r7, #4, #8
 2339 0082 06E0     		b	.L218
 2340              	.L217:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2341              		.loc 1 1103 0 discriminator 2
 2342 0084 1AF80930 		ldrb	r3, [r10, r9]	@ zero_extendqisi2
 2343 0088 23F00F03 		bic	r3, r3, #15
 2344 008c C7F30322 		ubfx	r2, r7, #8, #4
 2345 0090 1A43     		orrs	r2, r2, r3
 2346              	.L218:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2347              		.loc 1 1103 0 discriminator 4
 2348 0092 0AF80920 		strb	r2, [r10, r9]
1104:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2349              		.loc 1 1104 0 is_stmt 1 discriminator 4
 2350 0096 0123     		movs	r3, #1
 2351 0098 F370     		strb	r3, [r6, #3]
1105:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2352              		.loc 1 1105 0 discriminator 4
 2353 009a 32E0     		b	.L211
ARM GAS  /tmp/ccTP8DMx.s 			page 150


 2354              	.LVL337:
 2355              	.L212:
1108:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2356              		.loc 1 1108 0
 2357 009c 016A     		ldr	r1, [r0, #32]
 2358              	.LVL338:
 2359 009e 01EB1421 		add	r1, r1, r4, lsr #8
 2360 00a2 FFF7FEFF 		bl	move_window
 2361              	.LVL339:
1109:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);
 2362              		.loc 1 1109 0
 2363 00a6 0546     		mov	r5, r0
 2364 00a8 58BB     		cbnz	r0, .L211
1110:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2365              		.loc 1 1110 0
 2366 00aa 06F13000 		add	r0, r6, #48
 2367              	.LVL340:
 2368 00ae 6300     		lsls	r3, r4, #1
 2369 00b0 03F4FF73 		and	r3, r3, #510
 2370 00b4 B9B2     		uxth	r1, r7
 2371 00b6 1844     		add	r0, r0, r3
 2372 00b8 FFF7FEFF 		bl	st_word
 2373              	.LVL341:
1111:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2374              		.loc 1 1111 0
 2375 00bc 0123     		movs	r3, #1
 2376 00be F370     		strb	r3, [r6, #3]
1112:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2377              		.loc 1 1112 0
 2378 00c0 1FE0     		b	.L211
 2379              	.LVL342:
 2380              	.L213:
1118:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2381              		.loc 1 1118 0
 2382 00c2 016A     		ldr	r1, [r0, #32]
 2383              	.LVL343:
 2384 00c4 01EBD411 		add	r1, r1, r4, lsr #7
 2385 00c8 FFF7FEFF 		bl	move_window
 2386              	.LVL344:
1119:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 2387              		.loc 1 1119 0
 2388 00cc 0546     		mov	r5, r0
 2389 00ce C0B9     		cbnz	r0, .L211
1121:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 2390              		.loc 1 1121 0
 2391 00d0 27F07047 		bic	r7, r7, #-268435456
 2392              	.LVL345:
 2393 00d4 06F13003 		add	r3, r6, #48
 2394 00d8 A100     		lsls	r1, r4, #2
 2395 00da 01F4FE71 		and	r1, r1, #508
 2396 00de 5C18     		adds	r4, r3, r1
 2397              	.LVL346:
 2398 00e0 2046     		mov	r0, r4
 2399              	.LVL347:
 2400 00e2 FFF7FEFF 		bl	ld_dword
 2401              	.LVL348:
 2402 00e6 00F07041 		and	r1, r0, #-268435456
ARM GAS  /tmp/ccTP8DMx.s 			page 151


 2403              	.LVL349:
1123:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2404              		.loc 1 1123 0
 2405 00ea 3943     		orrs	r1, r1, r7
 2406              	.LVL350:
 2407 00ec 2046     		mov	r0, r4
 2408 00ee FFF7FEFF 		bl	st_dword
 2409              	.LVL351:
1124:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2410              		.loc 1 1124 0
 2411 00f2 0123     		movs	r3, #1
 2412 00f4 F370     		strb	r3, [r6, #3]
1125:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2413              		.loc 1 1125 0
 2414 00f6 04E0     		b	.L211
 2415              	.LVL352:
 2416              	.L219:
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2417              		.loc 1 1089 0
 2418 00f8 0225     		movs	r5, #2
 2419 00fa 02E0     		b	.L211
 2420              	.L220:
 2421 00fc 0225     		movs	r5, #2
 2422 00fe 00E0     		b	.L211
 2423              	.L222:
 2424 0100 0225     		movs	r5, #2
 2425              	.LVL353:
 2426              	.L211:
1129:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2427              		.loc 1 1129 0
 2428 0102 2846     		mov	r0, r5
 2429 0104 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2430              		.cfi_endproc
 2431              	.LFE142:
 2433              		.section	.text.get_fat,"ax",%progbits
 2434              		.align	2
 2435              		.thumb
 2436              		.thumb_func
 2438              	get_fat:
 2439              	.LFB141:
1005:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
 2440              		.loc 1 1005 0
 2441              		.cfi_startproc
 2442              		@ args = 0, pretend = 0, frame = 0
 2443              		@ frame_needed = 0, uses_anonymous_args = 0
 2444              	.LVL354:
 2445 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2446              	.LCFI25:
 2447              		.cfi_def_cfa_offset 24
 2448              		.cfi_offset 3, -24
 2449              		.cfi_offset 4, -20
 2450              		.cfi_offset 5, -16
 2451              		.cfi_offset 6, -12
 2452              		.cfi_offset 7, -8
 2453              		.cfi_offset 14, -4
1008:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2454              		.loc 1 1008 0
ARM GAS  /tmp/ccTP8DMx.s 			page 152


 2455 0002 0668     		ldr	r6, [r0]
 2456              	.LVL355:
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 2457              		.loc 1 1011 0
 2458 0004 0129     		cmp	r1, #1
 2459 0006 53D9     		bls	.L230
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 2460              		.loc 1 1011 0 is_stmt 0 discriminator 1
 2461 0008 7369     		ldr	r3, [r6, #20]
 2462 000a 9942     		cmp	r1, r3
 2463 000c 52D2     		bcs	.L231
 2464 000e 0C46     		mov	r4, r1
 2465              	.LVL356:
1017:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
 2466              		.loc 1 1017 0 is_stmt 1
 2467 0010 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 2468 0012 022B     		cmp	r3, #2
 2469 0014 2AD0     		beq	.L226
 2470 0016 032B     		cmp	r3, #3
 2471 0018 38D0     		beq	.L227
 2472 001a 012B     		cmp	r3, #1
 2473 001c 4CD1     		bne	.L237
 2474              	.LVL357:
1019:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 2475              		.loc 1 1019 0
 2476 001e 01EB5105 		add	r5, r1, r1, lsr #1
 2477              	.LVL358:
1020:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = fs->win[bc++ % SS(fs)];
 2478              		.loc 1 1020 0
 2479 0022 316A     		ldr	r1, [r6, #32]
 2480              	.LVL359:
 2481 0024 01EB5521 		add	r1, r1, r5, lsr #9
 2482 0028 3046     		mov	r0, r6
 2483              	.LVL360:
 2484 002a FFF7FEFF 		bl	move_window
 2485              	.LVL361:
 2486 002e 0028     		cmp	r0, #0
 2487 0030 44D1     		bne	.L233
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 2488              		.loc 1 1021 0
 2489 0032 6F1C     		adds	r7, r5, #1
 2490              	.LVL362:
 2491 0034 C5F30805 		ubfx	r5, r5, #0, #9
 2492 0038 3544     		add	r5, r5, r6
 2493 003a 95F83050 		ldrb	r5, [r5, #48]	@ zero_extendqisi2
 2494              	.LVL363:
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc |= fs->win[bc % SS(fs)] << 8;
 2495              		.loc 1 1022 0
 2496 003e 316A     		ldr	r1, [r6, #32]
 2497 0040 01EB5721 		add	r1, r1, r7, lsr #9
 2498 0044 3046     		mov	r0, r6
 2499 0046 FFF7FEFF 		bl	move_window
 2500              	.LVL364:
 2501 004a 0028     		cmp	r0, #0
 2502 004c 39D1     		bne	.L234
1023:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 2503              		.loc 1 1023 0
ARM GAS  /tmp/ccTP8DMx.s 			page 153


 2504 004e C7F30803 		ubfx	r3, r7, #0, #9
 2505 0052 3344     		add	r3, r3, r6
 2506 0054 93F83000 		ldrb	r0, [r3, #48]	@ zero_extendqisi2
 2507 0058 45EA0020 		orr	r0, r5, r0, lsl #8
 2508              	.LVL365:
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2509              		.loc 1 1024 0
 2510 005c 14F0010F 		tst	r4, #1
 2511 0060 01D0     		beq	.L229
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2512              		.loc 1 1024 0 is_stmt 0 discriminator 1
 2513 0062 0009     		lsrs	r0, r0, #4
 2514              	.LVL366:
 2515 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2516              	.LVL367:
 2517              	.L229:
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2518              		.loc 1 1024 0 discriminator 2
 2519 0066 C0F30B00 		ubfx	r0, r0, #0, #12
 2520              	.LVL368:
 2521 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2522              	.LVL369:
 2523              	.L226:
1028:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_word(fs->win + clst * 2 % SS(fs));
 2524              		.loc 1 1028 0 is_stmt 1
 2525 006c 316A     		ldr	r1, [r6, #32]
 2526              	.LVL370:
 2527 006e 01EB1421 		add	r1, r1, r4, lsr #8
 2528 0072 3046     		mov	r0, r6
 2529              	.LVL371:
 2530 0074 FFF7FEFF 		bl	move_window
 2531              	.LVL372:
 2532 0078 30BB     		cbnz	r0, .L235
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2533              		.loc 1 1029 0
 2534 007a 06F13000 		add	r0, r6, #48
 2535 007e 6100     		lsls	r1, r4, #1
 2536 0080 01F4FF71 		and	r1, r1, #510
 2537 0084 0844     		add	r0, r0, r1
 2538 0086 FFF7FEFF 		bl	ld_word
 2539              	.LVL373:
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2540              		.loc 1 1030 0
 2541 008a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2542              	.LVL374:
 2543              	.L227:
1033:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;
 2544              		.loc 1 1033 0
 2545 008c 316A     		ldr	r1, [r6, #32]
 2546              	.LVL375:
 2547 008e 01EBD411 		add	r1, r1, r4, lsr #7
 2548 0092 3046     		mov	r0, r6
 2549              	.LVL376:
 2550 0094 FFF7FEFF 		bl	move_window
 2551              	.LVL377:
 2552 0098 C8B9     		cbnz	r0, .L236
1034:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
ARM GAS  /tmp/ccTP8DMx.s 			page 154


 2553              		.loc 1 1034 0
 2554 009a 06F13003 		add	r3, r6, #48
 2555 009e A100     		lsls	r1, r4, #2
 2556 00a0 01F4FE70 		and	r0, r1, #508
 2557 00a4 1844     		add	r0, r0, r3
 2558 00a6 FFF7FEFF 		bl	ld_dword
 2559              	.LVL378:
 2560 00aa 20F07040 		bic	r0, r0, #-268435456
 2561              	.LVL379:
1035:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 2562              		.loc 1 1035 0
 2563 00ae F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2564              	.LVL380:
 2565              	.L230:
1012:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2566              		.loc 1 1012 0
 2567 00b0 0120     		movs	r0, #1
 2568              	.LVL381:
 2569 00b2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2570              	.LVL382:
 2571              	.L231:
 2572 00b4 0120     		movs	r0, #1
 2573              	.LVL383:
 2574 00b6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2575              	.LVL384:
 2576              	.L237:
1065:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2577              		.loc 1 1065 0
 2578 00b8 0120     		movs	r0, #1
 2579              	.LVL385:
 2580 00ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2581              	.LVL386:
 2582              	.L233:
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2583              		.loc 1 1015 0
 2584 00bc 4FF0FF30 		mov	r0, #-1
 2585 00c0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2586              	.LVL387:
 2587              	.L234:
 2588 00c2 4FF0FF30 		mov	r0, #-1
 2589 00c6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2590              	.LVL388:
 2591              	.L235:
 2592 00c8 4FF0FF30 		mov	r0, #-1
 2593 00cc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2594              	.LVL389:
 2595              	.L236:
 2596 00ce 4FF0FF30 		mov	r0, #-1
 2597              	.LVL390:
1070:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2598              		.loc 1 1070 0
 2599 00d2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2600              		.cfi_endproc
 2601              	.LFE141:
 2603              		.section	.text.dir_sdi,"ax",%progbits
 2604              		.align	2
 2605              		.thumb
ARM GAS  /tmp/ccTP8DMx.s 			page 155


 2606              		.thumb_func
 2608              	dir_sdi:
 2609              	.LFB146:
1474:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD csz, clst;
 2610              		.loc 1 1474 0
 2611              		.cfi_startproc
 2612              		@ args = 0, pretend = 0, frame = 0
 2613              		@ frame_needed = 0, uses_anonymous_args = 0
 2614              	.LVL391:
 2615 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2616              	.LCFI26:
 2617              		.cfi_def_cfa_offset 24
 2618              		.cfi_offset 4, -24
 2619              		.cfi_offset 5, -20
 2620              		.cfi_offset 6, -16
 2621              		.cfi_offset 7, -12
 2622              		.cfi_offset 8, -8
 2623              		.cfi_offset 14, -4
1476:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2624              		.loc 1 1476 0
 2625 0004 0768     		ldr	r7, [r0]
 2626              	.LVL392:
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
 2627              		.loc 1 1479 0
 2628 0006 B1F5001F 		cmp	r1, #2097152
 2629 000a 3DD2     		bcs	.L246
 2630 000c 0646     		mov	r6, r0
 2631 000e 0C46     		mov	r4, r1
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
 2632              		.loc 1 1479 0 is_stmt 0 discriminator 1
 2633 0010 11F01F0F 		tst	r1, #31
 2634 0014 3BD1     		bne	.L247
1482:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
 2635              		.loc 1 1482 0 is_stmt 1
 2636 0016 7161     		str	r1, [r6, #20]
1483:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
 2637              		.loc 1 1483 0
 2638 0018 8568     		ldr	r5, [r0, #8]
 2639              	.LVL393:
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = fs->dirbase;
 2640              		.loc 1 1484 0
 2641 001a 1DB9     		cbnz	r5, .L241
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = fs->dirbase;
 2642              		.loc 1 1484 0 is_stmt 0 discriminator 1
 2643 001c 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 2644 001e 022B     		cmp	r3, #2
 2645 0020 00D9     		bls	.L241
1485:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
 2646              		.loc 1 1485 0 is_stmt 1
 2647 0022 7D6A     		ldr	r5, [r7, #36]
 2648              	.LVL394:
 2649              	.L241:
1489:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs / SZDIRE >= fs->n_rootdir)	return FR_INT_ERR;	/* Is index out of range? */
 2650              		.loc 1 1489 0
 2651 0024 35B9     		cbnz	r5, .L242
1490:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = fs->dirbase;
 2652              		.loc 1 1490 0
ARM GAS  /tmp/ccTP8DMx.s 			page 156


 2653 0026 3B89     		ldrh	r3, [r7, #8]
 2654 0028 B3EB541F 		cmp	r3, r4, lsr #5
 2655 002c 32D9     		bls	.L248
1491:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2656              		.loc 1 1491 0
 2657 002e 7B6A     		ldr	r3, [r7, #36]
 2658 0030 F361     		str	r3, [r6, #28]
 2659 0032 1AE0     		b	.L243
 2660              	.L242:
1494:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (ofs >= csz) {				/* Follow cluster chain */
 2661              		.loc 1 1494 0
 2662 0034 B7F80A80 		ldrh	r8, [r7, #10]
 2663 0038 4FEA4828 		lsl	r8, r8, #9
 2664              	.LVL395:
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 2665              		.loc 1 1495 0
 2666 003c 0EE0     		b	.L244
 2667              	.LVL396:
 2668              	.L245:
1496:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 2669              		.loc 1 1496 0
 2670 003e 2946     		mov	r1, r5
 2671 0040 3046     		mov	r0, r6
 2672 0042 FFF7FEFF 		bl	get_fat
 2673              	.LVL397:
 2674 0046 0546     		mov	r5, r0
 2675              	.LVL398:
1497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 2676              		.loc 1 1497 0
 2677 0048 B0F1FF3F 		cmp	r0, #-1
 2678 004c 25D0     		beq	.L249
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 2679              		.loc 1 1498 0
 2680 004e 0128     		cmp	r0, #1
 2681 0050 26D9     		bls	.L250
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 2682              		.loc 1 1498 0 is_stmt 0 discriminator 2
 2683 0052 7B69     		ldr	r3, [r7, #20]
 2684 0054 9842     		cmp	r0, r3
 2685 0056 26D2     		bcs	.L251
1499:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2686              		.loc 1 1499 0 is_stmt 1
 2687 0058 C8EB0404 		rsb	r4, r8, r4
 2688              	.LVL399:
 2689              	.L244:
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 2690              		.loc 1 1495 0
 2691 005c 4445     		cmp	r4, r8
 2692 005e EED2     		bcs	.L245
1501:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2693              		.loc 1 1501 0
 2694 0060 2946     		mov	r1, r5
 2695 0062 3846     		mov	r0, r7
 2696 0064 FFF7FEFF 		bl	clust2sect
 2697              	.LVL400:
 2698 0068 F061     		str	r0, [r6, #28]
 2699              	.LVL401:
ARM GAS  /tmp/ccTP8DMx.s 			page 157


 2700              	.L243:
1503:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return FR_INT_ERR;
 2701              		.loc 1 1503 0
 2702 006a B561     		str	r5, [r6, #24]
1504:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
 2703              		.loc 1 1504 0
 2704 006c F369     		ldr	r3, [r6, #28]
 2705 006e EBB1     		cbz	r3, .L252
1505:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
 2706              		.loc 1 1505 0
 2707 0070 03EB5423 		add	r3, r3, r4, lsr #9
 2708 0074 F361     		str	r3, [r6, #28]
1506:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2709              		.loc 1 1506 0
 2710 0076 07F13003 		add	r3, r7, #48
 2711 007a C4F30804 		ubfx	r4, r4, #0, #9
 2712              	.LVL402:
 2713 007e 2344     		add	r3, r3, r4
 2714 0080 3362     		str	r3, [r6, #32]
1508:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2715              		.loc 1 1508 0
 2716 0082 0020     		movs	r0, #0
 2717 0084 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2718              	.LVL403:
 2719              	.L246:
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2720              		.loc 1 1480 0
 2721 0088 0220     		movs	r0, #2
 2722              	.LVL404:
 2723 008a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2724              	.LVL405:
 2725              	.L247:
 2726 008e 0220     		movs	r0, #2
 2727              	.LVL406:
 2728 0090 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2729              	.LVL407:
 2730              	.L248:
1490:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = fs->dirbase;
 2731              		.loc 1 1490 0
 2732 0094 0220     		movs	r0, #2
 2733              	.LVL408:
 2734 0096 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2735              	.LVL409:
 2736              	.L249:
1497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 2737              		.loc 1 1497 0
 2738 009a 0120     		movs	r0, #1
 2739              	.LVL410:
 2740 009c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2741              	.LVL411:
 2742              	.L250:
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 2743              		.loc 1 1498 0
 2744 00a0 0220     		movs	r0, #2
 2745              	.LVL412:
 2746 00a2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2747              	.LVL413:
ARM GAS  /tmp/ccTP8DMx.s 			page 158


 2748              	.L251:
 2749 00a6 0220     		movs	r0, #2
 2750              	.LVL414:
 2751 00a8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2752              	.LVL415:
 2753              	.L252:
1504:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
 2754              		.loc 1 1504 0
 2755 00ac 0220     		movs	r0, #2
1509:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2756              		.loc 1 1509 0
 2757 00ae BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2758              		.cfi_endproc
 2759              	.LFE146:
 2761 00b2 00BF     		.section	.text.create_chain,"ax",%progbits
 2762              		.align	2
 2763              		.thumb
 2764              		.thumb_func
 2766              	create_chain:
 2767              	.LFB144:
1355:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cs, ncl, scl;
 2768              		.loc 1 1355 0
 2769              		.cfi_startproc
 2770              		@ args = 0, pretend = 0, frame = 0
 2771              		@ frame_needed = 0, uses_anonymous_args = 0
 2772              	.LVL416:
 2773 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2774              	.LCFI27:
 2775              		.cfi_def_cfa_offset 24
 2776              		.cfi_offset 4, -24
 2777              		.cfi_offset 5, -20
 2778              		.cfi_offset 6, -16
 2779              		.cfi_offset 7, -12
 2780              		.cfi_offset 8, -8
 2781              		.cfi_offset 14, -4
 2782 0004 0746     		mov	r7, r0
1358:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2783              		.loc 1 1358 0
 2784 0006 0668     		ldr	r6, [r0]
 2785              	.LVL417:
1361:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = fs->last_clst;				/* Get suggested cluster to start from */
 2786              		.loc 1 1361 0
 2787 0008 8846     		mov	r8, r1
 2788 000a 29B9     		cbnz	r1, .L255
1362:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 2789              		.loc 1 1362 0
 2790 000c F568     		ldr	r5, [r6, #12]
 2791              	.LVL418:
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2792              		.loc 1 1363 0
 2793 000e 7DB1     		cbz	r5, .L264
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2794              		.loc 1 1363 0 is_stmt 0 discriminator 2
 2795 0010 7369     		ldr	r3, [r6, #20]
 2796 0012 9D42     		cmp	r5, r3
 2797 0014 0ED2     		bcs	.L265
 2798 0016 0EE0     		b	.L256
ARM GAS  /tmp/ccTP8DMx.s 			page 159


 2799              	.LVL419:
 2800              	.L255:
1366:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < 2) return 1;				/* Invalid FAT value */
 2801              		.loc 1 1366 0 is_stmt 1
 2802 0018 FFF7FEFF 		bl	get_fat
 2803              	.LVL420:
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 2804              		.loc 1 1367 0
 2805 001c 0128     		cmp	r0, #1
 2806 001e 46D9     		bls	.L266
1368:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 2807              		.loc 1 1368 0
 2808 0020 B0F1FF3F 		cmp	r0, #-1
 2809 0024 51D0     		beq	.L257
1369:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst;
 2810              		.loc 1 1369 0
 2811 0026 7369     		ldr	r3, [r6, #20]
 2812 0028 9842     		cmp	r0, r3
 2813 002a 4ED3     		bcc	.L257
1370:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2814              		.loc 1 1370 0
 2815 002c 4546     		mov	r5, r8
 2816 002e 02E0     		b	.L256
 2817              	.LVL421:
 2818              	.L264:
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2819              		.loc 1 1363 0
 2820 0030 0125     		movs	r5, #1
 2821              	.LVL422:
 2822 0032 00E0     		b	.L256
 2823              	.LVL423:
 2824              	.L265:
 2825 0034 0125     		movs	r5, #1
 2826              	.LVL424:
 2827              	.L256:
1400:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
 2828              		.loc 1 1400 0
 2829 0036 2C46     		mov	r4, r5
 2830              	.LVL425:
 2831              	.L260:
1402:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl >= fs->n_fatent) {		/* Check wrap-around */
 2832              		.loc 1 1402 0
 2833 0038 0134     		adds	r4, r4, #1
 2834              	.LVL426:
1403:Middlewares/Third_Party/FatFs/src/ff.c **** 				ncl = 2;
 2835              		.loc 1 1403 0
 2836 003a 7369     		ldr	r3, [r6, #20]
 2837 003c 9C42     		cmp	r4, r3
 2838 003e 02D3     		bcc	.L258
 2839              	.LVL427:
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 2840              		.loc 1 1405 0
 2841 0040 012D     		cmp	r5, #1
 2842 0042 37D9     		bls	.L269
1404:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl > scl) return 0;	/* No free cluster */
 2843              		.loc 1 1404 0
 2844 0044 0224     		movs	r4, #2
ARM GAS  /tmp/ccTP8DMx.s 			page 160


 2845              	.LVL428:
 2846              	.L258:
1407:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 0) break;				/* Found a free cluster */
 2847              		.loc 1 1407 0
 2848 0046 2146     		mov	r1, r4
 2849 0048 3846     		mov	r0, r7
 2850 004a FFF7FEFF 		bl	get_fat
 2851              	.LVL429:
1408:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* An error occurred */
 2852              		.loc 1 1408 0
 2853 004e 38B1     		cbz	r0, .L259
1409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == scl) return 0;		/* No free cluster */
 2854              		.loc 1 1409 0
 2855 0050 0128     		cmp	r0, #1
 2856 0052 32D0     		beq	.L270
1409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == scl) return 0;		/* No free cluster */
 2857              		.loc 1 1409 0 is_stmt 0 discriminator 2
 2858 0054 B0F1FF3F 		cmp	r0, #-1
 2859 0058 31D0     		beq	.L271
1410:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2860              		.loc 1 1410 0 is_stmt 1
 2861 005a AC42     		cmp	r4, r5
 2862 005c ECD1     		bne	.L260
 2863 005e 30E0     		b	.L272
 2864              	.L259:
1412:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && clst != 0) {
 2865              		.loc 1 1412 0
 2866 0060 4FF0FF32 		mov	r2, #-1
 2867 0064 2146     		mov	r1, r4
 2868 0066 3046     		mov	r0, r6
 2869              	.LVL430:
 2870 0068 FFF7FEFF 		bl	put_fat
 2871              	.LVL431:
1413:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, ncl);	/* Link it from the previous one if needed */
 2872              		.loc 1 1413 0
 2873 006c 0346     		mov	r3, r0
 2874 006e 40B9     		cbnz	r0, .L261
1413:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, ncl);	/* Link it from the previous one if needed */
 2875              		.loc 1 1413 0 is_stmt 0 discriminator 1
 2876 0070 B8F1000F 		cmp	r8, #0
 2877 0074 05D0     		beq	.L261
1414:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2878              		.loc 1 1414 0 is_stmt 1
 2879 0076 2246     		mov	r2, r4
 2880 0078 4146     		mov	r1, r8
 2881 007a 3046     		mov	r0, r6
 2882              	.LVL432:
 2883 007c FFF7FEFF 		bl	put_fat
 2884              	.LVL433:
 2885 0080 0346     		mov	r3, r0
 2886              	.LVL434:
 2887              	.L261:
1418:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = ncl;
 2888              		.loc 1 1418 0
 2889 0082 73B9     		cbnz	r3, .L262
1419:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
 2890              		.loc 1 1419 0
ARM GAS  /tmp/ccTP8DMx.s 			page 161


 2891 0084 F460     		str	r4, [r6, #12]
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag |= 1;
 2892              		.loc 1 1420 0
 2893 0086 3369     		ldr	r3, [r6, #16]
 2894              	.LVL435:
 2895 0088 7269     		ldr	r2, [r6, #20]
 2896 008a 023A     		subs	r2, r2, #2
 2897 008c 9342     		cmp	r3, r2
 2898 008e 01D8     		bhi	.L263
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag |= 1;
 2899              		.loc 1 1420 0 is_stmt 0 discriminator 1
 2900 0090 013B     		subs	r3, r3, #1
 2901 0092 3361     		str	r3, [r6, #16]
 2902              	.L263:
1421:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 2903              		.loc 1 1421 0 is_stmt 1
 2904 0094 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 2905 0096 43F00103 		orr	r3, r3, #1
 2906 009a 3371     		strb	r3, [r6, #4]
 2907 009c 2046     		mov	r0, r4
 2908 009e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2909              	.LVL436:
 2910              	.L262:
1423:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2911              		.loc 1 1423 0
 2912 00a2 012B     		cmp	r3, #1
 2913 00a4 10D1     		bne	.L273
 2914 00a6 4FF0FF30 		mov	r0, #-1
 2915 00aa BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2916              	.LVL437:
 2917              	.L266:
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 2918              		.loc 1 1367 0
 2919 00ae 0120     		movs	r0, #1
 2920              	.LVL438:
 2921 00b0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2922              	.LVL439:
 2923              	.L269:
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 2924              		.loc 1 1405 0
 2925 00b4 0020     		movs	r0, #0
 2926 00b6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2927              	.LVL440:
 2928              	.L270:
 2929 00ba BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2930              	.LVL441:
 2931              	.L271:
 2932 00be BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2933              	.LVL442:
 2934              	.L272:
1410:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2935              		.loc 1 1410 0
 2936 00c2 0020     		movs	r0, #0
 2937              	.LVL443:
 2938 00c4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2939              	.LVL444:
 2940              	.L273:
ARM GAS  /tmp/ccTP8DMx.s 			page 162


1423:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2941              		.loc 1 1423 0
 2942 00c8 0120     		movs	r0, #1
 2943              	.LVL445:
 2944              	.L257:
1427:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2945              		.loc 1 1427 0
 2946 00ca BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2947              		.cfi_endproc
 2948              	.LFE144:
 2950 00ce 00BF     		.section	.text.remove_chain,"ax",%progbits
 2951              		.align	2
 2952              		.thumb
 2953              		.thumb_func
 2955              	remove_chain:
 2956              	.LFB143:
1276:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 2957              		.loc 1 1276 0
 2958              		.cfi_startproc
 2959              		@ args = 0, pretend = 0, frame = 0
 2960              		@ frame_needed = 0, uses_anonymous_args = 0
 2961              	.LVL446:
 2962 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2963              	.LCFI28:
 2964              		.cfi_def_cfa_offset 24
 2965              		.cfi_offset 3, -24
 2966              		.cfi_offset 4, -20
 2967              		.cfi_offset 5, -16
 2968              		.cfi_offset 6, -12
 2969              		.cfi_offset 7, -8
 2970              		.cfi_offset 14, -4
 2971 0002 0E46     		mov	r6, r1
 2972              	.LVL447:
1279:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT || _USE_TRIM
 2973              		.loc 1 1279 0
 2974 0004 0468     		ldr	r4, [r0]
 2975              	.LVL448:
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2976              		.loc 1 1287 0
 2977 0006 0129     		cmp	r1, #1
 2978 0008 2CD9     		bls	.L280
 2979 000a 0746     		mov	r7, r0
 2980 000c 1146     		mov	r1, r2
 2981              	.LVL449:
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2982              		.loc 1 1287 0 is_stmt 0 discriminator 2
 2983 000e 6369     		ldr	r3, [r4, #20]
 2984 0010 9E42     		cmp	r6, r3
 2985 0012 29D2     		bcs	.L281
1290:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, pclst, 0xFFFFFFFF);
 2986              		.loc 1 1290 0 is_stmt 1
 2987 0014 2AB1     		cbz	r2, .L279
1291:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
 2988              		.loc 1 1291 0
 2989 0016 4FF0FF32 		mov	r2, #-1
 2990              	.LVL450:
 2991 001a 2046     		mov	r0, r4
ARM GAS  /tmp/ccTP8DMx.s 			page 163


 2992              	.LVL451:
 2993 001c FFF7FEFF 		bl	put_fat
 2994              	.LVL452:
1292:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2995              		.loc 1 1292 0
 2996 0020 20BB     		cbnz	r0, .L282
 2997              	.LVL453:
 2998              	.L279:
1297:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0) break;				/* Empty cluster? */
 2999              		.loc 1 1297 0
 3000 0022 3146     		mov	r1, r6
 3001 0024 3846     		mov	r0, r7
 3002 0026 FFF7FEFF 		bl	get_fat
 3003              	.LVL454:
1298:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
 3004              		.loc 1 1298 0
 3005 002a 0546     		mov	r5, r0
 3006 002c F8B1     		cbz	r0, .L283
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
 3007              		.loc 1 1299 0
 3008 002e 0128     		cmp	r0, #1
 3009 0030 1FD0     		beq	.L284
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 3010              		.loc 1 1300 0
 3011 0032 B0F1FF3F 		cmp	r0, #-1
 3012 0036 1ED0     		beq	.L285
1302:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
 3013              		.loc 1 1302 0
 3014 0038 0022     		movs	r2, #0
 3015 003a 3146     		mov	r1, r6
 3016 003c 2046     		mov	r0, r4
 3017              	.LVL455:
 3018 003e FFF7FEFF 		bl	put_fat
 3019              	.LVL456:
1303:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3020              		.loc 1 1303 0
 3021 0042 D0B9     		cbnz	r0, .L286
1305:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst++;
 3022              		.loc 1 1305 0
 3023 0044 2369     		ldr	r3, [r4, #16]
 3024 0046 6269     		ldr	r2, [r4, #20]
 3025 0048 911E     		subs	r1, r2, #2
 3026 004a 8B42     		cmp	r3, r1
 3027 004c 05D2     		bcs	.L278
1306:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
 3028              		.loc 1 1306 0
 3029 004e 0133     		adds	r3, r3, #1
 3030 0050 2361     		str	r3, [r4, #16]
1307:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3031              		.loc 1 1307 0
 3032 0052 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3033 0054 43F00103 		orr	r3, r3, #1
 3034 0058 2371     		strb	r3, [r4, #4]
 3035              	.L278:
 3036              	.LVL457:
1327:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
 3037              		.loc 1 1327 0
ARM GAS  /tmp/ccTP8DMx.s 			page 164


 3038 005a 2E46     		mov	r6, r5
1328:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3039              		.loc 1 1328 0
 3040 005c 9542     		cmp	r5, r2
 3041 005e E0D3     		bcc	.L279
1341:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3042              		.loc 1 1341 0
 3043 0060 0020     		movs	r0, #0
 3044              	.LVL458:
 3045 0062 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3046              	.LVL459:
 3047              	.L280:
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3048              		.loc 1 1287 0
 3049 0064 0220     		movs	r0, #2
 3050              	.LVL460:
 3051 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3052              	.LVL461:
 3053              	.L281:
 3054 0068 0220     		movs	r0, #2
 3055              	.LVL462:
 3056 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3057              	.LVL463:
 3058              	.L282:
 3059 006c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3060              	.LVL464:
 3061              	.L283:
1341:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3062              		.loc 1 1341 0
 3063 006e 0020     		movs	r0, #0
 3064              	.LVL465:
 3065 0070 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3066              	.LVL466:
 3067              	.L284:
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
 3068              		.loc 1 1299 0
 3069 0072 0220     		movs	r0, #2
 3070              	.LVL467:
 3071 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3072              	.LVL468:
 3073              	.L285:
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 3074              		.loc 1 1300 0
 3075 0076 0120     		movs	r0, #1
 3076              	.LVL469:
 3077 0078 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3078              	.LVL470:
 3079              	.L286:
1342:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3080              		.loc 1 1342 0
 3081 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3082              		.cfi_endproc
 3083              	.LFE143:
 3085              		.section	.text.dir_remove,"ax",%progbits
 3086              		.align	2
 3087              		.thumb
 3088              		.thumb_func
ARM GAS  /tmp/ccTP8DMx.s 			page 165


 3090              	dir_remove:
 3091              	.LFB154:
2399:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3092              		.loc 1 2399 0
 3093              		.cfi_startproc
 3094              		@ args = 0, pretend = 0, frame = 0
 3095              		@ frame_needed = 0, uses_anonymous_args = 0
 3096              	.LVL471:
 3097 0000 38B5     		push	{r3, r4, r5, lr}
 3098              	.LCFI29:
 3099              		.cfi_def_cfa_offset 16
 3100              		.cfi_offset 3, -16
 3101              		.cfi_offset 4, -12
 3102              		.cfi_offset 5, -8
 3103              		.cfi_offset 14, -4
 3104 0002 0446     		mov	r4, r0
2401:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3105              		.loc 1 2401 0
 3106 0004 0568     		ldr	r5, [r0]
 3107              	.LVL472:
2424:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 3108              		.loc 1 2424 0
 3109 0006 C169     		ldr	r1, [r0, #28]
 3110 0008 2846     		mov	r0, r5
 3111              	.LVL473:
 3112 000a FFF7FEFF 		bl	move_window
 3113              	.LVL474:
2425:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->dir[DIR_Name] = DDEM;
 3114              		.loc 1 2425 0
 3115 000e 0346     		mov	r3, r0
 3116 0010 20B9     		cbnz	r0, .L289
2426:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->wflag = 1;
 3117              		.loc 1 2426 0
 3118 0012 226A     		ldr	r2, [r4, #32]
 3119 0014 E521     		movs	r1, #229
 3120 0016 1170     		strb	r1, [r2]
2427:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3121              		.loc 1 2427 0
 3122 0018 0122     		movs	r2, #1
 3123 001a EA70     		strb	r2, [r5, #3]
 3124              	.L289:
2432:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3125              		.loc 1 2432 0
 3126 001c 1846     		mov	r0, r3
 3127              	.LVL475:
 3128 001e 38BD     		pop	{r3, r4, r5, pc}
 3129              		.cfi_endproc
 3130              	.LFE154:
 3132              		.section	.text.dir_next,"ax",%progbits
 3133              		.align	2
 3134              		.thumb
 3135              		.thumb_func
 3137              	dir_next:
 3138              	.LFB147:
1523:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs, clst;
 3139              		.loc 1 1523 0
 3140              		.cfi_startproc
ARM GAS  /tmp/ccTP8DMx.s 			page 166


 3141              		@ args = 0, pretend = 0, frame = 0
 3142              		@ frame_needed = 0, uses_anonymous_args = 0
 3143              	.LVL476:
 3144 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3145              	.LCFI30:
 3146              		.cfi_def_cfa_offset 32
 3147              		.cfi_offset 3, -32
 3148              		.cfi_offset 4, -28
 3149              		.cfi_offset 5, -24
 3150              		.cfi_offset 6, -20
 3151              		.cfi_offset 7, -16
 3152              		.cfi_offset 8, -12
 3153              		.cfi_offset 9, -8
 3154              		.cfi_offset 14, -4
1525:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 3155              		.loc 1 1525 0
 3156 0004 0668     		ldr	r6, [r0]
 3157              	.LVL477:
1530:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) re
 3158              		.loc 1 1530 0
 3159 0006 4369     		ldr	r3, [r0, #20]
 3160 0008 03F12005 		add	r5, r3, #32
 3161              	.LVL478:
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3162              		.loc 1 1531 0
 3163 000c C369     		ldr	r3, [r0, #28]
 3164 000e 002B     		cmp	r3, #0
 3165 0010 6DD0     		beq	.L299
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3166              		.loc 1 1531 0 is_stmt 0 discriminator 2
 3167 0012 B5F5001F 		cmp	r5, #2097152
 3168 0016 6DD2     		bcs	.L300
 3169 0018 8846     		mov	r8, r1
 3170 001a 0446     		mov	r4, r0
1533:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect++;				/* Next sector */
 3171              		.loc 1 1533 0 is_stmt 1
 3172 001c C5F30807 		ubfx	r7, r5, #0, #9
 3173 0020 002F     		cmp	r7, #0
 3174 0022 5DD1     		bne	.L293
1534:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3175              		.loc 1 1534 0
 3176 0024 0133     		adds	r3, r3, #1
 3177 0026 C361     		str	r3, [r0, #28]
1536:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
 3178              		.loc 1 1536 0
 3179 0028 8169     		ldr	r1, [r0, #24]
 3180              	.LVL479:
 3181 002a 41B9     		cbnz	r1, .L294
1537:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = 0; return FR_NO_FILE;
 3182              		.loc 1 1537 0
 3183 002c 3389     		ldrh	r3, [r6, #8]
 3184 002e B3EB551F 		cmp	r3, r5, lsr #5
 3185 0032 55D8     		bhi	.L293
1538:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3186              		.loc 1 1538 0
 3187 0034 0023     		movs	r3, #0
 3188 0036 C361     		str	r3, [r0, #28]
ARM GAS  /tmp/ccTP8DMx.s 			page 167


 3189 0038 0420     		movs	r0, #4
 3190              	.LVL480:
 3191 003a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3192              	.LVL481:
 3193              	.L294:
1542:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
 3194              		.loc 1 1542 0
 3195 003e 7389     		ldrh	r3, [r6, #10]
 3196 0040 013B     		subs	r3, r3, #1
 3197 0042 13EA5523 		ands	r3, r3, r5, lsr #9
 3198 0046 4BD1     		bne	.L293
1543:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
 3199              		.loc 1 1543 0
 3200 0048 FFF7FEFF 		bl	get_fat
 3201              	.LVL482:
 3202 004c 8146     		mov	r9, r0
 3203              	.LVL483:
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
 3204              		.loc 1 1544 0
 3205 004e 0128     		cmp	r0, #1
 3206 0050 53D9     		bls	.L301
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
 3207              		.loc 1 1545 0
 3208 0052 B0F1FF3F 		cmp	r0, #-1
 3209 0056 53D0     		beq	.L302
1546:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 3210              		.loc 1 1546 0
 3211 0058 7369     		ldr	r3, [r6, #20]
 3212 005a 9842     		cmp	r0, r3
 3213 005c 39D3     		bcc	.L295
1548:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->sect = 0; return FR_NO_FILE;
 3214              		.loc 1 1548 0
 3215 005e B8F1000F 		cmp	r8, #0
 3216 0062 04D1     		bne	.L296
1549:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3217              		.loc 1 1549 0
 3218 0064 0023     		movs	r3, #0
 3219 0066 E361     		str	r3, [r4, #28]
 3220 0068 0420     		movs	r0, #4
 3221              	.LVL484:
 3222 006a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3223              	.LVL485:
 3224              	.L296:
1551:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
 3225              		.loc 1 1551 0
 3226 006e A169     		ldr	r1, [r4, #24]
 3227 0070 2046     		mov	r0, r4
 3228              	.LVL486:
 3229 0072 FFF7FEFF 		bl	create_chain
 3230              	.LVL487:
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 3231              		.loc 1 1552 0
 3232 0076 8146     		mov	r9, r0
 3233 0078 0028     		cmp	r0, #0
 3234 007a 44D0     		beq	.L303
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3235              		.loc 1 1553 0
ARM GAS  /tmp/ccTP8DMx.s 			page 168


 3236 007c 0128     		cmp	r0, #1
 3237 007e 45D0     		beq	.L304
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up the stretched table */
 3238              		.loc 1 1554 0
 3239 0080 B0F1FF3F 		cmp	r0, #-1
 3240 0084 45D0     		beq	.L305
1557:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
 3241              		.loc 1 1557 0
 3242 0086 3046     		mov	r0, r6
 3243              	.LVL488:
 3244 0088 FFF7FEFF 		bl	sync_window
 3245              	.LVL489:
 3246 008c 0028     		cmp	r0, #0
 3247 008e 43D1     		bne	.L306
1558:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill t
 3248              		.loc 1 1558 0
 3249 0090 4FF40072 		mov	r2, #512
 3250 0094 0021     		movs	r1, #0
 3251 0096 06F13000 		add	r0, r6, #48
 3252 009a FFF7FEFF 		bl	mem_set
 3253              	.LVL490:
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 3254              		.loc 1 1559 0
 3255 009e 4946     		mov	r1, r9
 3256 00a0 3046     		mov	r0, r6
 3257 00a2 FFF7FEFF 		bl	clust2sect
 3258              	.LVL491:
 3259 00a6 F062     		str	r0, [r6, #44]
 3260 00a8 4FF00008 		mov	r8, #0
 3261              	.LVL492:
 3262 00ac 0AE0     		b	.L297
 3263              	.LVL493:
 3264              	.L298:
1560:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
 3265              		.loc 1 1560 0
 3266 00ae 0123     		movs	r3, #1
 3267 00b0 F370     		strb	r3, [r6, #3]
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3268              		.loc 1 1561 0
 3269 00b2 3046     		mov	r0, r6
 3270 00b4 FFF7FEFF 		bl	sync_window
 3271              	.LVL494:
 3272 00b8 88BB     		cbnz	r0, .L307
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 3273              		.loc 1 1559 0 discriminator 2
 3274 00ba 08F10108 		add	r8, r8, #1
 3275              	.LVL495:
 3276 00be F36A     		ldr	r3, [r6, #44]
 3277 00c0 0133     		adds	r3, r3, #1
 3278 00c2 F362     		str	r3, [r6, #44]
 3279              	.LVL496:
 3280              	.L297:
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 3281              		.loc 1 1559 0 is_stmt 0 discriminator 1
 3282 00c4 7389     		ldrh	r3, [r6, #10]
 3283 00c6 9845     		cmp	r8, r3
 3284 00c8 F1D3     		bcc	.L298
ARM GAS  /tmp/ccTP8DMx.s 			page 169


1563:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 3285              		.loc 1 1563 0 is_stmt 1
 3286 00ca F36A     		ldr	r3, [r6, #44]
 3287 00cc C8EB0303 		rsb	r3, r8, r3
 3288 00d0 F362     		str	r3, [r6, #44]
 3289              	.LVL497:
 3290              	.L295:
1569:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = clust2sect(fs, clst);
 3291              		.loc 1 1569 0
 3292 00d2 C4F81890 		str	r9, [r4, #24]
1570:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3293              		.loc 1 1570 0
 3294 00d6 4946     		mov	r1, r9
 3295 00d8 3046     		mov	r0, r6
 3296 00da FFF7FEFF 		bl	clust2sect
 3297              	.LVL498:
 3298 00de E061     		str	r0, [r4, #28]
 3299              	.LVL499:
 3300              	.L293:
1574:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
 3301              		.loc 1 1574 0
 3302 00e0 6561     		str	r5, [r4, #20]
1575:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3303              		.loc 1 1575 0
 3304 00e2 3036     		adds	r6, r6, #48
 3305              	.LVL500:
 3306 00e4 3E44     		add	r6, r6, r7
 3307              	.LVL501:
 3308 00e6 2662     		str	r6, [r4, #32]
1577:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3309              		.loc 1 1577 0
 3310 00e8 0020     		movs	r0, #0
 3311 00ea BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3312              	.LVL502:
 3313              	.L299:
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3314              		.loc 1 1531 0
 3315 00ee 0420     		movs	r0, #4
 3316              	.LVL503:
 3317 00f0 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3318              	.LVL504:
 3319              	.L300:
 3320 00f4 0420     		movs	r0, #4
 3321              	.LVL505:
 3322 00f6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3323              	.LVL506:
 3324              	.L301:
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
 3325              		.loc 1 1544 0
 3326 00fa 0220     		movs	r0, #2
 3327              	.LVL507:
 3328 00fc BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3329              	.LVL508:
 3330              	.L302:
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
 3331              		.loc 1 1545 0
 3332 0100 0120     		movs	r0, #1
ARM GAS  /tmp/ccTP8DMx.s 			page 170


 3333              	.LVL509:
 3334 0102 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3335              	.LVL510:
 3336              	.L303:
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 3337              		.loc 1 1552 0
 3338 0106 0720     		movs	r0, #7
 3339              	.LVL511:
 3340 0108 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3341              	.LVL512:
 3342              	.L304:
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3343              		.loc 1 1553 0
 3344 010c 0220     		movs	r0, #2
 3345              	.LVL513:
 3346 010e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3347              	.LVL514:
 3348              	.L305:
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up the stretched table */
 3349              		.loc 1 1554 0
 3350 0112 0120     		movs	r0, #1
 3351              	.LVL515:
 3352 0114 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3353              	.LVL516:
 3354              	.L306:
1557:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
 3355              		.loc 1 1557 0
 3356 0118 0120     		movs	r0, #1
 3357 011a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3358              	.LVL517:
 3359              	.L307:
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3360              		.loc 1 1561 0
 3361 011e 0120     		movs	r0, #1
1578:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3362              		.loc 1 1578 0
 3363 0120 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3364              		.cfi_endproc
 3365              	.LFE147:
 3367              		.section	.text.dir_find,"ax",%progbits
 3368              		.align	2
 3369              		.thumb
 3370              		.thumb_func
 3372              	dir_find:
 3373              	.LFB152:
2213:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3374              		.loc 1 2213 0
 3375              		.cfi_startproc
 3376              		@ args = 0, pretend = 0, frame = 0
 3377              		@ frame_needed = 0, uses_anonymous_args = 0
 3378              	.LVL518:
 3379 0000 70B5     		push	{r4, r5, r6, lr}
 3380              	.LCFI31:
 3381              		.cfi_def_cfa_offset 16
 3382              		.cfi_offset 4, -16
 3383              		.cfi_offset 5, -12
 3384              		.cfi_offset 6, -8
ARM GAS  /tmp/ccTP8DMx.s 			page 171


 3385              		.cfi_offset 14, -4
 3386 0002 0446     		mov	r4, r0
2215:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c;
 3387              		.loc 1 2215 0
 3388 0004 0668     		ldr	r6, [r0]
 3389              	.LVL519:
2221:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
 3390              		.loc 1 2221 0
 3391 0006 0021     		movs	r1, #0
 3392 0008 FFF7FEFF 		bl	dir_sdi
 3393              	.LVL520:
2222:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 3394              		.loc 1 2222 0
 3395 000c E8B9     		cbnz	r0, .L313
 3396              	.L312:
2248:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3397              		.loc 1 2248 0
 3398 000e E169     		ldr	r1, [r4, #28]
 3399 0010 3046     		mov	r0, r6
 3400              	.LVL521:
 3401 0012 FFF7FEFF 		bl	move_window
 3402              	.LVL522:
2249:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];
 3403              		.loc 1 2249 0
 3404 0016 0546     		mov	r5, r0
 3405 0018 C0B9     		cbnz	r0, .L314
2250:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 3406              		.loc 1 2250 0
 3407 001a 206A     		ldr	r0, [r4, #32]
 3408              	.LVL523:
 3409 001c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 3410              	.LVL524:
2251:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3411              		.loc 1 2251 0
 3412 001e B3B1     		cbz	r3, .L315
2274:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry
 3413              		.loc 1 2274 0
 3414 0020 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 3415              	.LVL525:
 3416 0022 03F03F03 		and	r3, r3, #63
 3417 0026 A371     		strb	r3, [r4, #6]
 3418              	.LVL526:
2275:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3419              		.loc 1 2275 0
 3420 0028 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 3421 002a 13F0080F 		tst	r3, #8
 3422 002e 05D1     		bne	.L311
2275:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3423              		.loc 1 2275 0 is_stmt 0 discriminator 1
 3424 0030 0B22     		movs	r2, #11
 3425 0032 04F12401 		add	r1, r4, #36
 3426 0036 FFF7FEFF 		bl	mem_cmp
 3427              	.LVL527:
 3428 003a 50B1     		cbz	r0, .L316
 3429              	.L311:
2277:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (res == FR_OK);
 3430              		.loc 1 2277 0 is_stmt 1
ARM GAS  /tmp/ccTP8DMx.s 			page 172


 3431 003c 0021     		movs	r1, #0
 3432 003e 2046     		mov	r0, r4
 3433 0040 FFF7FEFF 		bl	dir_next
 3434              	.LVL528:
2278:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3435              		.loc 1 2278 0
 3436 0044 0028     		cmp	r0, #0
 3437 0046 E2D0     		beq	.L312
 3438 0048 70BD     		pop	{r4, r5, r6, pc}
 3439              	.LVL529:
 3440              	.L313:
 3441 004a 70BD     		pop	{r4, r5, r6, pc}
 3442              	.LVL530:
 3443              	.L314:
 3444 004c 70BD     		pop	{r4, r5, r6, pc}
 3445              	.LVL531:
 3446              	.L315:
2251:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3447              		.loc 1 2251 0
 3448 004e 0420     		movs	r0, #4
 3449 0050 70BD     		pop	{r4, r5, r6, pc}
 3450              	.LVL532:
 3451              	.L316:
2248:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3452              		.loc 1 2248 0
 3453 0052 2846     		mov	r0, r5
2281:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3454              		.loc 1 2281 0
 3455 0054 70BD     		pop	{r4, r5, r6, pc}
 3456              		.cfi_endproc
 3457              	.LFE152:
 3459 0056 00BF     		.section	.text.follow_path,"ax",%progbits
 3460              		.align	2
 3461              		.thumb
 3462              		.thumb_func
 3464              	follow_path:
 3465              	.LFB157:
2817:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3466              		.loc 1 2817 0
 3467              		.cfi_startproc
 3468              		@ args = 0, pretend = 0, frame = 8
 3469              		@ frame_needed = 0, uses_anonymous_args = 0
 3470              	.LVL533:
 3471 0000 30B5     		push	{r4, r5, lr}
 3472              	.LCFI32:
 3473              		.cfi_def_cfa_offset 12
 3474              		.cfi_offset 4, -12
 3475              		.cfi_offset 5, -8
 3476              		.cfi_offset 14, -4
 3477 0002 83B0     		sub	sp, sp, #12
 3478              	.LCFI33:
 3479              		.cfi_def_cfa_offset 24
 3480 0004 0446     		mov	r4, r0
 3481 0006 0191     		str	r1, [sp, #4]
 3482              	.LVL534:
2821:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3483              		.loc 1 2821 0
ARM GAS  /tmp/ccTP8DMx.s 			page 173


 3484 0008 0568     		ldr	r5, [r0]
 3485              	.LVL535:
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 3486              		.loc 1 2830 0
 3487 000a 01E0     		b	.L319
 3488              	.L320:
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 3489              		.loc 1 2830 0 is_stmt 0 discriminator 4
 3490 000c 0133     		adds	r3, r3, #1
 3491 000e 0193     		str	r3, [sp, #4]
 3492              	.L319:
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 3493              		.loc 1 2830 0 discriminator 1
 3494 0010 019B     		ldr	r3, [sp, #4]
 3495 0012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3496 0014 2F2A     		cmp	r2, #47
 3497 0016 F9D0     		beq	.L320
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 3498              		.loc 1 2830 0 discriminator 3
 3499 0018 5C2A     		cmp	r2, #92
 3500 001a F7D0     		beq	.L320
2831:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3501              		.loc 1 2831 0 is_stmt 1
 3502 001c 0022     		movs	r2, #0
 3503 001e A260     		str	r2, [r4, #8]
2850:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NONAME;
 3504              		.loc 1 2850 0
 3505 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3506 0022 1F2B     		cmp	r3, #31
 3507 0024 08D8     		bhi	.L321
2851:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, 0);
 3508              		.loc 1 2851 0
 3509 0026 8023     		movs	r3, #128
 3510 0028 84F82F30 		strb	r3, [r4, #47]
2852:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3511              		.loc 1 2852 0
 3512 002c 1146     		mov	r1, r2
 3513              	.LVL536:
 3514 002e 2046     		mov	r0, r4
 3515              	.LVL537:
 3516 0030 FFF7FEFF 		bl	dir_sdi
 3517              	.LVL538:
 3518 0034 0346     		mov	r3, r0
 3519              	.LVL539:
 3520 0036 27E0     		b	.L322
 3521              	.LVL540:
 3522              	.L321:
2856:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3523              		.loc 1 2856 0
 3524 0038 01A9     		add	r1, sp, #4
 3525 003a 2046     		mov	r0, r4
 3526 003c FFF7FEFF 		bl	create_name
 3527              	.LVL541:
2857:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Find an object with the segment name */
 3528              		.loc 1 2857 0
 3529 0040 0346     		mov	r3, r0
 3530 0042 08BB     		cbnz	r0, .L322
ARM GAS  /tmp/ccTP8DMx.s 			page 174


2858:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
 3531              		.loc 1 2858 0
 3532 0044 2046     		mov	r0, r4
 3533              	.LVL542:
 3534 0046 FFF7FEFF 		bl	dir_find
 3535              	.LVL543:
2859:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
 3536              		.loc 1 2859 0
 3537 004a 94F82F20 		ldrb	r2, [r4, #47]	@ zero_extendqisi2
 3538              	.LVL544:
2860:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
 3539              		.loc 1 2860 0
 3540 004e 0346     		mov	r3, r0
 3541 0050 28B1     		cbz	r0, .L323
2861:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
 3542              		.loc 1 2861 0
 3543 0052 0428     		cmp	r0, #4
 3544 0054 18D1     		bne	.L322
2867:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3545              		.loc 1 2867 0
 3546 0056 12F0040F 		tst	r2, #4
 3547 005a 12D0     		beq	.L324
 3548 005c 14E0     		b	.L322
 3549              	.L323:
2872:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get into the sub-directory */
 3550              		.loc 1 2872 0
 3551 005e 12F0040F 		tst	r2, #4
 3552 0062 11D1     		bne	.L322
2874:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_PATH; break;
 3553              		.loc 1 2874 0
 3554 0064 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 3555 0066 13F0100F 		tst	r3, #16
 3556 006a 0CD0     		beq	.L325
2888:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3557              		.loc 1 2888 0
 3558 006c 05F13001 		add	r1, r5, #48
 3559 0070 6369     		ldr	r3, [r4, #20]
 3560 0072 C3F30803 		ubfx	r3, r3, #0, #9
 3561 0076 1944     		add	r1, r1, r3
 3562 0078 2846     		mov	r0, r5
 3563              	.LVL545:
 3564 007a FFF7FEFF 		bl	ld_clust
 3565              	.LVL546:
 3566 007e A060     		str	r0, [r4, #8]
2890:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3567              		.loc 1 2890 0
 3568 0080 DAE7     		b	.L321
 3569              	.LVL547:
 3570              	.L324:
2867:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3571              		.loc 1 2867 0
 3572 0082 0523     		movs	r3, #5
 3573 0084 00E0     		b	.L322
 3574              	.L325:
2875:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3575              		.loc 1 2875 0
 3576 0086 0523     		movs	r3, #5
ARM GAS  /tmp/ccTP8DMx.s 			page 175


 3577              	.LVL548:
 3578              	.L322:
2894:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3579              		.loc 1 2894 0
 3580 0088 1846     		mov	r0, r3
 3581 008a 03B0     		add	sp, sp, #12
 3582              	.LCFI34:
 3583              		.cfi_def_cfa_offset 12
 3584              		@ sp needed
 3585 008c 30BD     		pop	{r4, r5, pc}
 3586              		.cfi_endproc
 3587              	.LFE157:
 3589 008e 00BF     		.section	.text.dir_alloc,"ax",%progbits
 3590              		.align	2
 3591              		.thumb
 3592              		.thumb_func
 3594              	dir_alloc:
 3595              	.LFB148:
1593:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3596              		.loc 1 1593 0
 3597              		.cfi_startproc
 3598              		@ args = 0, pretend = 0, frame = 0
 3599              		@ frame_needed = 0, uses_anonymous_args = 0
 3600              	.LVL549:
 3601 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3602              	.LCFI35:
 3603              		.cfi_def_cfa_offset 24
 3604              		.cfi_offset 3, -24
 3605              		.cfi_offset 4, -20
 3606              		.cfi_offset 5, -16
 3607              		.cfi_offset 6, -12
 3608              		.cfi_offset 7, -8
 3609              		.cfi_offset 14, -4
 3610 0002 0446     		mov	r4, r0
 3611 0004 0F46     		mov	r7, r1
1596:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3612              		.loc 1 1596 0
 3613 0006 0668     		ldr	r6, [r0]
 3614              	.LVL550:
1599:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 3615              		.loc 1 1599 0
 3616 0008 0021     		movs	r1, #0
 3617              	.LVL551:
 3618 000a FFF7FEFF 		bl	dir_sdi
 3619              	.LVL552:
1600:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = 0;
 3620              		.loc 1 1600 0
 3621 000e 0246     		mov	r2, r0
 3622 0010 B8B9     		cbnz	r0, .L328
 3623 0012 0025     		movs	r5, #0
 3624              	.L331:
 3625              	.LVL553:
1603:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3626              		.loc 1 1603 0
 3627 0014 E169     		ldr	r1, [r4, #28]
 3628 0016 3046     		mov	r0, r6
 3629              	.LVL554:
ARM GAS  /tmp/ccTP8DMx.s 			page 176


 3630 0018 FFF7FEFF 		bl	move_window
 3631              	.LVL555:
1604:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 3632              		.loc 1 1604 0
 3633 001c 0246     		mov	r2, r0
 3634 001e 80B9     		cbnz	r0, .L328
1608:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3635              		.loc 1 1608 0
 3636 0020 236A     		ldr	r3, [r4, #32]
 3637 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3638 0024 E52B     		cmp	r3, #229
 3639 0026 00D0     		beq	.L329
1608:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3640              		.loc 1 1608 0 is_stmt 0 discriminator 1
 3641 0028 1BB9     		cbnz	r3, .L333
 3642              	.L329:
1610:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 3643              		.loc 1 1610 0 is_stmt 1
 3644 002a 0135     		adds	r5, r5, #1
 3645              	.LVL556:
 3646 002c BD42     		cmp	r5, r7
 3647 002e 01D1     		bne	.L330
 3648 0030 07E0     		b	.L328
 3649              	.L333:
1612:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3650              		.loc 1 1612 0
 3651 0032 0025     		movs	r5, #0
 3652              	.LVL557:
 3653              	.L330:
1614:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);	/* Next entry with table stretch enabled */
 3654              		.loc 1 1614 0
 3655 0034 0121     		movs	r1, #1
 3656 0036 2046     		mov	r0, r4
 3657              	.LVL558:
 3658 0038 FFF7FEFF 		bl	dir_next
 3659              	.LVL559:
1615:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3660              		.loc 1 1615 0
 3661 003c 0246     		mov	r2, r0
 3662 003e 0028     		cmp	r0, #0
 3663 0040 E8D0     		beq	.L331
 3664              	.LVL560:
 3665              	.L328:
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3666              		.loc 1 1618 0
 3667 0042 042A     		cmp	r2, #4
 3668 0044 00D1     		bne	.L332
 3669 0046 0722     		movs	r2, #7
 3670              	.LVL561:
 3671              	.L332:
1620:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3672              		.loc 1 1620 0
 3673 0048 1046     		mov	r0, r2
 3674 004a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3675              		.cfi_endproc
 3676              	.LFE148:
 3678              		.section	.text.dir_register,"ax",%progbits
ARM GAS  /tmp/ccTP8DMx.s 			page 177


 3679              		.align	2
 3680              		.thumb
 3681              		.thumb_func
 3683              	dir_register:
 3684              	.LFB153:
2295:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3685              		.loc 1 2295 0
 3686              		.cfi_startproc
 3687              		@ args = 0, pretend = 0, frame = 0
 3688              		@ frame_needed = 0, uses_anonymous_args = 0
 3689              	.LVL562:
 3690 0000 70B5     		push	{r4, r5, r6, lr}
 3691              	.LCFI36:
 3692              		.cfi_def_cfa_offset 16
 3693              		.cfi_offset 4, -16
 3694              		.cfi_offset 5, -12
 3695              		.cfi_offset 6, -8
 3696              		.cfi_offset 14, -4
 3697 0002 0446     		mov	r4, r0
2297:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3698              		.loc 1 2297 0
 3699 0004 0668     		ldr	r6, [r0]
 3700              	.LVL563:
2366:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3701              		.loc 1 2366 0
 3702 0006 0121     		movs	r1, #1
 3703 0008 FFF7FEFF 		bl	dir_alloc
 3704              	.LVL564:
2371:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
 3705              		.loc 1 2371 0
 3706 000c 0546     		mov	r5, r0
 3707 000e 90B9     		cbnz	r0, .L337
2372:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 3708              		.loc 1 2372 0
 3709 0010 E169     		ldr	r1, [r4, #28]
 3710 0012 3046     		mov	r0, r6
 3711              	.LVL565:
 3712 0014 FFF7FEFF 		bl	move_window
 3713              	.LVL566:
2373:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
 3714              		.loc 1 2373 0
 3715 0018 0546     		mov	r5, r0
 3716 001a 60B9     		cbnz	r0, .L337
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
 3717              		.loc 1 2374 0
 3718 001c 2022     		movs	r2, #32
 3719 001e 0021     		movs	r1, #0
 3720 0020 206A     		ldr	r0, [r4, #32]
 3721              	.LVL567:
 3722 0022 FFF7FEFF 		bl	mem_set
 3723              	.LVL568:
2375:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
 3724              		.loc 1 2375 0
 3725 0026 0B22     		movs	r2, #11
 3726 0028 04F12401 		add	r1, r4, #36
 3727 002c 206A     		ldr	r0, [r4, #32]
 3728 002e FFF7FEFF 		bl	mem_cpy
ARM GAS  /tmp/ccTP8DMx.s 			page 178


 3729              	.LVL569:
2379:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3730              		.loc 1 2379 0
 3731 0032 0123     		movs	r3, #1
 3732 0034 F370     		strb	r3, [r6, #3]
 3733              	.L337:
 3734              	.LVL570:
2384:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3735              		.loc 1 2384 0
 3736 0036 2846     		mov	r0, r5
 3737 0038 70BD     		pop	{r4, r5, r6, pc}
 3738              		.cfi_endproc
 3739              	.LFE153:
 3741 003a 00BF     		.section	.text.dir_read,"ax",%progbits
 3742              		.align	2
 3743              		.thumb
 3744              		.thumb_func
 3746              	dir_read:
 3747              	.LFB151:
2135:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_NO_FILE;
 3748              		.loc 1 2135 0
 3749              		.cfi_startproc
 3750              		@ args = 0, pretend = 0, frame = 0
 3751              		@ frame_needed = 0, uses_anonymous_args = 0
 3752              	.LVL571:
 3753 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3754              	.LCFI37:
 3755              		.cfi_def_cfa_offset 24
 3756              		.cfi_offset 3, -24
 3757              		.cfi_offset 4, -20
 3758              		.cfi_offset 5, -16
 3759              		.cfi_offset 6, -12
 3760              		.cfi_offset 7, -8
 3761              		.cfi_offset 14, -4
 3762 0002 0446     		mov	r4, r0
 3763 0004 0E46     		mov	r6, r1
 3764              	.LVL572:
2137:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, c;
 3765              		.loc 1 2137 0
 3766 0006 0568     		ldr	r5, [r0]
 3767              	.LVL573:
2136:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
 3768              		.loc 1 2136 0
 3769 0008 0427     		movs	r7, #4
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
 3770              		.loc 1 2143 0
 3771 000a 1FE0     		b	.L340
 3772              	.LVL574:
 3773              	.L343:
2144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3774              		.loc 1 2144 0
 3775 000c 2846     		mov	r0, r5
 3776 000e FFF7FEFF 		bl	move_window
 3777              	.LVL575:
2145:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];	/* Test for the entry type */
 3778              		.loc 1 2145 0
 3779 0012 0746     		mov	r7, r0
ARM GAS  /tmp/ccTP8DMx.s 			page 179


 3780 0014 F8B9     		cbnz	r0, .L341
2146:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) {
 3781              		.loc 1 2146 0
 3782 0016 236A     		ldr	r3, [r4, #32]
 3783 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3784              	.LVL576:
2147:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_NO_FILE; break; /* Reached to end of the directory */
 3785              		.loc 1 2147 0
 3786 001a DAB1     		cbz	r2, .L345
2167:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3787              		.loc 1 2167 0
 3788 001c DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 3789 001e 03F03F03 		and	r3, r3, #63
 3790              	.LVL577:
 3791 0022 A371     		strb	r3, [r4, #6]
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
 3792              		.loc 1 2188 0
 3793 0024 E52A     		cmp	r2, #229
 3794 0026 0BD0     		beq	.L342
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
 3795              		.loc 1 2188 0 is_stmt 0 discriminator 1
 3796 0028 2E2A     		cmp	r2, #46
 3797 002a 09D0     		beq	.L342
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
 3798              		.loc 1 2188 0 discriminator 2
 3799 002c 0F2B     		cmp	r3, #15
 3800 002e 07D0     		beq	.L342
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
 3801              		.loc 1 2188 0 discriminator 3
 3802 0030 23F02003 		bic	r3, r3, #32
 3803              	.LVL578:
 3804 0034 082B     		cmp	r3, #8
 3805 0036 14BF     		ite	ne
 3806 0038 0023     		movne	r3, #0
 3807 003a 0123     		moveq	r3, #1
 3808 003c B342     		cmp	r3, r6
 3809 003e 0AD0     		beq	.L341
 3810              	.L342:
2193:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3811              		.loc 1 2193 0 is_stmt 1
 3812 0040 0021     		movs	r1, #0
 3813 0042 2046     		mov	r0, r4
 3814              	.LVL579:
 3815 0044 FFF7FEFF 		bl	dir_next
 3816              	.LVL580:
2194:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3817              		.loc 1 2194 0
 3818 0048 0746     		mov	r7, r0
 3819 004a 20B9     		cbnz	r0, .L341
 3820              	.LVL581:
 3821              	.L340:
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
 3822              		.loc 1 2143 0
 3823 004c E169     		ldr	r1, [r4, #28]
 3824 004e 0029     		cmp	r1, #0
 3825 0050 DCD1     		bne	.L343
 3826 0052 00E0     		b	.L341
ARM GAS  /tmp/ccTP8DMx.s 			page 180


 3827              	.LVL582:
 3828              	.L345:
2148:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3829              		.loc 1 2148 0
 3830 0054 0427     		movs	r7, #4
 3831              	.LVL583:
 3832              	.L341:
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3833              		.loc 1 2197 0
 3834 0056 0FB1     		cbz	r7, .L344
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3835              		.loc 1 2197 0 is_stmt 0 discriminator 1
 3836 0058 0023     		movs	r3, #0
 3837 005a E361     		str	r3, [r4, #28]
 3838              	.L344:
2199:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3839              		.loc 1 2199 0 is_stmt 1
 3840 005c 3846     		mov	r0, r7
 3841 005e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3842              		.cfi_endproc
 3843              	.LFE151:
 3845              		.section	.text.sync_fs,"ax",%progbits
 3846              		.align	2
 3847              		.thumb
 3848              		.thumb_func
 3850              	sync_fs:
 3851              	.LFB139:
 947:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3852              		.loc 1 947 0
 3853              		.cfi_startproc
 3854              		@ args = 0, pretend = 0, frame = 0
 3855              		@ frame_needed = 0, uses_anonymous_args = 0
 3856              	.LVL584:
 3857 0000 70B5     		push	{r4, r5, r6, lr}
 3858              	.LCFI38:
 3859              		.cfi_def_cfa_offset 16
 3860              		.cfi_offset 4, -16
 3861              		.cfi_offset 5, -12
 3862              		.cfi_offset 6, -8
 3863              		.cfi_offset 14, -4
 3864 0002 0446     		mov	r4, r0
 951:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 3865              		.loc 1 951 0
 3866 0004 FFF7FEFF 		bl	sync_window
 3867              	.LVL585:
 952:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update FSInfo sector if needed */
 3868              		.loc 1 952 0
 3869 0008 0546     		mov	r5, r0
 3870 000a 0028     		cmp	r0, #0
 3871 000c 37D1     		bne	.L348
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSInfo structure */
 3872              		.loc 1 954 0
 3873 000e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3874 0010 032B     		cmp	r3, #3
 3875 0012 2DD1     		bne	.L349
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSInfo structure */
 3876              		.loc 1 954 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccTP8DMx.s 			page 181


 3877 0014 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3878 0016 012B     		cmp	r3, #1
 3879 0018 2AD1     		bne	.L349
 956:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + BS_55AA, 0xAA55);
 3880              		.loc 1 956 0 is_stmt 1
 3881 001a 04F13006 		add	r6, r4, #48
 3882 001e 4FF40072 		mov	r2, #512
 3883 0022 0021     		movs	r1, #0
 3884 0024 3046     		mov	r0, r6
 3885              	.LVL586:
 3886 0026 FFF7FEFF 		bl	mem_set
 3887              	.LVL587:
 957:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_LeadSig, 0x41615252);
 3888              		.loc 1 957 0
 3889 002a 4AF65521 		movw	r1, #43605
 3890 002e 04F22E20 		addw	r0, r4, #558
 3891 0032 FFF7FEFF 		bl	st_word
 3892              	.LVL588:
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_StrucSig, 0x61417272);
 3893              		.loc 1 958 0
 3894 0036 1349     		ldr	r1, .L352
 3895 0038 3046     		mov	r0, r6
 3896 003a FFF7FEFF 		bl	st_dword
 3897              	.LVL589:
 959:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
 3898              		.loc 1 959 0
 3899 003e 1249     		ldr	r1, .L352+4
 3900 0040 04F50570 		add	r0, r4, #532
 3901 0044 FFF7FEFF 		bl	st_dword
 3902              	.LVL590:
 960:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
 3903              		.loc 1 960 0
 3904 0048 2169     		ldr	r1, [r4, #16]
 3905 004a 04F50670 		add	r0, r4, #536
 3906 004e FFF7FEFF 		bl	st_dword
 3907              	.LVL591:
 961:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write it into the FSInfo sector */
 3908              		.loc 1 961 0
 3909 0052 E168     		ldr	r1, [r4, #12]
 3910 0054 04F50770 		add	r0, r4, #540
 3911 0058 FFF7FEFF 		bl	st_dword
 3912              	.LVL592:
 963:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(fs->drv, fs->win, fs->winsect, 1);
 3913              		.loc 1 963 0
 3914 005c E269     		ldr	r2, [r4, #28]
 3915 005e 0132     		adds	r2, r2, #1
 3916 0060 E262     		str	r2, [r4, #44]
 964:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
 3917              		.loc 1 964 0
 3918 0062 0123     		movs	r3, #1
 3919 0064 3146     		mov	r1, r6
 3920 0066 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3921 0068 FFF7FEFF 		bl	disk_write
 3922              	.LVL593:
 965:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3923              		.loc 1 965 0
 3924 006c 0023     		movs	r3, #0
ARM GAS  /tmp/ccTP8DMx.s 			page 182


 3925 006e 2371     		strb	r3, [r4, #4]
 3926              	.L349:
 968:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3927              		.loc 1 968 0
 3928 0070 0022     		movs	r2, #0
 3929 0072 1146     		mov	r1, r2
 3930 0074 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3931 0076 FFF7FEFF 		bl	disk_ioctl
 3932              	.LVL594:
 3933 007a 00B1     		cbz	r0, .L348
 3934 007c 0125     		movs	r5, #1
 3935              	.L348:
 3936              	.LVL595:
 972:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3937              		.loc 1 972 0
 3938 007e 2846     		mov	r0, r5
 3939 0080 70BD     		pop	{r4, r5, r6, pc}
 3940              	.LVL596:
 3941              	.L353:
 3942 0082 00BF     		.align	2
 3943              	.L352:
 3944 0084 52526141 		.word	1096897106
 3945 0088 72724161 		.word	1631679090
 3946              		.cfi_endproc
 3947              	.LFE139:
 3949              		.section	.text.f_mount,"ax",%progbits
 3950              		.align	2
 3951              		.global	f_mount
 3952              		.thumb
 3953              		.thumb_func
 3955              	f_mount:
 3956              	.LFB162:
3254:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *cfs;
 3957              		.loc 1 3254 0
 3958              		.cfi_startproc
 3959              		@ args = 0, pretend = 0, frame = 16
 3960              		@ frame_needed = 0, uses_anonymous_args = 0
 3961              	.LVL597:
 3962 0000 70B5     		push	{r4, r5, r6, lr}
 3963              	.LCFI39:
 3964              		.cfi_def_cfa_offset 16
 3965              		.cfi_offset 4, -16
 3966              		.cfi_offset 5, -12
 3967              		.cfi_offset 6, -8
 3968              		.cfi_offset 14, -4
 3969 0002 84B0     		sub	sp, sp, #16
 3970              	.LCFI40:
 3971              		.cfi_def_cfa_offset 32
 3972 0004 0190     		str	r0, [sp, #4]
 3973 0006 0091     		str	r1, [sp]
 3974 0008 1646     		mov	r6, r2
3258:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3975              		.loc 1 3258 0
 3976 000a 04A8     		add	r0, sp, #16
 3977              	.LVL598:
 3978 000c 40F8041D 		str	r1, [r0, #-4]!
3262:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
ARM GAS  /tmp/ccTP8DMx.s 			page 183


 3979              		.loc 1 3262 0
 3980 0010 FFF7FEFF 		bl	get_ldnumber
 3981              	.LVL599:
3263:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 3982              		.loc 1 3263 0
 3983 0014 041E     		subs	r4, r0, #0
 3984 0016 19DB     		blt	.L358
3264:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3985              		.loc 1 3264 0
 3986 0018 104B     		ldr	r3, .L362
 3987 001a 53F82450 		ldr	r5, [r3, r4, lsl #2]
 3988              	.LVL600:
3266:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 3989              		.loc 1 3266 0
 3990 001e 25B1     		cbz	r5, .L356
3268:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3991              		.loc 1 3268 0
 3992 0020 2846     		mov	r0, r5
 3993              	.LVL601:
 3994 0022 FFF7FEFF 		bl	clear_lock
 3995              	.LVL602:
3273:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3996              		.loc 1 3273 0
 3997 0026 0023     		movs	r3, #0
 3998 0028 2B70     		strb	r3, [r5]
 3999              	.L356:
3276:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fs_type = 0;				/* Clear new fs object */
 4000              		.loc 1 3276 0
 4001 002a 019B     		ldr	r3, [sp, #4]
 4002 002c 0BB1     		cbz	r3, .L357
3277:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Create sync object for the new volume */
 4003              		.loc 1 3277 0
 4004 002e 0022     		movs	r2, #0
 4005 0030 1A70     		strb	r2, [r3]
 4006              	.L357:
3282:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4007              		.loc 1 3282 0
 4008 0032 019B     		ldr	r3, [sp, #4]
 4009 0034 094A     		ldr	r2, .L362
 4010 0036 42F82430 		str	r3, [r2, r4, lsl #2]
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4011              		.loc 1 3284 0
 4012 003a 4BB1     		cbz	r3, .L359
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4013              		.loc 1 3284 0 is_stmt 0 discriminator 2
 4014 003c 012E     		cmp	r6, #1
 4015 003e 09D1     		bne	.L360
3286:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
 4016              		.loc 1 3286 0 is_stmt 1
 4017 0040 0022     		movs	r2, #0
 4018 0042 01A9     		add	r1, sp, #4
 4019              	.LVL603:
 4020 0044 6846     		mov	r0, sp
 4021 0046 FFF7FEFF 		bl	find_volume
 4022              	.LVL604:
3287:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4023              		.loc 1 3287 0
ARM GAS  /tmp/ccTP8DMx.s 			page 184


 4024 004a 04E0     		b	.L355
 4025              	.LVL605:
 4026              	.L358:
3263:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 4027              		.loc 1 3263 0
 4028 004c 0B20     		movs	r0, #11
 4029              	.LVL606:
 4030 004e 02E0     		b	.L355
 4031              	.LVL607:
 4032              	.L359:
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4033              		.loc 1 3284 0
 4034 0050 0020     		movs	r0, #0
 4035 0052 00E0     		b	.L355
 4036              	.L360:
 4037 0054 0020     		movs	r0, #0
 4038              	.LVL608:
 4039              	.L355:
3288:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4040              		.loc 1 3288 0
 4041 0056 04B0     		add	sp, sp, #16
 4042              	.LCFI41:
 4043              		.cfi_def_cfa_offset 16
 4044              	.LVL609:
 4045              		@ sp needed
 4046 0058 70BD     		pop	{r4, r5, r6, pc}
 4047              	.LVL610:
 4048              	.L363:
 4049 005a 00BF     		.align	2
 4050              	.L362:
 4051 005c 00000000 		.word	.LANCHOR2
 4052              		.cfi_endproc
 4053              	.LFE162:
 4055              		.section	.text.f_open,"ax",%progbits
 4056              		.align	2
 4057              		.global	f_open
 4058              		.thumb
 4059              		.thumb_func
 4061              	f_open:
 4062              	.LFB163:
3302:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4063              		.loc 1 3302 0
 4064              		.cfi_startproc
 4065              		@ args = 0, pretend = 0, frame = 64
 4066              		@ frame_needed = 0, uses_anonymous_args = 0
 4067              	.LVL611:
 4068 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4069              	.LCFI42:
 4070              		.cfi_def_cfa_offset 28
 4071              		.cfi_offset 4, -28
 4072              		.cfi_offset 5, -24
 4073              		.cfi_offset 6, -20
 4074              		.cfi_offset 7, -16
 4075              		.cfi_offset 8, -12
 4076              		.cfi_offset 9, -8
 4077              		.cfi_offset 14, -4
 4078 0004 91B0     		sub	sp, sp, #68
ARM GAS  /tmp/ccTP8DMx.s 			page 185


 4079              	.LCFI43:
 4080              		.cfi_def_cfa_offset 96
 4081 0006 0191     		str	r1, [sp, #4]
3313:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4082              		.loc 1 3313 0
 4083 0008 0028     		cmp	r0, #0
 4084 000a 00F0FD80 		beq	.L380
 4085 000e 0546     		mov	r5, r0
 4086 0010 1646     		mov	r6, r2
3316:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, mode);
 4087              		.loc 1 3316 0
 4088 0012 02F03F07 		and	r7, r2, #63
 4089              	.LVL612:
3317:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 4090              		.loc 1 3317 0
 4091 0016 3A46     		mov	r2, r7
 4092 0018 03A9     		add	r1, sp, #12
 4093              	.LVL613:
 4094 001a 01A8     		add	r0, sp, #4
 4095              	.LVL614:
 4096 001c FFF7FEFF 		bl	find_volume
 4097              	.LVL615:
3318:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
 4098              		.loc 1 3318 0
 4099 0020 0446     		mov	r4, r0
 4100 0022 0028     		cmp	r0, #0
 4101 0024 40F0EB80 		bne	.L366
3319:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 4102              		.loc 1 3319 0
 4103 0028 039B     		ldr	r3, [sp, #12]
 4104 002a 0493     		str	r3, [sp, #16]
3321:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
 4105              		.loc 1 3321 0
 4106 002c 0199     		ldr	r1, [sp, #4]
 4107 002e 04A8     		add	r0, sp, #16
 4108              	.LVL616:
 4109 0030 FFF7FEFF 		bl	follow_path
 4110              	.LVL617:
3323:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
 4111              		.loc 1 3323 0
 4112 0034 0446     		mov	r4, r0
 4113 0036 70B9     		cbnz	r0, .L367
3324:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 4114              		.loc 1 3324 0
 4115 0038 9DF93F30 		ldrsb	r3, [sp, #63]
 4116 003c 002B     		cmp	r3, #0
 4117 003e 09DB     		blt	.L381
3329:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4118              		.loc 1 3329 0
 4119 0040 37F00103 		bics	r3, r7, #1
 4120 0044 14BF     		ite	ne
 4121 0046 0121     		movne	r1, #1
 4122 0048 0021     		moveq	r1, #0
 4123 004a 04A8     		add	r0, sp, #16
 4124              	.LVL618:
 4125 004c FFF7FEFF 		bl	chk_lock
 4126              	.LVL619:
ARM GAS  /tmp/ccTP8DMx.s 			page 186


 4127 0050 0446     		mov	r4, r0
 4128              	.LVL620:
 4129 0052 00E0     		b	.L367
 4130              	.LVL621:
 4131              	.L381:
3325:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4132              		.loc 1 3325 0
 4133 0054 0624     		movs	r4, #6
 4134              	.LVL622:
 4135              	.L367:
3334:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
 4136              		.loc 1 3334 0
 4137 0056 16F01C0F 		tst	r6, #28
 4138 005a 5AD0     		beq	.L368
3335:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
 4139              		.loc 1 3335 0
 4140 005c 6CB1     		cbz	r4, .L369
3336:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 4141              		.loc 1 3336 0
 4142 005e 042C     		cmp	r4, #4
 4143 0060 08D1     		bne	.L370
3338:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 4144              		.loc 1 3338 0
 4145 0062 FFF7FEFF 		bl	enq_lock
 4146              	.LVL623:
 4147 0066 20B1     		cbz	r0, .L382
3338:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 4148              		.loc 1 3338 0 is_stmt 0 discriminator 1
 4149 0068 04A8     		add	r0, sp, #16
 4150 006a FFF7FEFF 		bl	dir_register
 4151              	.LVL624:
 4152 006e 0446     		mov	r4, r0
 4153              	.LVL625:
 4154 0070 00E0     		b	.L370
 4155              	.LVL626:
 4156              	.L382:
3338:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 4157              		.loc 1 3338 0
 4158 0072 1224     		movs	r4, #18
 4159              	.LVL627:
 4160              	.L370:
3343:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4161              		.loc 1 3343 0 is_stmt 1
 4162 0074 47F00807 		orr	r7, r7, #8
 4163              	.LVL628:
 4164 0078 0BE0     		b	.L371
 4165              	.L369:
3346:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;
 4166              		.loc 1 3346 0
 4167 007a 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 4168 007e 13F0110F 		tst	r3, #17
 4169 0082 03D1     		bne	.L383
3349:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4170              		.loc 1 3349 0
 4171 0084 16F0040F 		tst	r6, #4
 4172 0088 02D1     		bne	.L384
 4173 008a 02E0     		b	.L371
ARM GAS  /tmp/ccTP8DMx.s 			page 187


 4174              	.L383:
3347:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 4175              		.loc 1 3347 0
 4176 008c 0724     		movs	r4, #7
 4177              	.LVL629:
 4178 008e 00E0     		b	.L371
 4179              	.LVL630:
 4180              	.L384:
3349:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4181              		.loc 1 3349 0
 4182 0090 0824     		movs	r4, #8
 4183              	.LVL631:
 4184              	.L371:
3352:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();
 4185              		.loc 1 3352 0
 4186 0092 002C     		cmp	r4, #0
 4187 0094 4DD1     		bne	.L372
3352:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();
 4188              		.loc 1 3352 0 is_stmt 0 discriminator 1
 4189 0096 17F0080F 		tst	r7, #8
 4190 009a 4AD0     		beq	.L372
3353:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 4191              		.loc 1 3353 0 is_stmt 1
 4192 009c FFF7FEFF 		bl	get_fattime
 4193              	.LVL632:
 4194 00a0 0646     		mov	r6, r0
 4195              	.LVL633:
3381:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_ModTime, dw);	/* Set modified time */
 4196              		.loc 1 3381 0
 4197 00a2 0146     		mov	r1, r0
 4198 00a4 0C98     		ldr	r0, [sp, #48]
 4199              	.LVL634:
 4200 00a6 0E30     		adds	r0, r0, #14
 4201 00a8 FFF7FEFF 		bl	st_dword
 4202              	.LVL635:
3382:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
 4203              		.loc 1 3382 0
 4204 00ac 3146     		mov	r1, r6
 4205 00ae 0C98     		ldr	r0, [sp, #48]
 4206 00b0 1630     		adds	r0, r0, #22
 4207 00b2 FFF7FEFF 		bl	st_dword
 4208              	.LVL636:
3383:Middlewares/Third_Party/FatFs/src/ff.c **** 					cl = ld_clust(fs, dj.dir);			/* Get cluster chain */
 4209              		.loc 1 3383 0
 4210 00b6 2022     		movs	r2, #32
 4211 00b8 0C9B     		ldr	r3, [sp, #48]
 4212 00ba DA72     		strb	r2, [r3, #11]
3384:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
 4213              		.loc 1 3384 0
 4214 00bc 039E     		ldr	r6, [sp, #12]
 4215              	.LVL637:
 4216 00be DDF83080 		ldr	r8, [sp, #48]
 4217 00c2 4146     		mov	r1, r8
 4218 00c4 3046     		mov	r0, r6
 4219 00c6 FFF7FEFF 		bl	ld_clust
 4220              	.LVL638:
 4221 00ca 8146     		mov	r9, r0
ARM GAS  /tmp/ccTP8DMx.s 			page 188


 4222              	.LVL639:
3385:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_FileSize, 0);
 4223              		.loc 1 3385 0
 4224 00cc 0022     		movs	r2, #0
 4225 00ce 4146     		mov	r1, r8
 4226 00d0 3046     		mov	r0, r6
 4227              	.LVL640:
 4228 00d2 FFF7FEFF 		bl	st_clust
 4229              	.LVL641:
3386:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 4230              		.loc 1 3386 0
 4231 00d6 0021     		movs	r1, #0
 4232 00d8 0C98     		ldr	r0, [sp, #48]
 4233 00da 1C30     		adds	r0, r0, #28
 4234 00dc FFF7FEFF 		bl	st_dword
 4235              	.LVL642:
3387:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4236              		.loc 1 3387 0
 4237 00e0 0122     		movs	r2, #1
 4238 00e2 039B     		ldr	r3, [sp, #12]
 4239 00e4 DA70     		strb	r2, [r3, #3]
3389:Middlewares/Third_Party/FatFs/src/ff.c **** 						dw = fs->winsect;
 4240              		.loc 1 3389 0
 4241 00e6 B9F1000F 		cmp	r9, #0
 4242 00ea 22D0     		beq	.L372
3390:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = remove_chain(&dj.obj, cl, 0);
 4243              		.loc 1 3390 0
 4244 00ec 039B     		ldr	r3, [sp, #12]
 4245 00ee DE6A     		ldr	r6, [r3, #44]
 4246              	.LVL643:
3391:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
 4247              		.loc 1 3391 0
 4248 00f0 0022     		movs	r2, #0
 4249 00f2 4946     		mov	r1, r9
 4250 00f4 04A8     		add	r0, sp, #16
 4251 00f6 FFF7FEFF 		bl	remove_chain
 4252              	.LVL644:
3392:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, dw);
 4253              		.loc 1 3392 0
 4254 00fa 0446     		mov	r4, r0
 4255 00fc C8B9     		cbnz	r0, .L372
3393:Middlewares/Third_Party/FatFs/src/ff.c **** 							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
 4256              		.loc 1 3393 0
 4257 00fe 3146     		mov	r1, r6
 4258 0100 0398     		ldr	r0, [sp, #12]
 4259              	.LVL645:
 4260 0102 FFF7FEFF 		bl	move_window
 4261              	.LVL646:
 4262 0106 0446     		mov	r4, r0
 4263              	.LVL647:
3394:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 4264              		.loc 1 3394 0
 4265 0108 09F1FF33 		add	r3, r9, #-1
 4266 010c 039A     		ldr	r2, [sp, #12]
 4267 010e D360     		str	r3, [r2, #12]
 4268 0110 0FE0     		b	.L372
 4269              	.LVL648:
ARM GAS  /tmp/ccTP8DMx.s 			page 189


 4270              	.L368:
3401:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
 4271              		.loc 1 3401 0
 4272 0112 74B9     		cbnz	r4, .L372
3402:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
 4273              		.loc 1 3402 0
 4274 0114 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 4275 0118 13F0100F 		tst	r3, #16
 4276 011c 06D1     		bne	.L385
3405:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
 4277              		.loc 1 3405 0
 4278 011e 16F0020F 		tst	r6, #2
 4279 0122 06D0     		beq	.L372
3405:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
 4280              		.loc 1 3405 0 is_stmt 0 discriminator 1
 4281 0124 13F0010F 		tst	r3, #1
 4282 0128 02D1     		bne	.L386
 4283 012a 02E0     		b	.L372
 4284              	.L385:
3403:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 4285              		.loc 1 3403 0 is_stmt 1
 4286 012c 0424     		movs	r4, #4
 4287              	.LVL649:
 4288 012e 00E0     		b	.L372
 4289              	.LVL650:
 4290              	.L386:
3406:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 4291              		.loc 1 3406 0
 4292 0130 0724     		movs	r4, #7
 4293              	.LVL651:
 4294              	.L372:
3411:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
 4295              		.loc 1 3411 0
 4296 0132 A4B9     		cbnz	r4, .L373
3412:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_MODIFIED;
 4297              		.loc 1 3412 0
 4298 0134 17F0080F 		tst	r7, #8
 4299 0138 01D0     		beq	.L374
3413:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
 4300              		.loc 1 3413 0
 4301 013a 47F04007 		orr	r7, r7, #64
 4302              	.LVL652:
 4303              	.L374:
3414:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_ptr = dj.dir;
 4304              		.loc 1 3414 0
 4305 013e 039B     		ldr	r3, [sp, #12]
 4306 0140 DB6A     		ldr	r3, [r3, #44]
 4307 0142 6B62     		str	r3, [r5, #36]
3415:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 4308              		.loc 1 3415 0
 4309 0144 0C9B     		ldr	r3, [sp, #48]
 4310 0146 AB62     		str	r3, [r5, #40]
3417:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!fp->obj.lockid) res = FR_INT_ERR;
 4311              		.loc 1 3417 0
 4312 0148 37F00103 		bics	r3, r7, #1
 4313 014c 14BF     		ite	ne
 4314 014e 0121     		movne	r1, #1
ARM GAS  /tmp/ccTP8DMx.s 			page 190


 4315 0150 0021     		moveq	r1, #0
 4316 0152 04A8     		add	r0, sp, #16
 4317 0154 FFF7FEFF 		bl	inc_lock
 4318              	.LVL653:
 4319 0158 2861     		str	r0, [r5, #16]
3418:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4320              		.loc 1 3418 0
 4321 015a 00B9     		cbnz	r0, .L373
 4322 015c 0224     		movs	r4, #2
 4323              	.LVL654:
 4324              	.L373:
3433:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 4325              		.loc 1 3433 0
 4326 015e 002C     		cmp	r4, #0
 4327 0160 4DD1     		bne	.L366
3445:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
 4328              		.loc 1 3445 0
 4329 0162 039E     		ldr	r6, [sp, #12]
 4330 0164 DDF83080 		ldr	r8, [sp, #48]
 4331 0168 4146     		mov	r1, r8
 4332 016a 3046     		mov	r0, r6
 4333 016c FFF7FEFF 		bl	ld_clust
 4334              	.LVL655:
 4335 0170 A860     		str	r0, [r5, #8]
3446:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4336              		.loc 1 3446 0
 4337 0172 08F11C00 		add	r0, r8, #28
 4338 0176 FFF7FEFF 		bl	ld_dword
 4339              	.LVL656:
 4340 017a E860     		str	r0, [r5, #12]
3449:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4341              		.loc 1 3449 0
 4342 017c 0021     		movs	r1, #0
 4343 017e E962     		str	r1, [r5, #44]
3451:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.id = fs->id;
 4344              		.loc 1 3451 0
 4345 0180 2E60     		str	r6, [r5]
3452:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag = mode;		/* Set file access mode */
 4346              		.loc 1 3452 0
 4347 0182 F388     		ldrh	r3, [r6, #6]
 4348 0184 AB80     		strh	r3, [r5, #4]	@ movhi
3453:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->err = 0;			/* Clear error flag */
 4349              		.loc 1 3453 0
 4350 0186 2F75     		strb	r7, [r5, #20]
3454:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = 0;			/* Invalidate current data sector */
 4351              		.loc 1 3454 0
 4352 0188 6975     		strb	r1, [r5, #21]
3455:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = 0;			/* Set file pointer top of the file */
 4353              		.loc 1 3455 0
 4354 018a 2962     		str	r1, [r5, #32]
3456:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 4355              		.loc 1 3456 0
 4356 018c A961     		str	r1, [r5, #24]
3459:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4357              		.loc 1 3459 0
 4358 018e 05F13008 		add	r8, r5, #48
 4359 0192 4FF40072 		mov	r2, #512
ARM GAS  /tmp/ccTP8DMx.s 			page 191


 4360 0196 4046     		mov	r0, r8
 4361 0198 FFF7FEFF 		bl	mem_set
 4362              	.LVL657:
3461:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
 4363              		.loc 1 3461 0
 4364 019c 17F0200F 		tst	r7, #32
 4365 01a0 2DD0     		beq	.L366
3461:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
 4366              		.loc 1 3461 0 is_stmt 0 discriminator 1
 4367 01a2 EE68     		ldr	r6, [r5, #12]
 4368 01a4 5EB3     		cbz	r6, .L366
3462:Middlewares/Third_Party/FatFs/src/ff.c **** 				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
 4369              		.loc 1 3462 0 is_stmt 1
 4370 01a6 AE61     		str	r6, [r5, #24]
3463:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->obj.sclust;				/* Follow the cluster chain */
 4371              		.loc 1 3463 0
 4372 01a8 039B     		ldr	r3, [sp, #12]
 4373 01aa 5F89     		ldrh	r7, [r3, #10]
 4374              	.LVL658:
 4375 01ac 7F02     		lsls	r7, r7, #9
 4376              	.LVL659:
3464:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
 4377              		.loc 1 3464 0
 4378 01ae A968     		ldr	r1, [r5, #8]
 4379              	.LVL660:
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4380              		.loc 1 3465 0
 4381 01b0 0BE0     		b	.L375
 4382              	.L379:
3466:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1) res = FR_INT_ERR;
 4383              		.loc 1 3466 0
 4384 01b2 2846     		mov	r0, r5
 4385 01b4 FFF7FEFF 		bl	get_fat
 4386              	.LVL661:
 4387 01b8 0146     		mov	r1, r0
 4388              	.LVL662:
3467:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 4389              		.loc 1 3467 0
 4390 01ba 0128     		cmp	r0, #1
 4391 01bc 00D8     		bhi	.L376
 4392 01be 0224     		movs	r4, #2
 4393              	.LVL663:
 4394              	.L376:
3468:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4395              		.loc 1 3468 0
 4396 01c0 B1F1FF3F 		cmp	r1, #-1
 4397 01c4 00D1     		bne	.L377
 4398 01c6 0124     		movs	r4, #1
 4399              	.LVL664:
 4400              	.L377:
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4401              		.loc 1 3465 0 discriminator 2
 4402 01c8 F61B     		subs	r6, r6, r7
 4403              	.LVL665:
 4404              	.L375:
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4405              		.loc 1 3465 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccTP8DMx.s 			page 192


 4406 01ca 0CB9     		cbnz	r4, .L378
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4407              		.loc 1 3465 0 discriminator 3
 4408 01cc BE42     		cmp	r6, r7
 4409 01ce F0D8     		bhi	.L379
 4410              	.L378:
3470:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
 4411              		.loc 1 3470 0 is_stmt 1
 4412 01d0 E961     		str	r1, [r5, #28]
3471:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 4413              		.loc 1 3471 0
 4414 01d2 A4B9     		cbnz	r4, .L366
3471:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 4415              		.loc 1 3471 0 is_stmt 0 discriminator 1
 4416 01d4 C6F30803 		ubfx	r3, r6, #0, #9
 4417 01d8 8BB1     		cbz	r3, .L366
3472:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_INT_ERR;
 4418              		.loc 1 3472 0 is_stmt 1
 4419 01da 039F     		ldr	r7, [sp, #12]
 4420              	.LVL666:
 4421 01dc 3846     		mov	r0, r7
 4422 01de FFF7FEFF 		bl	clust2sect
 4423              	.LVL667:
 4424 01e2 48B1     		cbz	r0, .L390
3475:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 4425              		.loc 1 3475 0
 4426 01e4 00EB5622 		add	r2, r0, r6, lsr #9
 4427 01e8 2A62     		str	r2, [r5, #32]
3477:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4428              		.loc 1 3477 0
 4429 01ea 0123     		movs	r3, #1
 4430 01ec 4146     		mov	r1, r8
 4431 01ee 7878     		ldrb	r0, [r7, #1]	@ zero_extendqisi2
 4432              	.LVL668:
 4433 01f0 FFF7FEFF 		bl	disk_read
 4434              	.LVL669:
 4435 01f4 10B9     		cbnz	r0, .L391
 4436 01f6 02E0     		b	.L366
 4437              	.LVL670:
 4438              	.L390:
3473:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
 4439              		.loc 1 3473 0
 4440 01f8 0224     		movs	r4, #2
 4441              	.LVL671:
 4442 01fa 00E0     		b	.L366
 4443              	.LVL672:
 4444              	.L391:
3477:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4445              		.loc 1 3477 0
 4446 01fc 0124     		movs	r4, #1
 4447              	.LVL673:
 4448              	.L366:
3488:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4449              		.loc 1 3488 0
 4450 01fe 2CB1     		cbz	r4, .L392
3488:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4451              		.loc 1 3488 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccTP8DMx.s 			page 193


 4452 0200 0023     		movs	r3, #0
 4453 0202 2B60     		str	r3, [r5]
3490:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4454              		.loc 1 3490 0 is_stmt 1 discriminator 1
 4455 0204 2046     		mov	r0, r4
 4456 0206 02E0     		b	.L365
 4457              	.LVL674:
 4458              	.L380:
3313:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4459              		.loc 1 3313 0
 4460 0208 0920     		movs	r0, #9
 4461              	.LVL675:
 4462 020a 00E0     		b	.L365
 4463              	.LVL676:
 4464              	.L392:
3490:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4465              		.loc 1 3490 0
 4466 020c 2046     		mov	r0, r4
 4467              	.LVL677:
 4468              	.L365:
3491:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4469              		.loc 1 3491 0
 4470 020e 11B0     		add	sp, sp, #68
 4471              	.LCFI44:
 4472              		.cfi_def_cfa_offset 28
 4473              		@ sp needed
 4474 0210 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4475              		.cfi_endproc
 4476              	.LFE163:
 4478              		.section	.text.f_read,"ax",%progbits
 4479              		.align	2
 4480              		.global	f_read
 4481              		.thumb
 4482              		.thumb_func
 4484              	f_read:
 4485              	.LFB164:
3506:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4486              		.loc 1 3506 0
 4487              		.cfi_startproc
 4488              		@ args = 0, pretend = 0, frame = 16
 4489              		@ frame_needed = 0, uses_anonymous_args = 0
 4490              	.LVL678:
 4491 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4492              	.LCFI45:
 4493              		.cfi_def_cfa_offset 36
 4494              		.cfi_offset 4, -36
 4495              		.cfi_offset 5, -32
 4496              		.cfi_offset 6, -28
 4497              		.cfi_offset 7, -24
 4498              		.cfi_offset 8, -20
 4499              		.cfi_offset 9, -16
 4500              		.cfi_offset 10, -12
 4501              		.cfi_offset 11, -8
 4502              		.cfi_offset 14, -4
 4503 0004 85B0     		sub	sp, sp, #20
 4504              	.LCFI46:
 4505              		.cfi_def_cfa_offset 56
ARM GAS  /tmp/ccTP8DMx.s 			page 194


 4506 0006 0446     		mov	r4, r0
 4507 0008 8846     		mov	r8, r1
 4508 000a 1546     		mov	r5, r2
 4509 000c 1F46     		mov	r7, r3
 4510              	.LVL679:
3515:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);				/* Check validity of the file object */
 4511              		.loc 1 3515 0
 4512 000e 0023     		movs	r3, #0
 4513              	.LVL680:
 4514 0010 3B60     		str	r3, [r7]
3516:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 4515              		.loc 1 3516 0
 4516 0012 0190     		str	r0, [sp, #4]
 4517 0014 03A9     		add	r1, sp, #12
 4518              	.LVL681:
 4519 0016 FFF7FEFF 		bl	validate
 4520              	.LVL682:
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 4521              		.loc 1 3517 0
 4522 001a 0028     		cmp	r0, #0
 4523 001c 40F0AB80 		bne	.L416
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 4524              		.loc 1 3517 0 is_stmt 0 discriminator 2
 4525 0020 607D     		ldrb	r0, [r4, #21]	@ zero_extendqisi2
 4526              	.LVL683:
 4527 0022 0028     		cmp	r0, #0
 4528 0024 40F0A980 		bne	.L395
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 4529              		.loc 1 3518 0 is_stmt 1
 4530 0028 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 4531 002a 13F0010F 		tst	r3, #1
 4532 002e 00F0A380 		beq	.L418
3519:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
 4533              		.loc 1 3519 0
 4534 0032 E668     		ldr	r6, [r4, #12]
 4535 0034 A369     		ldr	r3, [r4, #24]
 4536 0036 F61A     		subs	r6, r6, r3
 4537              	.LVL684:
3520:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4538              		.loc 1 3520 0
 4539 0038 AE42     		cmp	r6, r5
 4540 003a C0F09780 		bcc	.L397
 4541 003e 2E46     		mov	r6, r5
 4542              	.LVL685:
 4543 0040 94E0     		b	.L397
 4544              	.LVL686:
 4545              	.L415:
3524:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
 4546              		.loc 1 3524 0
 4547 0042 A169     		ldr	r1, [r4, #24]
 4548 0044 C1F30803 		ubfx	r3, r1, #0, #9
 4549 0048 002B     		cmp	r3, #0
 4550 004a 78D1     		bne	.L398
3525:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {					/* On the cluster boundary? */
 4551              		.loc 1 3525 0
 4552 004c 039B     		ldr	r3, [sp, #12]
 4553 004e B3F80A90 		ldrh	r9, [r3, #10]
ARM GAS  /tmp/ccTP8DMx.s 			page 195


 4554 0052 09F1FF39 		add	r9, r9, #-1
 4555              	.LVL687:
3526:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
 4556              		.loc 1 3526 0
 4557 0056 19EA5129 		ands	r9, r9, r1, lsr #9
 4558              	.LVL688:
 4559 005a 18D1     		bne	.L399
3527:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;		/* Follow cluster chain from the origin */
 4560              		.loc 1 3527 0
 4561 005c 09B9     		cbnz	r1, .L400
3528:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* Middle or end of the file */
 4562              		.loc 1 3528 0
 4563 005e A068     		ldr	r0, [r4, #8]
 4564              	.LVL689:
 4565 0060 09E0     		b	.L401
 4566              	.LVL690:
 4567              	.L400:
3531:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 4568              		.loc 1 3531 0
 4569 0062 E36A     		ldr	r3, [r4, #44]
 4570 0064 1BB1     		cbz	r3, .L402
3532:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
 4571              		.loc 1 3532 0
 4572 0066 2046     		mov	r0, r4
 4573 0068 FFF7FEFF 		bl	clmt_clust
 4574              	.LVL691:
 4575 006c 03E0     		b	.L401
 4576              	.LVL692:
 4577              	.L402:
3536:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 4578              		.loc 1 3536 0
 4579 006e E169     		ldr	r1, [r4, #28]
 4580 0070 0198     		ldr	r0, [sp, #4]
 4581 0072 FFF7FEFF 		bl	get_fat
 4582              	.LVL693:
 4583              	.L401:
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 4584              		.loc 1 3539 0
 4585 0076 0128     		cmp	r0, #1
 4586 0078 02D8     		bhi	.L403
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 4587              		.loc 1 3539 0 is_stmt 0 discriminator 1
 4588 007a 0220     		movs	r0, #2
 4589              	.LVL694:
 4590 007c 6075     		strb	r0, [r4, #21]
 4591 007e 7CE0     		b	.L395
 4592              	.LVL695:
 4593              	.L403:
3540:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 4594              		.loc 1 3540 0 is_stmt 1
 4595 0080 B0F1FF3F 		cmp	r0, #-1
 4596 0084 02D1     		bne	.L404
3540:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 4597              		.loc 1 3540 0 is_stmt 0 discriminator 1
 4598 0086 0120     		movs	r0, #1
 4599              	.LVL696:
 4600 0088 6075     		strb	r0, [r4, #21]
ARM GAS  /tmp/ccTP8DMx.s 			page 196


 4601 008a 76E0     		b	.L395
 4602              	.LVL697:
 4603              	.L404:
3541:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4604              		.loc 1 3541 0 is_stmt 1
 4605 008c E061     		str	r0, [r4, #28]
 4606              	.LVL698:
 4607              	.L399:
3543:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
 4608              		.loc 1 3543 0
 4609 008e DDF80CB0 		ldr	fp, [sp, #12]
 4610 0092 E169     		ldr	r1, [r4, #28]
 4611 0094 5846     		mov	r0, fp
 4612 0096 FFF7FEFF 		bl	clust2sect
 4613              	.LVL699:
3544:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 4614              		.loc 1 3544 0
 4615 009a 8246     		mov	r10, r0
 4616 009c 10B9     		cbnz	r0, .L405
3544:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 4617              		.loc 1 3544 0 is_stmt 0 discriminator 1
 4618 009e 0220     		movs	r0, #2
 4619              	.LVL700:
 4620 00a0 6075     		strb	r0, [r4, #21]
 4621 00a2 6AE0     		b	.L395
 4622              	.LVL701:
 4623              	.L405:
3545:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btr / SS(fs);					/* When remaining bytes >= sector size, */
 4624              		.loc 1 3545 0 is_stmt 1
 4625 00a4 CA44     		add	r10, r10, r9
 4626              	.LVL702:
3547:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 4627              		.loc 1 3547 0
 4628 00a6 750A     		lsrs	r5, r6, #9
 4629              	.LVL703:
 4630 00a8 25D0     		beq	.L406
3548:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
 4631              		.loc 1 3548 0
 4632 00aa 09EB0503 		add	r3, r9, r5
 4633 00ae BBF80A20 		ldrh	r2, [fp, #10]
 4634 00b2 9342     		cmp	r3, r2
 4635 00b4 01D9     		bls	.L407
3549:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4636              		.loc 1 3549 0
 4637 00b6 C9EB0205 		rsb	r5, r9, r2
 4638              	.LVL704:
 4639              	.L407:
3551:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
 4640              		.loc 1 3551 0
 4641 00ba 2B46     		mov	r3, r5
 4642 00bc 5246     		mov	r2, r10
 4643 00be 4146     		mov	r1, r8
 4644 00c0 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 4645 00c4 FFF7FEFF 		bl	disk_read
 4646              	.LVL705:
 4647 00c8 10B1     		cbz	r0, .L408
3551:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
ARM GAS  /tmp/ccTP8DMx.s 			page 197


 4648              		.loc 1 3551 0 is_stmt 0 discriminator 1
 4649 00ca 0120     		movs	r0, #1
 4650 00cc 6075     		strb	r0, [r4, #21]
 4651 00ce 54E0     		b	.L395
 4652              	.L408:
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
 4653              		.loc 1 3558 0 is_stmt 1
 4654 00d0 94F91430 		ldrsb	r3, [r4, #20]
 4655 00d4 002B     		cmp	r3, #0
 4656 00d6 0CDA     		bge	.L409
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
 4657              		.loc 1 3558 0 is_stmt 0 discriminator 1
 4658 00d8 206A     		ldr	r0, [r4, #32]
 4659 00da CAEB0000 		rsb	r0, r10, r0
 4660 00de 8542     		cmp	r5, r0
 4661 00e0 07D9     		bls	.L409
3559:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4662              		.loc 1 3559 0 is_stmt 1
 4663 00e2 4FF40072 		mov	r2, #512
 4664 00e6 04F13001 		add	r1, r4, #48
 4665 00ea 08EB4020 		add	r0, r8, r0, lsl #9
 4666 00ee FFF7FEFF 		bl	mem_cpy
 4667              	.LVL706:
 4668              	.L409:
3563:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
 4669              		.loc 1 3563 0
 4670 00f2 6D02     		lsls	r5, r5, #9
 4671              	.LVL707:
3564:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4672              		.loc 1 3564 0
 4673 00f4 32E0     		b	.L410
 4674              	.LVL708:
 4675              	.L406:
3567:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 4676              		.loc 1 3567 0
 4677 00f6 226A     		ldr	r2, [r4, #32]
 4678 00f8 9245     		cmp	r10, r2
 4679 00fa 1ED0     		beq	.L411
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 4680              		.loc 1 3569 0
 4681 00fc 94F91430 		ldrsb	r3, [r4, #20]
 4682 0100 002B     		cmp	r3, #0
 4683 0102 0EDA     		bge	.L412
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 4684              		.loc 1 3570 0
 4685 0104 0123     		movs	r3, #1
 4686 0106 04F13001 		add	r1, r4, #48
 4687 010a 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 4688 010e FFF7FEFF 		bl	disk_write
 4689              	.LVL709:
 4690 0112 10B1     		cbz	r0, .L413
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 4691              		.loc 1 3570 0 is_stmt 0 discriminator 1
 4692 0114 0120     		movs	r0, #1
 4693 0116 6075     		strb	r0, [r4, #21]
 4694 0118 2FE0     		b	.L395
 4695              	.L413:
ARM GAS  /tmp/ccTP8DMx.s 			page 198


3571:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4696              		.loc 1 3571 0 is_stmt 1
 4697 011a 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 4698 011c 03F07F03 		and	r3, r3, #127
 4699 0120 2375     		strb	r3, [r4, #20]
 4700              	.L412:
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4701              		.loc 1 3574 0
 4702 0122 0123     		movs	r3, #1
 4703 0124 5246     		mov	r2, r10
 4704 0126 04F13001 		add	r1, r4, #48
 4705 012a 0398     		ldr	r0, [sp, #12]
 4706 012c 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 4707 012e FFF7FEFF 		bl	disk_read
 4708              	.LVL710:
 4709 0132 10B1     		cbz	r0, .L411
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4710              		.loc 1 3574 0 is_stmt 0 discriminator 1
 4711 0134 0120     		movs	r0, #1
 4712 0136 6075     		strb	r0, [r4, #21]
 4713 0138 1FE0     		b	.L395
 4714              	.L411:
3577:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4715              		.loc 1 3577 0 is_stmt 1
 4716 013a C4F820A0 		str	r10, [r4, #32]
 4717              	.LVL711:
 4718              	.L398:
3579:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btr) rcnt = btr;					/* Clip it by btr if needed */
 4719              		.loc 1 3579 0
 4720 013e A369     		ldr	r3, [r4, #24]
 4721 0140 C3F30803 		ubfx	r3, r3, #0, #9
 4722 0144 C3F50075 		rsb	r5, r3, #512
 4723              	.LVL712:
3580:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
 4724              		.loc 1 3580 0
 4725 0148 AE42     		cmp	r6, r5
 4726 014a 00D2     		bcs	.L414
 4727 014c 3546     		mov	r5, r6
 4728              	.LVL713:
 4729              	.L414:
3585:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4730              		.loc 1 3585 0
 4731 014e 04F13001 		add	r1, r4, #48
 4732 0152 2A46     		mov	r2, r5
 4733 0154 1944     		add	r1, r1, r3
 4734 0156 4046     		mov	r0, r8
 4735 0158 FFF7FEFF 		bl	mem_cpy
 4736              	.LVL714:
 4737              	.L410:
3523:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
 4738              		.loc 1 3523 0
 4739 015c A844     		add	r8, r8, r5
 4740              	.LVL715:
 4741 015e A369     		ldr	r3, [r4, #24]
 4742 0160 2B44     		add	r3, r3, r5
 4743 0162 A361     		str	r3, [r4, #24]
 4744 0164 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccTP8DMx.s 			page 199


 4745 0166 2B44     		add	r3, r3, r5
 4746 0168 3B60     		str	r3, [r7]
 4747 016a 761B     		subs	r6, r6, r5
 4748              	.LVL716:
 4749              	.L397:
3522:Middlewares/Third_Party/FatFs/src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
 4750              		.loc 1 3522 0
 4751 016c 002E     		cmp	r6, #0
 4752 016e 7FF468AF 		bne	.L415
3589:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4753              		.loc 1 3589 0
 4754 0172 0020     		movs	r0, #0
 4755 0174 01E0     		b	.L395
 4756              	.LVL717:
 4757              	.L416:
 4758 0176 00E0     		b	.L395
 4759              	.L418:
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 4760              		.loc 1 3518 0
 4761 0178 0720     		movs	r0, #7
 4762              	.LVL718:
 4763              	.L395:
3590:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4764              		.loc 1 3590 0
 4765 017a 05B0     		add	sp, sp, #20
 4766              	.LCFI47:
 4767              		.cfi_def_cfa_offset 36
 4768              		@ sp needed
 4769 017c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4770              		.cfi_endproc
 4771              	.LFE164:
 4773              		.section	.text.f_write,"ax",%progbits
 4774              		.align	2
 4775              		.global	f_write
 4776              		.thumb
 4777              		.thumb_func
 4779              	f_write:
 4780              	.LFB165:
3606:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4781              		.loc 1 3606 0
 4782              		.cfi_startproc
 4783              		@ args = 0, pretend = 0, frame = 16
 4784              		@ frame_needed = 0, uses_anonymous_args = 0
 4785              	.LVL719:
 4786 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4787              	.LCFI48:
 4788              		.cfi_def_cfa_offset 36
 4789              		.cfi_offset 4, -36
 4790              		.cfi_offset 5, -32
 4791              		.cfi_offset 6, -28
 4792              		.cfi_offset 7, -24
 4793              		.cfi_offset 8, -20
 4794              		.cfi_offset 9, -16
 4795              		.cfi_offset 10, -12
 4796              		.cfi_offset 11, -8
 4797              		.cfi_offset 14, -4
 4798 0004 85B0     		sub	sp, sp, #20
ARM GAS  /tmp/ccTP8DMx.s 			page 200


 4799              	.LCFI49:
 4800              		.cfi_def_cfa_offset 56
 4801 0006 0446     		mov	r4, r0
 4802 0008 8846     		mov	r8, r1
 4803 000a 1646     		mov	r6, r2
 4804 000c 1F46     		mov	r7, r3
 4805              	.LVL720:
3614:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
 4806              		.loc 1 3614 0
 4807 000e 0023     		movs	r3, #0
 4808              	.LVL721:
 4809 0010 3B60     		str	r3, [r7]
3615:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 4810              		.loc 1 3615 0
 4811 0012 0190     		str	r0, [sp, #4]
 4812 0014 03A9     		add	r1, sp, #12
 4813              	.LVL722:
 4814 0016 FFF7FEFF 		bl	validate
 4815              	.LVL723:
3616:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 4816              		.loc 1 3616 0
 4817 001a 0028     		cmp	r0, #0
 4818 001c 40F0C680 		bne	.L444
3616:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 4819              		.loc 1 3616 0 is_stmt 0 discriminator 2
 4820 0020 607D     		ldrb	r0, [r4, #21]	@ zero_extendqisi2
 4821              	.LVL724:
 4822 0022 0028     		cmp	r0, #0
 4823 0024 40F0C480 		bne	.L422
3617:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4824              		.loc 1 3617 0 is_stmt 1
 4825 0028 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 4826 002a 13F0020F 		tst	r3, #2
 4827 002e 00F0BE80 		beq	.L446
3620:Middlewares/Third_Party/FatFs/src/ff.c **** 		btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
 4828              		.loc 1 3620 0
 4829 0032 A369     		ldr	r3, [r4, #24]
 4830 0034 F342     		cmn	r3, r6
 4831 0036 C0F0B080 		bcc	.L424
3621:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4832              		.loc 1 3621 0
 4833 003a DE43     		mvns	r6, r3
 4834              	.LVL725:
 4835 003c ADE0     		b	.L424
 4836              	.LVL726:
 4837              	.L443:
3626:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs)) & (fs->csize - 1);	/* Sector offset in the cluster */
 4838              		.loc 1 3626 0
 4839 003e A169     		ldr	r1, [r4, #24]
 4840 0040 C1F30803 		ubfx	r3, r1, #0, #9
 4841 0044 002B     		cmp	r3, #0
 4842 0046 40F08880 		bne	.L425
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {				/* On the cluster boundary? */
 4843              		.loc 1 3627 0
 4844 004a 039B     		ldr	r3, [sp, #12]
 4845 004c B3F80A90 		ldrh	r9, [r3, #10]
 4846 0050 09F1FF39 		add	r9, r9, #-1
ARM GAS  /tmp/ccTP8DMx.s 			page 201


 4847              	.LVL727:
3628:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
 4848              		.loc 1 3628 0
 4849 0054 19EA5129 		ands	r9, r9, r1, lsr #9
 4850              	.LVL728:
 4851 0058 22D1     		bne	.L426
3629:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;	/* Follow from the origin */
 4852              		.loc 1 3629 0
 4853 005a 29B9     		cbnz	r1, .L427
3630:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) {		/* If no cluster is allocated, */
 4854              		.loc 1 3630 0
 4855 005c A068     		ldr	r0, [r4, #8]
 4856              	.LVL729:
3631:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, 0);	/* create a new cluster chain */
 4857              		.loc 1 3631 0
 4858 005e 68B9     		cbnz	r0, .L428
3632:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 4859              		.loc 1 3632 0
 4860 0060 0198     		ldr	r0, [sp, #4]
 4861              	.LVL730:
 4862 0062 FFF7FEFF 		bl	create_chain
 4863              	.LVL731:
 4864 0066 09E0     		b	.L428
 4865              	.LVL732:
 4866              	.L427:
3636:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 4867              		.loc 1 3636 0
 4868 0068 E36A     		ldr	r3, [r4, #44]
 4869 006a 1BB1     		cbz	r3, .L429
3637:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
 4870              		.loc 1 3637 0
 4871 006c 2046     		mov	r0, r4
 4872 006e FFF7FEFF 		bl	clmt_clust
 4873              	.LVL733:
 4874 0072 03E0     		b	.L428
 4875              	.LVL734:
 4876              	.L429:
3641:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 4877              		.loc 1 3641 0
 4878 0074 E169     		ldr	r1, [r4, #28]
 4879 0076 0198     		ldr	r0, [sp, #4]
 4880 0078 FFF7FEFF 		bl	create_chain
 4881              	.LVL735:
 4882              	.L428:
3644:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
 4883              		.loc 1 3644 0
 4884 007c 0028     		cmp	r0, #0
 4885 007e 00F08F80 		beq	.L430
3645:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 4886              		.loc 1 3645 0
 4887 0082 0128     		cmp	r0, #1
 4888 0084 02D1     		bne	.L431
3645:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 4889              		.loc 1 3645 0 is_stmt 0 discriminator 1
 4890 0086 0220     		movs	r0, #2
 4891              	.LVL736:
 4892 0088 6075     		strb	r0, [r4, #21]
ARM GAS  /tmp/ccTP8DMx.s 			page 202


 4893 008a 91E0     		b	.L422
 4894              	.LVL737:
 4895              	.L431:
3646:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 4896              		.loc 1 3646 0 is_stmt 1
 4897 008c B0F1FF3F 		cmp	r0, #-1
 4898 0090 02D1     		bne	.L432
3646:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 4899              		.loc 1 3646 0 is_stmt 0 discriminator 1
 4900 0092 0120     		movs	r0, #1
 4901              	.LVL738:
 4902 0094 6075     		strb	r0, [r4, #21]
 4903 0096 8BE0     		b	.L422
 4904              	.LVL739:
 4905              	.L432:
3647:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
 4906              		.loc 1 3647 0 is_stmt 1
 4907 0098 E061     		str	r0, [r4, #28]
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4908              		.loc 1 3648 0
 4909 009a A368     		ldr	r3, [r4, #8]
 4910 009c 03B9     		cbnz	r3, .L426
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4911              		.loc 1 3648 0 is_stmt 0 discriminator 1
 4912 009e A060     		str	r0, [r4, #8]
 4913              	.LVL740:
 4914              	.L426:
3653:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 4915              		.loc 1 3653 0 is_stmt 1
 4916 00a0 94F91430 		ldrsb	r3, [r4, #20]
 4917 00a4 002B     		cmp	r3, #0
 4918 00a6 0FDA     		bge	.L433
3654:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 4919              		.loc 1 3654 0
 4920 00a8 0123     		movs	r3, #1
 4921 00aa 226A     		ldr	r2, [r4, #32]
 4922 00ac 04F13001 		add	r1, r4, #48
 4923 00b0 0398     		ldr	r0, [sp, #12]
 4924 00b2 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 4925 00b4 FFF7FEFF 		bl	disk_write
 4926              	.LVL741:
 4927 00b8 10B1     		cbz	r0, .L434
3654:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 4928              		.loc 1 3654 0 is_stmt 0 discriminator 1
 4929 00ba 0120     		movs	r0, #1
 4930 00bc 6075     		strb	r0, [r4, #21]
 4931 00be 77E0     		b	.L422
 4932              	.L434:
3655:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4933              		.loc 1 3655 0 is_stmt 1
 4934 00c0 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 4935 00c2 03F07F03 		and	r3, r3, #127
 4936 00c6 2375     		strb	r3, [r4, #20]
 4937              	.L433:
3658:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
 4938              		.loc 1 3658 0
 4939 00c8 DDF80CB0 		ldr	fp, [sp, #12]
ARM GAS  /tmp/ccTP8DMx.s 			page 203


 4940 00cc E169     		ldr	r1, [r4, #28]
 4941 00ce 5846     		mov	r0, fp
 4942 00d0 FFF7FEFF 		bl	clust2sect
 4943              	.LVL742:
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 4944              		.loc 1 3659 0
 4945 00d4 8246     		mov	r10, r0
 4946 00d6 10B9     		cbnz	r0, .L435
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 4947              		.loc 1 3659 0 is_stmt 0 discriminator 1
 4948 00d8 0220     		movs	r0, #2
 4949              	.LVL743:
 4950 00da 6075     		strb	r0, [r4, #21]
 4951 00dc 68E0     		b	.L422
 4952              	.LVL744:
 4953              	.L435:
3660:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
 4954              		.loc 1 3660 0 is_stmt 1
 4955 00de CA44     		add	r10, r10, r9
 4956              	.LVL745:
3662:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 4957              		.loc 1 3662 0
 4958 00e0 750A     		lsrs	r5, r6, #9
 4959              	.LVL746:
 4960 00e2 25D0     		beq	.L436
3663:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
 4961              		.loc 1 3663 0
 4962 00e4 09EB0503 		add	r3, r9, r5
 4963 00e8 BBF80A20 		ldrh	r2, [fp, #10]
 4964 00ec 9342     		cmp	r3, r2
 4965 00ee 01D9     		bls	.L437
3664:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4966              		.loc 1 3664 0
 4967 00f0 C9EB0205 		rsb	r5, r9, r2
 4968              	.LVL747:
 4969              	.L437:
3666:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
 4970              		.loc 1 3666 0
 4971 00f4 2B46     		mov	r3, r5
 4972 00f6 5246     		mov	r2, r10
 4973 00f8 4146     		mov	r1, r8
 4974 00fa 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 4975 00fe FFF7FEFF 		bl	disk_write
 4976              	.LVL748:
 4977 0102 10B1     		cbz	r0, .L438
3666:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
 4978              		.loc 1 3666 0 is_stmt 0 discriminator 1
 4979 0104 0120     		movs	r0, #1
 4980 0106 6075     		strb	r0, [r4, #21]
 4981 0108 52E0     		b	.L422
 4982              	.L438:
3674:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->buf, wbuff + ((fp->sect - sect) * SS(fs)), SS(fs));
 4983              		.loc 1 3674 0 is_stmt 1
 4984 010a 216A     		ldr	r1, [r4, #32]
 4985 010c CAEB0101 		rsb	r1, r10, r1
 4986 0110 8D42     		cmp	r5, r1
 4987 0112 0BD9     		bls	.L439
ARM GAS  /tmp/ccTP8DMx.s 			page 204


3675:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 4988              		.loc 1 3675 0
 4989 0114 4FF40072 		mov	r2, #512
 4990 0118 08EB4121 		add	r1, r8, r1, lsl #9
 4991 011c 04F13000 		add	r0, r4, #48
 4992 0120 FFF7FEFF 		bl	mem_cpy
 4993              	.LVL749:
3676:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4994              		.loc 1 3676 0
 4995 0124 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 4996 0126 03F07F03 		and	r3, r3, #127
 4997 012a 2375     		strb	r3, [r4, #20]
 4998              	.L439:
3680:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
 4999              		.loc 1 3680 0
 5000 012c 6D02     		lsls	r5, r5, #9
 5001              	.LVL750:
3681:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5002              		.loc 1 3681 0
 5003 012e 27E0     		b	.L440
 5004              	.LVL751:
 5005              	.L436:
3689:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr < fp->obj.objsize &&
 5006              		.loc 1 3689 0
 5007 0130 236A     		ldr	r3, [r4, #32]
 5008 0132 9A45     		cmp	r10, r3
 5009 0134 0FD0     		beq	.L441
3690:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
 5010              		.loc 1 3690 0 discriminator 1
 5011 0136 A269     		ldr	r2, [r4, #24]
 5012 0138 E368     		ldr	r3, [r4, #12]
3689:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr < fp->obj.objsize &&
 5013              		.loc 1 3689 0 discriminator 1
 5014 013a 9A42     		cmp	r2, r3
 5015 013c 0BD2     		bcs	.L441
3691:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fs, FR_DISK_ERR);
 5016              		.loc 1 3691 0
 5017 013e 0123     		movs	r3, #1
 5018 0140 5246     		mov	r2, r10
 5019 0142 04F13001 		add	r1, r4, #48
 5020 0146 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 5021 014a FFF7FEFF 		bl	disk_read
 5022              	.LVL752:
3690:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
 5023              		.loc 1 3690 0
 5024 014e 10B1     		cbz	r0, .L441
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5025              		.loc 1 3692 0
 5026 0150 0120     		movs	r0, #1
 5027 0152 6075     		strb	r0, [r4, #21]
 5028 0154 2CE0     		b	.L422
 5029              	.L441:
3695:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5030              		.loc 1 3695 0
 5031 0156 C4F820A0 		str	r10, [r4, #32]
 5032              	.LVL753:
 5033              	.L425:
ARM GAS  /tmp/ccTP8DMx.s 			page 205


3697:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
 5034              		.loc 1 3697 0
 5035 015a A369     		ldr	r3, [r4, #24]
 5036 015c C3F30803 		ubfx	r3, r3, #0, #9
 5037 0160 C3F50075 		rsb	r5, r3, #512
 5038              	.LVL754:
3698:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
 5039              		.loc 1 3698 0
 5040 0164 AE42     		cmp	r6, r5
 5041 0166 00D2     		bcs	.L442
 5042 0168 3546     		mov	r5, r6
 5043              	.LVL755:
 5044              	.L442:
3704:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_DIRTY;
 5045              		.loc 1 3704 0
 5046 016a 04F13000 		add	r0, r4, #48
 5047 016e 2A46     		mov	r2, r5
 5048 0170 4146     		mov	r1, r8
 5049 0172 1844     		add	r0, r0, r3
 5050 0174 FFF7FEFF 		bl	mem_cpy
 5051              	.LVL756:
3705:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5052              		.loc 1 3705 0
 5053 0178 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5054 017a 63F07F03 		orn	r3, r3, #127
 5055 017e 2375     		strb	r3, [r4, #20]
 5056              	.L440:
3625:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 5057              		.loc 1 3625 0
 5058 0180 A844     		add	r8, r8, r5
 5059              	.LVL757:
 5060 0182 A369     		ldr	r3, [r4, #24]
 5061 0184 2B44     		add	r3, r3, r5
 5062 0186 A361     		str	r3, [r4, #24]
 5063 0188 E268     		ldr	r2, [r4, #12]
 5064 018a 9342     		cmp	r3, r2
 5065 018c 38BF     		it	cc
 5066 018e 1346     		movcc	r3, r2
 5067 0190 E360     		str	r3, [r4, #12]
 5068 0192 3B68     		ldr	r3, [r7]
 5069 0194 2B44     		add	r3, r3, r5
 5070 0196 3B60     		str	r3, [r7]
 5071 0198 761B     		subs	r6, r6, r5
 5072              	.LVL758:
 5073              	.L424:
3624:Middlewares/Third_Party/FatFs/src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->
 5074              		.loc 1 3624 0
 5075 019a 002E     		cmp	r6, #0
 5076 019c 7FF44FAF 		bne	.L443
 5077              	.L430:
3709:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5078              		.loc 1 3709 0
 5079 01a0 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5080 01a2 43F04003 		orr	r3, r3, #64
 5081 01a6 2375     		strb	r3, [r4, #20]
3711:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5082              		.loc 1 3711 0
ARM GAS  /tmp/ccTP8DMx.s 			page 206


 5083 01a8 0020     		movs	r0, #0
 5084 01aa 01E0     		b	.L422
 5085              	.LVL759:
 5086              	.L444:
 5087 01ac 00E0     		b	.L422
 5088              	.L446:
3617:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5089              		.loc 1 3617 0
 5090 01ae 0720     		movs	r0, #7
 5091              	.LVL760:
 5092              	.L422:
3712:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5093              		.loc 1 3712 0
 5094 01b0 05B0     		add	sp, sp, #20
 5095              	.LCFI50:
 5096              		.cfi_def_cfa_offset 36
 5097              		@ sp needed
 5098 01b2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5099              		.cfi_endproc
 5100              	.LFE165:
 5102 01b6 00BF     		.section	.text.putc_bfd,"ax",%progbits
 5103              		.align	2
 5104              		.thumb
 5105              		.thumb_func
 5107              	putc_bfd:
 5108              	.LFB180:
5910:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bw;
 5109              		.loc 1 5910 0
 5110              		.cfi_startproc
 5111              		@ args = 0, pretend = 0, frame = 8
 5112              		@ frame_needed = 0, uses_anonymous_args = 0
 5113              	.LVL761:
 5114 0000 70B5     		push	{r4, r5, r6, lr}
 5115              	.LCFI51:
 5116              		.cfi_def_cfa_offset 16
 5117              		.cfi_offset 4, -16
 5118              		.cfi_offset 5, -12
 5119              		.cfi_offset 6, -8
 5120              		.cfi_offset 14, -4
 5121 0002 82B0     		sub	sp, sp, #8
 5122              	.LCFI52:
 5123              		.cfi_def_cfa_offset 24
 5124 0004 0446     		mov	r4, r0
 5125 0006 0E46     		mov	r6, r1
5915:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(pb, '\r');
 5126              		.loc 1 5915 0
 5127 0008 0A29     		cmp	r1, #10
 5128 000a 02D1     		bne	.L450
5916:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5129              		.loc 1 5916 0
 5130 000c 0D21     		movs	r1, #13
 5131              	.LVL762:
 5132 000e FFF7F7FF 		bl	putc_bfd
 5133              	.LVL763:
 5134              	.L450:
5919:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i < 0) return;
 5135              		.loc 1 5919 0
ARM GAS  /tmp/ccTP8DMx.s 			page 207


 5136 0012 6368     		ldr	r3, [r4, #4]
 5137              	.LVL764:
5920:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5138              		.loc 1 5920 0
 5139 0014 002B     		cmp	r3, #0
 5140 0016 16DB     		blt	.L449
5949:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5141              		.loc 1 5949 0
 5142 0018 5D1C     		adds	r5, r3, #1
 5143              	.LVL765:
 5144 001a 2344     		add	r3, r3, r4
 5145 001c 1E73     		strb	r6, [r3, #12]
5952:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_write(pb->fp, pb->buf, (UINT)i, &bw);
 5146              		.loc 1 5952 0
 5147 001e 3C2D     		cmp	r5, #60
 5148 0020 0DDD     		ble	.L452
5953:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
 5149              		.loc 1 5953 0
 5150 0022 01AB     		add	r3, sp, #4
 5151 0024 2A46     		mov	r2, r5
 5152 0026 04F10C01 		add	r1, r4, #12
 5153 002a 2068     		ldr	r0, [r4]
 5154 002c FFF7FEFF 		bl	f_write
 5155              	.LVL766:
5954:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5156              		.loc 1 5954 0
 5157 0030 019B     		ldr	r3, [sp, #4]
 5158 0032 9D42     		cmp	r5, r3
 5159 0034 01D1     		bne	.L454
 5160 0036 0025     		movs	r5, #0
 5161              	.LVL767:
 5162 0038 01E0     		b	.L452
 5163              	.LVL768:
 5164              	.L454:
 5165 003a 4FF0FF35 		mov	r5, #-1
 5166              	.LVL769:
 5167              	.L452:
5956:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr++;
 5168              		.loc 1 5956 0
 5169 003e 6560     		str	r5, [r4, #4]
5957:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5170              		.loc 1 5957 0
 5171 0040 A368     		ldr	r3, [r4, #8]
 5172 0042 0133     		adds	r3, r3, #1
 5173 0044 A360     		str	r3, [r4, #8]
 5174              	.LVL770:
 5175              	.L449:
5958:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5176              		.loc 1 5958 0
 5177 0046 02B0     		add	sp, sp, #8
 5178              	.LCFI53:
 5179              		.cfi_def_cfa_offset 16
 5180              		@ sp needed
 5181 0048 70BD     		pop	{r4, r5, r6, pc}
 5182              		.cfi_endproc
 5183              	.LFE180:
 5185 004a 00BF     		.section	.text.putc_flush,"ax",%progbits
ARM GAS  /tmp/ccTP8DMx.s 			page 208


 5186              		.align	2
 5187              		.thumb
 5188              		.thumb_func
 5190              	putc_flush:
 5191              	.LFB181:
5965:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
 5192              		.loc 1 5965 0
 5193              		.cfi_startproc
 5194              		@ args = 0, pretend = 0, frame = 8
 5195              		@ frame_needed = 0, uses_anonymous_args = 0
 5196              	.LVL771:
5968:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb->fp, pb->buf, (UINT)pb->idx, &nw) == FR_OK
 5197              		.loc 1 5968 0
 5198 0000 4268     		ldr	r2, [r0, #4]
 5199 0002 002A     		cmp	r2, #0
 5200 0004 0FDB     		blt	.L458
5965:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
 5201              		.loc 1 5965 0
 5202 0006 10B5     		push	{r4, lr}
 5203              	.LCFI54:
 5204              		.cfi_def_cfa_offset 8
 5205              		.cfi_offset 4, -8
 5206              		.cfi_offset 14, -4
 5207 0008 82B0     		sub	sp, sp, #8
 5208              	.LCFI55:
 5209              		.cfi_def_cfa_offset 16
 5210 000a 0446     		mov	r4, r0
5969:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb->idx == nw) return pb->nchr;
 5211              		.loc 1 5969 0
 5212 000c 01AB     		add	r3, sp, #4
 5213 000e 00F10C01 		add	r1, r0, #12
 5214 0012 0068     		ldr	r0, [r0]
 5215              	.LVL772:
 5216 0014 FFF7FEFF 		bl	f_write
 5217              	.LVL773:
 5218 0018 40B9     		cbnz	r0, .L459
5970:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 5219              		.loc 1 5970 0
 5220 001a 6268     		ldr	r2, [r4, #4]
 5221 001c 019B     		ldr	r3, [sp, #4]
 5222 001e 9A42     		cmp	r2, r3
 5223 0020 07D1     		bne	.L460
5970:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 5224              		.loc 1 5970 0 is_stmt 0 discriminator 1
 5225 0022 A068     		ldr	r0, [r4, #8]
 5226 0024 07E0     		b	.L457
 5227              	.LVL774:
 5228              	.L458:
 5229              	.LCFI56:
 5230              		.cfi_def_cfa_offset 0
 5231              		.cfi_restore 4
 5232              		.cfi_restore 14
5971:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5233              		.loc 1 5971 0 is_stmt 1
 5234 0026 4FF0FF30 		mov	r0, #-1
 5235              	.LVL775:
5972:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccTP8DMx.s 			page 209


 5236              		.loc 1 5972 0
 5237 002a 7047     		bx	lr
 5238              	.LVL776:
 5239              	.L459:
 5240              	.LCFI57:
 5241              		.cfi_def_cfa_offset 16
 5242              		.cfi_offset 4, -8
 5243              		.cfi_offset 14, -4
5971:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5244              		.loc 1 5971 0
 5245 002c 4FF0FF30 		mov	r0, #-1
 5246 0030 01E0     		b	.L457
 5247              	.L460:
 5248 0032 4FF0FF30 		mov	r0, #-1
 5249              	.L457:
5972:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5250              		.loc 1 5972 0
 5251 0036 02B0     		add	sp, sp, #8
 5252              	.LCFI58:
 5253              		.cfi_def_cfa_offset 8
 5254              		@ sp needed
 5255 0038 10BD     		pop	{r4, pc}
 5256              		.cfi_endproc
 5257              	.LFE181:
 5259 003a 00BF     		.section	.text.f_sync,"ax",%progbits
 5260              		.align	2
 5261              		.global	f_sync
 5262              		.thumb
 5263              		.thumb_func
 5265              	f_sync:
 5266              	.LFB166:
3724:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5267              		.loc 1 3724 0
 5268              		.cfi_startproc
 5269              		@ args = 0, pretend = 0, frame = 8
 5270              		@ frame_needed = 0, uses_anonymous_args = 0
 5271              	.LVL777:
 5272 0000 70B5     		push	{r4, r5, r6, lr}
 5273              	.LCFI59:
 5274              		.cfi_def_cfa_offset 16
 5275              		.cfi_offset 4, -16
 5276              		.cfi_offset 5, -12
 5277              		.cfi_offset 6, -8
 5278              		.cfi_offset 14, -4
 5279 0002 82B0     		sub	sp, sp, #8
 5280              	.LCFI60:
 5281              		.cfi_def_cfa_offset 24
 5282 0004 0446     		mov	r4, r0
3734:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 5283              		.loc 1 3734 0
 5284 0006 01A9     		add	r1, sp, #4
 5285 0008 FFF7FEFF 		bl	validate
 5286              	.LVL778:
3735:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
 5287              		.loc 1 3735 0
 5288 000c 0028     		cmp	r0, #0
 5289 000e 3FD1     		bne	.L465
ARM GAS  /tmp/ccTP8DMx.s 			page 210


3736:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5290              		.loc 1 3736 0
 5291 0010 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 5292 0012 12F0400F 		tst	r2, #64
 5293 0016 3CD0     		beq	.L466
3738:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
 5294              		.loc 1 3738 0
 5295 0018 12F0800F 		tst	r2, #128
 5296 001c 0CD0     		beq	.L464
3739:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5297              		.loc 1 3739 0
 5298 001e 0123     		movs	r3, #1
 5299 0020 226A     		ldr	r2, [r4, #32]
 5300 0022 04F13001 		add	r1, r4, #48
 5301 0026 0198     		ldr	r0, [sp, #4]
 5302              	.LVL779:
 5303 0028 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5304 002a FFF7FEFF 		bl	disk_write
 5305              	.LVL780:
 5306 002e 88BB     		cbnz	r0, .L467
3740:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5307              		.loc 1 3740 0
 5308 0030 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5309 0032 03F07F03 		and	r3, r3, #127
 5310 0036 2375     		strb	r3, [r4, #20]
 5311              	.L464:
3744:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 5312              		.loc 1 3744 0
 5313 0038 FFF7FEFF 		bl	get_fattime
 5314              	.LVL781:
 5315 003c 0646     		mov	r6, r0
 5316              	.LVL782:
3774:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
 5317              		.loc 1 3774 0
 5318 003e 616A     		ldr	r1, [r4, #36]
 5319 0040 0198     		ldr	r0, [sp, #4]
 5320              	.LVL783:
 5321 0042 FFF7FEFF 		bl	move_window
 5322              	.LVL784:
3775:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir = fp->dir_ptr;
 5323              		.loc 1 3775 0
 5324 0046 38BB     		cbnz	r0, .L468
3776:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] |= AM_ARC;						/* Set archive bit */
 5325              		.loc 1 3776 0
 5326 0048 A56A     		ldr	r5, [r4, #40]
 5327              	.LVL785:
3777:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation info  */
 5328              		.loc 1 3777 0
 5329 004a EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 5330 004c 43F02003 		orr	r3, r3, #32
 5331 0050 EB72     		strb	r3, [r5, #11]
3778:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
 5332              		.loc 1 3778 0
 5333 0052 A268     		ldr	r2, [r4, #8]
 5334 0054 2946     		mov	r1, r5
 5335 0056 2068     		ldr	r0, [r4]
 5336              	.LVL786:
ARM GAS  /tmp/ccTP8DMx.s 			page 211


 5337 0058 FFF7FEFF 		bl	st_clust
 5338              	.LVL787:
3779:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
 5339              		.loc 1 3779 0
 5340 005c E168     		ldr	r1, [r4, #12]
 5341 005e 05F11C00 		add	r0, r5, #28
 5342 0062 FFF7FEFF 		bl	st_dword
 5343              	.LVL788:
3780:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_word(dir + DIR_LstAccDate, 0);
 5344              		.loc 1 3780 0
 5345 0066 3146     		mov	r1, r6
 5346 0068 05F11600 		add	r0, r5, #22
 5347 006c FFF7FEFF 		bl	st_dword
 5348              	.LVL789:
3781:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 5349              		.loc 1 3781 0
 5350 0070 0021     		movs	r1, #0
 5351 0072 05F11200 		add	r0, r5, #18
 5352 0076 FFF7FEFF 		bl	st_word
 5353              	.LVL790:
3782:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);					/* Restore it to the directory */
 5354              		.loc 1 3782 0
 5355 007a 0122     		movs	r2, #1
 5356 007c 019B     		ldr	r3, [sp, #4]
 5357 007e DA70     		strb	r2, [r3, #3]
3783:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_MODIFIED;
 5358              		.loc 1 3783 0
 5359 0080 0198     		ldr	r0, [sp, #4]
 5360 0082 FFF7FEFF 		bl	sync_fs
 5361              	.LVL791:
3784:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5362              		.loc 1 3784 0
 5363 0086 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5364 0088 23F04003 		bic	r3, r3, #64
 5365 008c 2375     		strb	r3, [r4, #20]
 5366 008e 03E0     		b	.L463
 5367              	.LVL792:
 5368              	.L465:
 5369 0090 02E0     		b	.L463
 5370              	.L466:
 5371 0092 01E0     		b	.L463
 5372              	.LVL793:
 5373              	.L467:
3739:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5374              		.loc 1 3739 0
 5375 0094 0120     		movs	r0, #1
 5376 0096 FFE7     		b	.L463
 5377              	.LVL794:
 5378              	.L468:
 5379              	.L463:
3791:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5380              		.loc 1 3791 0
 5381 0098 02B0     		add	sp, sp, #8
 5382              	.LCFI61:
 5383              		.cfi_def_cfa_offset 16
 5384              		@ sp needed
 5385 009a 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccTP8DMx.s 			page 212


 5386              		.cfi_endproc
 5387              	.LFE166:
 5389              		.section	.text.f_close,"ax",%progbits
 5390              		.align	2
 5391              		.global	f_close
 5392              		.thumb
 5393              		.thumb_func
 5395              	f_close:
 5396              	.LFB167:
3805:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5397              		.loc 1 3805 0
 5398              		.cfi_startproc
 5399              		@ args = 0, pretend = 0, frame = 8
 5400              		@ frame_needed = 0, uses_anonymous_args = 0
 5401              	.LVL795:
 5402 0000 10B5     		push	{r4, lr}
 5403              	.LCFI62:
 5404              		.cfi_def_cfa_offset 8
 5405              		.cfi_offset 4, -8
 5406              		.cfi_offset 14, -4
 5407 0002 82B0     		sub	sp, sp, #8
 5408              	.LCFI63:
 5409              		.cfi_def_cfa_offset 16
 5410 0004 0446     		mov	r4, r0
3810:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
 5411              		.loc 1 3810 0
 5412 0006 FFF7FEFF 		bl	f_sync
 5413              	.LVL796:
3811:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5414              		.loc 1 3811 0
 5415 000a 0346     		mov	r3, r0
 5416 000c 60B9     		cbnz	r0, .L471
3814:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 5417              		.loc 1 3814 0
 5418 000e 01A9     		add	r1, sp, #4
 5419 0010 2046     		mov	r0, r4
 5420              	.LVL797:
 5421 0012 FFF7FEFF 		bl	validate
 5422              	.LVL798:
3815:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 5423              		.loc 1 3815 0
 5424 0016 0346     		mov	r3, r0
 5425 0018 30B9     		cbnz	r0, .L471
3817:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)
 5426              		.loc 1 3817 0
 5427 001a 2069     		ldr	r0, [r4, #16]
 5428              	.LVL799:
 5429 001c FFF7FEFF 		bl	dec_lock
 5430              	.LVL800:
3818:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5431              		.loc 1 3818 0
 5432 0020 0346     		mov	r3, r0
 5433 0022 08B9     		cbnz	r0, .L471
3821:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5434              		.loc 1 3821 0
 5435 0024 0022     		movs	r2, #0
 5436 0026 2260     		str	r2, [r4]
ARM GAS  /tmp/ccTP8DMx.s 			page 213


 5437              	.L471:
 5438              	.LVL801:
3829:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5439              		.loc 1 3829 0
 5440 0028 1846     		mov	r0, r3
 5441 002a 02B0     		add	sp, sp, #8
 5442              	.LCFI64:
 5443              		.cfi_def_cfa_offset 8
 5444              		@ sp needed
 5445 002c 10BD     		pop	{r4, pc}
 5446              		.cfi_endproc
 5447              	.LFE167:
 5449 002e 00BF     		.section	.text.f_lseek,"ax",%progbits
 5450              		.align	2
 5451              		.global	f_lseek
 5452              		.thumb
 5453              		.thumb_func
 5455              	f_lseek:
 5456              	.LFB168:
3994:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5457              		.loc 1 3994 0
 5458              		.cfi_startproc
 5459              		@ args = 0, pretend = 0, frame = 16
 5460              		@ frame_needed = 0, uses_anonymous_args = 0
 5461              	.LVL802:
 5462 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5463              	.LCFI65:
 5464              		.cfi_def_cfa_offset 36
 5465              		.cfi_offset 4, -36
 5466              		.cfi_offset 5, -32
 5467              		.cfi_offset 6, -28
 5468              		.cfi_offset 7, -24
 5469              		.cfi_offset 8, -20
 5470              		.cfi_offset 9, -16
 5471              		.cfi_offset 10, -12
 5472              		.cfi_offset 11, -8
 5473              		.cfi_offset 14, -4
 5474 0004 85B0     		sub	sp, sp, #20
 5475              	.LCFI66:
 5476              		.cfi_def_cfa_offset 56
 5477 0006 0446     		mov	r4, r0
 5478 0008 0E46     		mov	r6, r1
4003:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) res = (FRESULT)fp->err;
 5479              		.loc 1 4003 0
 5480 000a 8046     		mov	r8, r0
 5481 000c 03A9     		add	r1, sp, #12
 5482              	.LVL803:
 5483 000e FFF7FEFF 		bl	validate
 5484              	.LVL804:
4004:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
 5485              		.loc 1 4004 0
 5486 0012 0546     		mov	r5, r0
 5487 0014 00B9     		cbnz	r0, .L474
4004:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
 5488              		.loc 1 4004 0 is_stmt 0 discriminator 1
 5489 0016 657D     		ldrb	r5, [r4, #21]	@ zero_extendqisi2
 5490              	.LVL805:
ARM GAS  /tmp/ccTP8DMx.s 			page 214


 5491              	.L474:
4010:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5492              		.loc 1 4010 0 is_stmt 1
 5493 0018 002D     		cmp	r5, #0
 5494 001a 40F03B81 		bne	.L509
4013:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
 5495              		.loc 1 4013 0
 5496 001e E36A     		ldr	r3, [r4, #44]
 5497 0020 002B     		cmp	r3, #0
 5498 0022 00F09180 		beq	.L476
4014:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fp->cltbl;
 5499              		.loc 1 4014 0
 5500 0026 B6F1FF3F 		cmp	r6, #-1
 5501 002a 41D1     		bne	.L477
 5502              	.LVL806:
4016:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 5503              		.loc 1 4016 0
 5504 002c 1A1D     		adds	r2, r3, #4
 5505 002e 0192     		str	r2, [sp, #4]
 5506              	.LVL807:
 5507 0030 D3F800B0 		ldr	fp, [r3]
 5508              	.LVL808:
4017:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl) {
 5509              		.loc 1 4017 0
 5510 0034 D4F808A0 		ldr	r10, [r4, #8]
 5511              	.LVL809:
4018:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
 5512              		.loc 1 4018 0
 5513 0038 BAF1000F 		cmp	r10, #0
 5514 003c 2BD0     		beq	.L510
 5515 003e 4FF00209 		mov	r9, #2
 5516 0042 00E0     		b	.L483
 5517              	.LVL810:
 5518              	.L511:
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 5519              		.loc 1 4024 0
 5520 0044 8246     		mov	r10, r0
 5521              	.LVL811:
 5522              	.L483:
4021:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
 5523              		.loc 1 4021 0
 5524 0046 09F10209 		add	r9, r9, #2
 5525              	.LVL812:
 5526 004a 5646     		mov	r6, r10
 5527 004c 0027     		movs	r7, #0
 5528              	.LVL813:
 5529              	.L481:
4023:Middlewares/Third_Party/FatFs/src/ff.c **** 						cl = get_fat(&fp->obj, cl);
 5530              		.loc 1 4023 0
 5531 004e 0137     		adds	r7, r7, #1
 5532              	.LVL814:
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 5533              		.loc 1 4024 0
 5534 0050 3146     		mov	r1, r6
 5535 0052 4046     		mov	r0, r8
 5536 0054 FFF7FEFF 		bl	get_fat
 5537              	.LVL815:
ARM GAS  /tmp/ccTP8DMx.s 			page 215


4025:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5538              		.loc 1 4025 0
 5539 0058 0128     		cmp	r0, #1
 5540 005a 03D8     		bhi	.L479
4025:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5541              		.loc 1 4025 0 is_stmt 0 discriminator 1
 5542 005c 0225     		movs	r5, #2
 5543              	.LVL816:
 5544 005e 6575     		strb	r5, [r4, #21]
 5545 0060 2846     		mov	r0, r5
 5546              	.LVL817:
 5547 0062 24E1     		b	.L475
 5548              	.LVL818:
 5549              	.L479:
4026:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
 5550              		.loc 1 4026 0 is_stmt 1
 5551 0064 B0F1FF3F 		cmp	r0, #-1
 5552 0068 03D1     		bne	.L480
4026:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
 5553              		.loc 1 4026 0 is_stmt 0 discriminator 1
 5554 006a 0125     		movs	r5, #1
 5555              	.LVL819:
 5556 006c 6575     		strb	r5, [r4, #21]
 5557 006e 2846     		mov	r0, r5
 5558              	.LVL820:
 5559 0070 1DE1     		b	.L475
 5560              	.LVL821:
 5561              	.L480:
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
 5562              		.loc 1 4027 0 is_stmt 1
 5563 0072 731C     		adds	r3, r6, #1
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 5564              		.loc 1 4024 0
 5565 0074 0646     		mov	r6, r0
 5566              	.LVL822:
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
 5567              		.loc 1 4027 0
 5568 0076 9842     		cmp	r0, r3
 5569 0078 E9D0     		beq	.L481
4028:Middlewares/Third_Party/FatFs/src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
 5570              		.loc 1 4028 0
 5571 007a CB45     		cmp	fp, r9
 5572 007c 06D3     		bcc	.L482
 5573              	.LVL823:
4029:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5574              		.loc 1 4029 0
 5575 007e 019A     		ldr	r2, [sp, #4]
 5576 0080 1346     		mov	r3, r2
 5577              	.LVL824:
 5578 0082 43F8087B 		str	r7, [r3], #8
 5579              	.LVL825:
 5580 0086 C2F804A0 		str	r10, [r2, #4]
 5581 008a 0193     		str	r3, [sp, #4]
 5582              	.LVL826:
 5583              	.L482:
4031:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5584              		.loc 1 4031 0
ARM GAS  /tmp/ccTP8DMx.s 			page 216


 5585 008c 039B     		ldr	r3, [sp, #12]
 5586 008e 5B69     		ldr	r3, [r3, #20]
 5587 0090 9842     		cmp	r0, r3
 5588 0092 D7D3     		bcc	.L511
 5589 0094 01E0     		b	.L478
 5590              	.LVL827:
 5591              	.L510:
4016:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 5592              		.loc 1 4016 0
 5593 0096 4FF00209 		mov	r9, #2
 5594              	.LVL828:
 5595              	.L478:
4033:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ulen <= tlen) {
 5596              		.loc 1 4033 0
 5597 009a E36A     		ldr	r3, [r4, #44]
 5598 009c C3F80090 		str	r9, [r3]
4034:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tbl = 0;		/* Terminate table */
 5599              		.loc 1 4034 0
 5600 00a0 D945     		cmp	r9, fp
 5601 00a2 00F2F980 		bhi	.L512
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 5602              		.loc 1 4035 0
 5603 00a6 0023     		movs	r3, #0
 5604 00a8 019A     		ldr	r2, [sp, #4]
 5605 00aa 1360     		str	r3, [r2]
 5606 00ac 2846     		mov	r0, r5
 5607 00ae FEE0     		b	.L475
 5608              	.LVL829:
 5609              	.L477:
4040:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = ofs;				/* Set file pointer */
 5610              		.loc 1 4040 0
 5611 00b0 E768     		ldr	r7, [r4, #12]
 5612 00b2 BE42     		cmp	r6, r7
 5613 00b4 00D8     		bhi	.L484
 5614 00b6 3746     		mov	r7, r6
 5615              	.L484:
 5616              	.LVL830:
4041:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs) {
 5617              		.loc 1 4041 0
 5618 00b8 A761     		str	r7, [r4, #24]
4042:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
 5619              		.loc 1 4042 0
 5620 00ba 002F     		cmp	r7, #0
 5621 00bc 00F0EE80 		beq	.L513
4043:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, fp->clust);
 5622              		.loc 1 4043 0
 5623 00c0 7E1E     		subs	r6, r7, #1
 5624 00c2 3146     		mov	r1, r6
 5625 00c4 2046     		mov	r0, r4
 5626 00c6 FFF7FEFF 		bl	clmt_clust
 5627              	.LVL831:
 5628 00ca 0146     		mov	r1, r0
 5629 00cc E061     		str	r0, [r4, #28]
4044:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!dsc) ABORT(fs, FR_INT_ERR);
 5630              		.loc 1 4044 0
 5631 00ce DDF80C80 		ldr	r8, [sp, #12]
 5632 00d2 4046     		mov	r0, r8
ARM GAS  /tmp/ccTP8DMx.s 			page 217


 5633 00d4 FFF7FEFF 		bl	clust2sect
 5634              	.LVL832:
4045:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
 5635              		.loc 1 4045 0
 5636 00d8 18B9     		cbnz	r0, .L485
4045:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
 5637              		.loc 1 4045 0 is_stmt 0 discriminator 1
 5638 00da 0225     		movs	r5, #2
 5639              	.LVL833:
 5640 00dc 6575     		strb	r5, [r4, #21]
 5641 00de 2846     		mov	r0, r5
 5642              	.LVL834:
 5643 00e0 E5E0     		b	.L475
 5644              	.LVL835:
 5645              	.L485:
4046:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr % SS(fs) && dsc != fp->sect) {	/* Refill sector cache if needed */
 5646              		.loc 1 4046 0 is_stmt 1
 5647 00e2 B8F80A30 		ldrh	r3, [r8, #10]
 5648 00e6 013B     		subs	r3, r3, #1
 5649 00e8 03EA5623 		and	r3, r3, r6, lsr #9
 5650 00ec C618     		adds	r6, r0, r3
 5651              	.LVL836:
4047:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5652              		.loc 1 4047 0
 5653 00ee C7F30807 		ubfx	r7, r7, #0, #9
 5654              	.LVL837:
 5655 00f2 002F     		cmp	r7, #0
 5656 00f4 00F0D480 		beq	.L514
4047:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5657              		.loc 1 4047 0 is_stmt 0 discriminator 1
 5658 00f8 226A     		ldr	r2, [r4, #32]
 5659 00fa 9642     		cmp	r6, r2
 5660 00fc 00F0D280 		beq	.L515
4050:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 5661              		.loc 1 4050 0 is_stmt 1
 5662 0100 94F91430 		ldrsb	r3, [r4, #20]
 5663 0104 002B     		cmp	r3, #0
 5664 0106 0FDA     		bge	.L486
4051:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
 5665              		.loc 1 4051 0
 5666 0108 0123     		movs	r3, #1
 5667 010a 04F13001 		add	r1, r4, #48
 5668 010e 98F80100 		ldrb	r0, [r8, #1]	@ zero_extendqisi2
 5669 0112 FFF7FEFF 		bl	disk_write
 5670              	.LVL838:
 5671 0116 18B1     		cbz	r0, .L487
4051:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
 5672              		.loc 1 4051 0 is_stmt 0 discriminator 1
 5673 0118 0125     		movs	r5, #1
 5674              	.LVL839:
 5675 011a 6575     		strb	r5, [r4, #21]
 5676 011c 2846     		mov	r0, r5
 5677 011e C6E0     		b	.L475
 5678              	.LVL840:
 5679              	.L487:
4052:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5680              		.loc 1 4052 0 is_stmt 1
ARM GAS  /tmp/ccTP8DMx.s 			page 218


 5681 0120 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5682 0122 03F07F03 		and	r3, r3, #127
 5683 0126 2375     		strb	r3, [r4, #20]
 5684              	.L486:
4055:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5685              		.loc 1 4055 0
 5686 0128 0123     		movs	r3, #1
 5687 012a 3246     		mov	r2, r6
 5688 012c 04F13001 		add	r1, r4, #48
 5689 0130 0398     		ldr	r0, [sp, #12]
 5690 0132 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5691 0134 FFF7FEFF 		bl	disk_read
 5692              	.LVL841:
 5693 0138 18B1     		cbz	r0, .L488
4055:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5694              		.loc 1 4055 0 is_stmt 0 discriminator 1
 5695 013a 0125     		movs	r5, #1
 5696              	.LVL842:
 5697 013c 6575     		strb	r5, [r4, #21]
 5698 013e 2846     		mov	r0, r5
 5699 0140 B5E0     		b	.L475
 5700              	.LVL843:
 5701              	.L488:
4057:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5702              		.loc 1 4057 0 is_stmt 1
 5703 0142 2662     		str	r6, [r4, #32]
 5704 0144 2846     		mov	r0, r5
 5705 0146 B2E0     		b	.L475
 5706              	.LVL844:
 5707              	.L476:
4069:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs = fp->obj.objsize;
 5708              		.loc 1 4069 0
 5709 0148 E368     		ldr	r3, [r4, #12]
 5710 014a 9E42     		cmp	r6, r3
 5711 014c 04D9     		bls	.L489
4069:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs = fp->obj.objsize;
 5712              		.loc 1 4069 0 is_stmt 0 discriminator 1
 5713 014e 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 5714 0150 12F0020F 		tst	r2, #2
 5715 0154 00D1     		bne	.L489
4070:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5716              		.loc 1 4070 0 is_stmt 1
 5717 0156 1E46     		mov	r6, r3
 5718              	.LVL845:
 5719              	.L489:
4072:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr = nsect = 0;
 5720              		.loc 1 4072 0
 5721 0158 A369     		ldr	r3, [r4, #24]
 5722              	.LVL846:
4073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 5723              		.loc 1 4073 0
 5724 015a 0022     		movs	r2, #0
 5725 015c A261     		str	r2, [r4, #24]
4074:Middlewares/Third_Party/FatFs/src/ff.c **** 			bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size (byte) */
 5726              		.loc 1 4074 0
 5727 015e 002E     		cmp	r6, #0
 5728 0160 62D0     		beq	.L517
ARM GAS  /tmp/ccTP8DMx.s 			page 219


4075:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ifptr > 0 &&
 5729              		.loc 1 4075 0
 5730 0162 039A     		ldr	r2, [sp, #12]
 5731 0164 5789     		ldrh	r7, [r2, #10]
 5732 0166 7F02     		lsls	r7, r7, #9
 5733              	.LVL847:
4076:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 5734              		.loc 1 4076 0
 5735 0168 6BB1     		cbz	r3, .L491
4077:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);	/* start from the current cluster */
 5736              		.loc 1 4077 0 discriminator 1
 5737 016a 721E     		subs	r2, r6, #1
 5738 016c B2FBF7F2 		udiv	r2, r2, r7
 5739 0170 013B     		subs	r3, r3, #1
 5740              	.LVL848:
 5741 0172 B3FBF7F1 		udiv	r1, r3, r7
4076:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 5742              		.loc 1 4076 0 discriminator 1
 5743 0176 8A42     		cmp	r2, r1
 5744 0178 05D3     		bcc	.L491
4078:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs -= fp->fptr;
 5745              		.loc 1 4078 0
 5746 017a 7A42     		negs	r2, r7
 5747 017c 1340     		ands	r3, r3, r2
 5748              	.LVL849:
 5749 017e A361     		str	r3, [r4, #24]
4079:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->clust;
 5750              		.loc 1 4079 0
 5751 0180 F61A     		subs	r6, r6, r3
 5752              	.LVL850:
4080:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* When seek to back cluster, */
 5753              		.loc 1 4080 0
 5754 0182 E169     		ldr	r1, [r4, #28]
 5755              	.LVL851:
 5756 0184 14E0     		b	.L492
 5757              	.LVL852:
 5758              	.L491:
4082:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 5759              		.loc 1 4082 0
 5760 0186 A168     		ldr	r1, [r4, #8]
 5761              	.LVL853:
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(&fp->obj, 0);
 5762              		.loc 1 4084 0
 5763 0188 89B9     		cbnz	r1, .L493
4085:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) ABORT(fs, FR_INT_ERR);
 5764              		.loc 1 4085 0
 5765 018a 2046     		mov	r0, r4
 5766 018c FFF7FEFF 		bl	create_chain
 5767              	.LVL854:
 5768 0190 0146     		mov	r1, r0
 5769              	.LVL855:
4086:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5770              		.loc 1 4086 0
 5771 0192 0128     		cmp	r0, #1
 5772 0194 03D1     		bne	.L494
4086:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5773              		.loc 1 4086 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccTP8DMx.s 			page 220


 5774 0196 0225     		movs	r5, #2
 5775              	.LVL856:
 5776 0198 6575     		strb	r5, [r4, #21]
 5777 019a 2846     		mov	r0, r5
 5778              	.LVL857:
 5779 019c 87E0     		b	.L475
 5780              	.LVL858:
 5781              	.L494:
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = clst;
 5782              		.loc 1 4087 0 is_stmt 1
 5783 019e B0F1FF3F 		cmp	r0, #-1
 5784 01a2 03D1     		bne	.L495
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = clst;
 5785              		.loc 1 4087 0 is_stmt 0 discriminator 1
 5786 01a4 0125     		movs	r5, #1
 5787              	.LVL859:
 5788 01a6 6575     		strb	r5, [r4, #21]
 5789 01a8 2846     		mov	r0, r5
 5790              	.LVL860:
 5791 01aa 80E0     		b	.L475
 5792              	.LVL861:
 5793              	.L495:
4088:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5794              		.loc 1 4088 0 is_stmt 1
 5795 01ac A060     		str	r0, [r4, #8]
 5796              	.LVL862:
 5797              	.L493:
4091:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5798              		.loc 1 4091 0
 5799 01ae E161     		str	r1, [r4, #28]
 5800              	.L492:
4093:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
 5801              		.loc 1 4093 0
 5802 01b0 29BB     		cbnz	r1, .L496
4073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 5803              		.loc 1 4073 0
 5804 01b2 0026     		movs	r6, #0
 5805              	.LVL863:
 5806 01b4 3BE0     		b	.L490
 5807              	.LVL864:
 5808              	.L503:
4095:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 5809              		.loc 1 4095 0
 5810 01b6 F61B     		subs	r6, r6, r7
 5811              	.LVL865:
 5812 01b8 A369     		ldr	r3, [r4, #24]
 5813 01ba 3B44     		add	r3, r3, r7
 5814 01bc A361     		str	r3, [r4, #24]
4097:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fp->fptr > fp->obj.objsize) {	/* No FAT chain object needs correct objsize t
 5815              		.loc 1 4097 0
 5816 01be 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5817 01c0 13F0020F 		tst	r3, #2
 5818 01c4 05D0     		beq	.L497
4102:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (clst == 0) {				/* Clip file size in case of disk full */
 5819              		.loc 1 4102 0
 5820 01c6 4046     		mov	r0, r8
 5821 01c8 FFF7FEFF 		bl	create_chain
ARM GAS  /tmp/ccTP8DMx.s 			page 221


 5822              	.LVL866:
4103:Middlewares/Third_Party/FatFs/src/ff.c **** 							ofs = 0; break;
 5823              		.loc 1 4103 0
 5824 01cc 0146     		mov	r1, r0
 5825 01ce 20B9     		cbnz	r0, .L499
 5826 01d0 18E0     		b	.L518
 5827              	.LVL867:
 5828              	.L497:
4109:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5829              		.loc 1 4109 0
 5830 01d2 4046     		mov	r0, r8
 5831 01d4 FFF7FEFF 		bl	get_fat
 5832              	.LVL868:
 5833 01d8 0146     		mov	r1, r0
 5834              	.LVL869:
 5835              	.L499:
4111:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
 5836              		.loc 1 4111 0
 5837 01da B1F1FF3F 		cmp	r1, #-1
 5838 01de 03D1     		bne	.L500
4111:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
 5839              		.loc 1 4111 0 is_stmt 0 discriminator 1
 5840 01e0 0125     		movs	r5, #1
 5841              	.LVL870:
 5842 01e2 6575     		strb	r5, [r4, #21]
 5843 01e4 2846     		mov	r0, r5
 5844              	.LVL871:
 5845 01e6 62E0     		b	.L475
 5846              	.LVL872:
 5847              	.L500:
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 5848              		.loc 1 4112 0 is_stmt 1
 5849 01e8 0129     		cmp	r1, #1
 5850 01ea 03D9     		bls	.L501
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 5851              		.loc 1 4112 0 is_stmt 0 discriminator 2
 5852 01ec 039B     		ldr	r3, [sp, #12]
 5853 01ee 5B69     		ldr	r3, [r3, #20]
 5854 01f0 9942     		cmp	r1, r3
 5855 01f2 03D3     		bcc	.L502
 5856              	.L501:
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 5857              		.loc 1 4112 0 discriminator 3
 5858 01f4 0225     		movs	r5, #2
 5859              	.LVL873:
 5860 01f6 6575     		strb	r5, [r4, #21]
 5861 01f8 2846     		mov	r0, r5
 5862              	.LVL874:
 5863 01fa 58E0     		b	.L475
 5864              	.LVL875:
 5865              	.L502:
4113:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5866              		.loc 1 4113 0 is_stmt 1
 5867 01fc E161     		str	r1, [r4, #28]
 5868              	.LVL876:
 5869              	.L496:
4094:Middlewares/Third_Party/FatFs/src/ff.c **** 					ofs -= bcs; fp->fptr += bcs;
ARM GAS  /tmp/ccTP8DMx.s 			page 222


 5870              		.loc 1 4094 0
 5871 01fe BE42     		cmp	r6, r7
 5872 0200 D9D8     		bhi	.L503
 5873 0202 00E0     		b	.L498
 5874              	.LVL877:
 5875              	.L518:
4104:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 5876              		.loc 1 4104 0
 5877 0204 0026     		movs	r6, #0
 5878              	.LVL878:
 5879              	.L498:
4115:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ofs % SS(fs)) {
 5880              		.loc 1 4115 0
 5881 0206 A369     		ldr	r3, [r4, #24]
 5882 0208 3344     		add	r3, r3, r6
 5883 020a A361     		str	r3, [r4, #24]
4116:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect = clust2sect(fs, clst);	/* Current sector */
 5884              		.loc 1 4116 0
 5885 020c C6F30803 		ubfx	r3, r6, #0, #9
 5886 0210 63B1     		cbz	r3, .L519
4117:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!nsect) ABORT(fs, FR_INT_ERR);
 5887              		.loc 1 4117 0
 5888 0212 0398     		ldr	r0, [sp, #12]
 5889 0214 FFF7FEFF 		bl	clust2sect
 5890              	.LVL879:
4118:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
 5891              		.loc 1 4118 0
 5892 0218 18B9     		cbnz	r0, .L504
4118:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
 5893              		.loc 1 4118 0 is_stmt 0 discriminator 1
 5894 021a 0225     		movs	r5, #2
 5895              	.LVL880:
 5896 021c 6575     		strb	r5, [r4, #21]
 5897 021e 2846     		mov	r0, r5
 5898              	.LVL881:
 5899 0220 45E0     		b	.L475
 5900              	.LVL882:
 5901              	.L504:
4119:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5902              		.loc 1 4119 0 is_stmt 1
 5903 0222 00EB5626 		add	r6, r0, r6, lsr #9
 5904              	.LVL883:
 5905 0226 02E0     		b	.L490
 5906              	.LVL884:
 5907              	.L517:
4073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 5908              		.loc 1 4073 0
 5909 0228 0026     		movs	r6, #0
 5910              	.LVL885:
 5911 022a 00E0     		b	.L490
 5912              	.LVL886:
 5913              	.L519:
 5914 022c 0026     		movs	r6, #0
 5915              	.LVL887:
 5916              	.L490:
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.objsize = fp->fptr;
 5917              		.loc 1 4123 0
ARM GAS  /tmp/ccTP8DMx.s 			page 223


 5918 022e A369     		ldr	r3, [r4, #24]
 5919 0230 E268     		ldr	r2, [r4, #12]
 5920 0232 9342     		cmp	r3, r2
 5921 0234 04D9     		bls	.L505
4124:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA_MODIFIED;
 5922              		.loc 1 4124 0
 5923 0236 E360     		str	r3, [r4, #12]
4125:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5924              		.loc 1 4125 0
 5925 0238 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 5926 023a 42F04002 		orr	r2, r2, #64
 5927 023e 2275     		strb	r2, [r4, #20]
 5928              	.L505:
4127:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5929              		.loc 1 4127 0
 5930 0240 C3F30803 		ubfx	r3, r3, #0, #9
 5931 0244 83B3     		cbz	r3, .L520
4127:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5932              		.loc 1 4127 0 is_stmt 0 discriminator 1
 5933 0246 226A     		ldr	r2, [r4, #32]
 5934 0248 9642     		cmp	r6, r2
 5935 024a 2FD0     		beq	.L521
4130:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 5936              		.loc 1 4130 0 is_stmt 1
 5937 024c 94F91430 		ldrsb	r3, [r4, #20]
 5938 0250 002B     		cmp	r3, #0
 5939 0252 0FDA     		bge	.L506
4131:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5940              		.loc 1 4131 0
 5941 0254 0123     		movs	r3, #1
 5942 0256 04F13001 		add	r1, r4, #48
 5943 025a 0398     		ldr	r0, [sp, #12]
 5944 025c 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5945 025e FFF7FEFF 		bl	disk_write
 5946              	.LVL888:
 5947 0262 18B1     		cbz	r0, .L507
4131:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5948              		.loc 1 4131 0 is_stmt 0 discriminator 1
 5949 0264 0125     		movs	r5, #1
 5950              	.LVL889:
 5951 0266 6575     		strb	r5, [r4, #21]
 5952 0268 2846     		mov	r0, r5
 5953 026a 20E0     		b	.L475
 5954              	.LVL890:
 5955              	.L507:
4132:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5956              		.loc 1 4132 0 is_stmt 1
 5957 026c 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5958 026e 03F07F03 		and	r3, r3, #127
 5959 0272 2375     		strb	r3, [r4, #20]
 5960              	.L506:
4135:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5961              		.loc 1 4135 0
 5962 0274 0123     		movs	r3, #1
 5963 0276 3246     		mov	r2, r6
 5964 0278 04F13001 		add	r1, r4, #48
 5965 027c 0398     		ldr	r0, [sp, #12]
ARM GAS  /tmp/ccTP8DMx.s 			page 224


 5966 027e 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5967 0280 FFF7FEFF 		bl	disk_read
 5968              	.LVL891:
 5969 0284 18B1     		cbz	r0, .L508
4135:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5970              		.loc 1 4135 0 is_stmt 0 discriminator 1
 5971 0286 0125     		movs	r5, #1
 5972              	.LVL892:
 5973 0288 6575     		strb	r5, [r4, #21]
 5974 028a 2846     		mov	r0, r5
 5975 028c 0FE0     		b	.L475
 5976              	.LVL893:
 5977              	.L508:
4137:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5978              		.loc 1 4137 0 is_stmt 1
 5979 028e 2662     		str	r6, [r4, #32]
 5980 0290 2846     		mov	r0, r5
 5981 0292 0CE0     		b	.L475
 5982              	.LVL894:
 5983              	.L509:
4010:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5984              		.loc 1 4010 0
 5985 0294 2846     		mov	r0, r5
 5986 0296 0AE0     		b	.L475
 5987              	.LVL895:
 5988              	.L512:
4037:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5989              		.loc 1 4037 0
 5990 0298 1120     		movs	r0, #17
 5991 029a 08E0     		b	.L475
 5992              	.LVL896:
 5993              	.L513:
 5994 029c 2846     		mov	r0, r5
 5995 029e 06E0     		b	.L475
 5996              	.LVL897:
 5997              	.L514:
 5998 02a0 2846     		mov	r0, r5
 5999 02a2 04E0     		b	.L475
 6000              	.L515:
 6001 02a4 2846     		mov	r0, r5
 6002 02a6 02E0     		b	.L475
 6003              	.LVL898:
 6004              	.L520:
 6005 02a8 2846     		mov	r0, r5
 6006 02aa 00E0     		b	.L475
 6007              	.L521:
 6008 02ac 2846     		mov	r0, r5
 6009              	.LVL899:
 6010              	.L475:
4142:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6011              		.loc 1 4142 0
 6012 02ae 05B0     		add	sp, sp, #20
 6013              	.LCFI67:
 6014              		.cfi_def_cfa_offset 36
 6015              		@ sp needed
 6016 02b0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6017              		.cfi_endproc
ARM GAS  /tmp/ccTP8DMx.s 			page 225


 6018              	.LFE168:
 6020              		.section	.text.f_opendir,"ax",%progbits
 6021              		.align	2
 6022              		.global	f_opendir
 6023              		.thumb
 6024              		.thumb_func
 6026              	f_opendir:
 6027              	.LFB169:
4155:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6028              		.loc 1 4155 0
 6029              		.cfi_startproc
 6030              		@ args = 0, pretend = 0, frame = 16
 6031              		@ frame_needed = 0, uses_anonymous_args = 0
 6032              	.LVL900:
 6033 0000 30B5     		push	{r4, r5, lr}
 6034              	.LCFI68:
 6035              		.cfi_def_cfa_offset 12
 6036              		.cfi_offset 4, -12
 6037              		.cfi_offset 5, -8
 6038              		.cfi_offset 14, -4
 6039 0002 85B0     		sub	sp, sp, #20
 6040              	.LCFI69:
 6041              		.cfi_def_cfa_offset 32
 6042 0004 0191     		str	r1, [sp, #4]
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6043              		.loc 1 4162 0
 6044 0006 0028     		cmp	r0, #0
 6045 0008 3DD0     		beq	.L529
 6046 000a 0546     		mov	r5, r0
 6047              	.LVL901:
4166:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6048              		.loc 1 4166 0
 6049 000c 0022     		movs	r2, #0
 6050 000e 03A9     		add	r1, sp, #12
 6051              	.LVL902:
 6052 0010 01A8     		add	r0, sp, #4
 6053              	.LVL903:
 6054 0012 FFF7FEFF 		bl	find_volume
 6055              	.LVL904:
4167:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->fs = fs;
 6056              		.loc 1 4167 0
 6057 0016 0446     		mov	r4, r0
 6058 0018 80BB     		cbnz	r0, .L525
4168:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 6059              		.loc 1 4168 0
 6060 001a 039B     		ldr	r3, [sp, #12]
 6061 001c 2B60     		str	r3, [r5]
4170:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
 6062              		.loc 1 4170 0
 6063 001e 0199     		ldr	r1, [sp, #4]
 6064 0020 2846     		mov	r0, r5
 6065              	.LVL905:
 6066 0022 FFF7FEFF 		bl	follow_path
 6067              	.LVL906:
4171:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
 6068              		.loc 1 4171 0
 6069 0026 0446     		mov	r4, r0
ARM GAS  /tmp/ccTP8DMx.s 			page 226


 6070 0028 28BB     		cbnz	r0, .L526
4172:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->attr & AM_DIR) {		/* This object is a sub-directory */
 6071              		.loc 1 4172 0
 6072 002a 95F92F30 		ldrsb	r3, [r5, #47]
 6073 002e 002B     		cmp	r3, #0
 6074 0030 0ADB     		blt	.L527
4173:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 6075              		.loc 1 4173 0
 6076 0032 AB79     		ldrb	r3, [r5, #6]	@ zero_extendqisi2
 6077 0034 13F0100F 		tst	r3, #16
 6078 0038 05D0     		beq	.L530
4185:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6079              		.loc 1 4185 0
 6080 003a 296A     		ldr	r1, [r5, #32]
 6081 003c 0398     		ldr	r0, [sp, #12]
 6082              	.LVL907:
 6083 003e FFF7FEFF 		bl	ld_clust
 6084              	.LVL908:
 6085 0042 A860     		str	r0, [r5, #8]
 6086 0044 00E0     		b	.L527
 6087              	.LVL909:
 6088              	.L530:
4188:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6089              		.loc 1 4188 0
 6090 0046 0524     		movs	r4, #5
 6091              	.LVL910:
 6092              	.L527:
4191:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->id = fs->id;
 6093              		.loc 1 4191 0
 6094 0048 ACB9     		cbnz	r4, .L526
4192:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
 6095              		.loc 1 4192 0
 6096 004a 039B     		ldr	r3, [sp, #12]
 6097 004c DB88     		ldrh	r3, [r3, #6]
 6098 004e AB80     		strh	r3, [r5, #4]	@ movhi
4193:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 6099              		.loc 1 4193 0
 6100 0050 0021     		movs	r1, #0
 6101 0052 2846     		mov	r0, r5
 6102 0054 FFF7FEFF 		bl	dir_sdi
 6103              	.LVL911:
4195:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (obj->sclust) {
 6104              		.loc 1 4195 0
 6105 0058 0446     		mov	r4, r0
 6106 005a 60B9     		cbnz	r0, .L526
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
 6107              		.loc 1 4196 0
 6108 005c AB68     		ldr	r3, [r5, #8]
 6109 005e 33B1     		cbz	r3, .L528
4197:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!obj->lockid) res = FR_TOO_MANY_OPEN_FILES;
 6110              		.loc 1 4197 0
 6111 0060 0021     		movs	r1, #0
 6112 0062 2846     		mov	r0, r5
 6113              	.LVL912:
 6114 0064 FFF7FEFF 		bl	inc_lock
 6115              	.LVL913:
 6116 0068 2861     		str	r0, [r5, #16]
ARM GAS  /tmp/ccTP8DMx.s 			page 227


4198:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
 6117              		.loc 1 4198 0
 6118 006a 18B1     		cbz	r0, .L531
 6119 006c 03E0     		b	.L526
 6120              	.LVL914:
 6121              	.L528:
4200:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6122              		.loc 1 4200 0
 6123 006e 0023     		movs	r3, #0
 6124 0070 2B61     		str	r3, [r5, #16]
 6125 0072 00E0     		b	.L526
 6126              	.LVL915:
 6127              	.L531:
4198:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
 6128              		.loc 1 4198 0
 6129 0074 1224     		movs	r4, #18
 6130              	.L526:
 6131              	.LVL916:
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 6132              		.loc 1 4207 0
 6133 0076 042C     		cmp	r4, #4
 6134 0078 00D1     		bne	.L525
 6135 007a 0524     		movs	r4, #5
 6136              	.LVL917:
 6137              	.L525:
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6138              		.loc 1 4209 0
 6139 007c 2CB1     		cbz	r4, .L533
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6140              		.loc 1 4209 0 is_stmt 0 discriminator 1
 6141 007e 0023     		movs	r3, #0
 6142 0080 2B60     		str	r3, [r5]
4211:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6143              		.loc 1 4211 0 is_stmt 1 discriminator 1
 6144 0082 2046     		mov	r0, r4
 6145 0084 02E0     		b	.L524
 6146              	.LVL918:
 6147              	.L529:
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6148              		.loc 1 4162 0
 6149 0086 0920     		movs	r0, #9
 6150              	.LVL919:
 6151 0088 00E0     		b	.L524
 6152              	.LVL920:
 6153              	.L533:
4211:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6154              		.loc 1 4211 0
 6155 008a 2046     		mov	r0, r4
 6156              	.LVL921:
 6157              	.L524:
4212:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6158              		.loc 1 4212 0
 6159 008c 05B0     		add	sp, sp, #20
 6160              	.LCFI70:
 6161              		.cfi_def_cfa_offset 12
 6162              		@ sp needed
 6163 008e 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccTP8DMx.s 			page 228


 6164              		.cfi_endproc
 6165              	.LFE169:
 6167              		.section	.text.f_closedir,"ax",%progbits
 6168              		.align	2
 6169              		.global	f_closedir
 6170              		.thumb
 6171              		.thumb_func
 6173              	f_closedir:
 6174              	.LFB170:
4224:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6175              		.loc 1 4224 0
 6176              		.cfi_startproc
 6177              		@ args = 0, pretend = 0, frame = 8
 6178              		@ frame_needed = 0, uses_anonymous_args = 0
 6179              	.LVL922:
 6180 0000 10B5     		push	{r4, lr}
 6181              	.LCFI71:
 6182              		.cfi_def_cfa_offset 8
 6183              		.cfi_offset 4, -8
 6184              		.cfi_offset 14, -4
 6185 0002 82B0     		sub	sp, sp, #8
 6186              	.LCFI72:
 6187              		.cfi_def_cfa_offset 16
 6188 0004 0446     		mov	r4, r0
4229:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6189              		.loc 1 4229 0
 6190 0006 01A9     		add	r1, sp, #4
 6191 0008 FFF7FEFF 		bl	validate
 6192              	.LVL923:
4230:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 6193              		.loc 1 4230 0
 6194 000c 0346     		mov	r3, r0
 6195 000e 38B9     		cbnz	r0, .L536
4232:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(dp->obj.lockid);
 6196              		.loc 1 4232 0
 6197 0010 2069     		ldr	r0, [r4, #16]
 6198              	.LVL924:
 6199 0012 10B1     		cbz	r0, .L537
4233:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6200              		.loc 1 4233 0
 6201 0014 FFF7FEFF 		bl	dec_lock
 6202              	.LVL925:
 6203 0018 0346     		mov	r3, r0
 6204              	.LVL926:
 6205              	.L537:
4235:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6206              		.loc 1 4235 0
 6207 001a 0BB9     		cbnz	r3, .L536
4238:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6208              		.loc 1 4238 0
 6209 001c 0022     		movs	r2, #0
 6210 001e 2260     		str	r2, [r4]
 6211              	.LVL927:
 6212              	.L536:
4245:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6213              		.loc 1 4245 0
 6214 0020 1846     		mov	r0, r3
ARM GAS  /tmp/ccTP8DMx.s 			page 229


 6215 0022 02B0     		add	sp, sp, #8
 6216              	.LCFI73:
 6217              		.cfi_def_cfa_offset 8
 6218              		@ sp needed
 6219 0024 10BD     		pop	{r4, pc}
 6220              		.cfi_endproc
 6221              	.LFE170:
 6223 0026 00BF     		.section	.text.f_readdir,"ax",%progbits
 6224              		.align	2
 6225              		.global	f_readdir
 6226              		.thumb
 6227              		.thumb_func
 6229              	f_readdir:
 6230              	.LFB171:
4258:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6231              		.loc 1 4258 0
 6232              		.cfi_startproc
 6233              		@ args = 0, pretend = 0, frame = 8
 6234              		@ frame_needed = 0, uses_anonymous_args = 0
 6235              	.LVL928:
 6236 0000 70B5     		push	{r4, r5, r6, lr}
 6237              	.LCFI74:
 6238              		.cfi_def_cfa_offset 16
 6239              		.cfi_offset 4, -16
 6240              		.cfi_offset 5, -12
 6241              		.cfi_offset 6, -8
 6242              		.cfi_offset 14, -4
 6243 0002 82B0     		sub	sp, sp, #8
 6244              	.LCFI75:
 6245              		.cfi_def_cfa_offset 24
 6246 0004 0546     		mov	r5, r0
 6247 0006 0E46     		mov	r6, r1
4264:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6248              		.loc 1 4264 0
 6249 0008 01A9     		add	r1, sp, #4
 6250              	.LVL929:
 6251 000a FFF7FEFF 		bl	validate
 6252              	.LVL930:
4265:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fno) {
 6253              		.loc 1 4265 0
 6254 000e 0446     		mov	r4, r0
 6255 0010 C8B9     		cbnz	r0, .L540
4266:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
 6256              		.loc 1 4266 0
 6257 0012 2EB9     		cbnz	r6, .L541
4267:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 6258              		.loc 1 4267 0
 6259 0014 0021     		movs	r1, #0
 6260 0016 2846     		mov	r0, r5
 6261              	.LVL931:
 6262 0018 FFF7FEFF 		bl	dir_sdi
 6263              	.LVL932:
 6264 001c 0446     		mov	r4, r0
 6265              	.LVL933:
 6266 001e 12E0     		b	.L540
 6267              	.LVL934:
 6268              	.L541:
ARM GAS  /tmp/ccTP8DMx.s 			page 230


4270:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
 6269              		.loc 1 4270 0
 6270 0020 0021     		movs	r1, #0
 6271 0022 2846     		mov	r0, r5
 6272              	.LVL935:
 6273 0024 FFF7FEFF 		bl	dir_read
 6274              	.LVL936:
4271:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {				/* A valid entry is found */
 6275              		.loc 1 4271 0
 6276 0028 0428     		cmp	r0, #4
 6277 002a 00D0     		beq	.L542
4270:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
 6278              		.loc 1 4270 0
 6279 002c 0446     		mov	r4, r0
 6280              	.L542:
 6281              	.LVL937:
4272:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
 6282              		.loc 1 4272 0
 6283 002e 54B9     		cbnz	r4, .L540
4273:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
 6284              		.loc 1 4273 0
 6285 0030 3146     		mov	r1, r6
 6286 0032 2846     		mov	r0, r5
 6287 0034 FFF7FEFF 		bl	get_fileinfo
 6288              	.LVL938:
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
 6289              		.loc 1 4274 0
 6290 0038 0021     		movs	r1, #0
 6291 003a 2846     		mov	r0, r5
 6292 003c FFF7FEFF 		bl	dir_next
 6293              	.LVL939:
4275:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6294              		.loc 1 4275 0
 6295 0040 0428     		cmp	r0, #4
 6296 0042 00D0     		beq	.L540
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
 6297              		.loc 1 4274 0
 6298 0044 0446     		mov	r4, r0
 6299              	.LVL940:
 6300              	.L540:
4281:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6301              		.loc 1 4281 0
 6302 0046 2046     		mov	r0, r4
 6303 0048 02B0     		add	sp, sp, #8
 6304              	.LCFI76:
 6305              		.cfi_def_cfa_offset 16
 6306              		@ sp needed
 6307 004a 70BD     		pop	{r4, r5, r6, pc}
 6308              		.cfi_endproc
 6309              	.LFE171:
 6311              		.section	.text.f_stat,"ax",%progbits
 6312              		.align	2
 6313              		.global	f_stat
 6314              		.thumb
 6315              		.thumb_func
 6317              	f_stat:
 6318              	.LFB172:
ARM GAS  /tmp/ccTP8DMx.s 			page 231


4346:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6319              		.loc 1 4346 0
 6320              		.cfi_startproc
 6321              		@ args = 0, pretend = 0, frame = 56
 6322              		@ frame_needed = 0, uses_anonymous_args = 0
 6323              	.LVL941:
 6324 0000 30B5     		push	{r4, r5, lr}
 6325              	.LCFI77:
 6326              		.cfi_def_cfa_offset 12
 6327              		.cfi_offset 4, -12
 6328              		.cfi_offset 5, -8
 6329              		.cfi_offset 14, -4
 6330 0002 8FB0     		sub	sp, sp, #60
 6331              	.LCFI78:
 6332              		.cfi_def_cfa_offset 72
 6333 0004 0190     		str	r0, [sp, #4]
 6334 0006 0D46     		mov	r5, r1
4353:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6335              		.loc 1 4353 0
 6336 0008 0022     		movs	r2, #0
 6337 000a 02A9     		add	r1, sp, #8
 6338              	.LVL942:
 6339 000c 01A8     		add	r0, sp, #4
 6340              	.LVL943:
 6341 000e FFF7FEFF 		bl	find_volume
 6342              	.LVL944:
4354:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(dj.obj.fs);
 6343              		.loc 1 4354 0
 6344 0012 0446     		mov	r4, r0
 6345 0014 80B9     		cbnz	r0, .L545
4356:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
 6346              		.loc 1 4356 0
 6347 0016 0199     		ldr	r1, [sp, #4]
 6348 0018 02A8     		add	r0, sp, #8
 6349              	.LVL945:
 6350 001a FFF7FEFF 		bl	follow_path
 6351              	.LVL946:
4357:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* It is origin directory */
 6352              		.loc 1 4357 0
 6353 001e 0446     		mov	r4, r0
 6354 0020 50B9     		cbnz	r0, .L545
4358:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 6355              		.loc 1 4358 0
 6356 0022 9DF93730 		ldrsb	r3, [sp, #55]
 6357 0026 002B     		cmp	r3, #0
 6358 0028 05DB     		blt	.L546
4361:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6359              		.loc 1 4361 0
 6360 002a 2DB1     		cbz	r5, .L545
4361:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6361              		.loc 1 4361 0 is_stmt 0 discriminator 1
 6362 002c 2946     		mov	r1, r5
 6363 002e 02A8     		add	r0, sp, #8
 6364              	.LVL947:
 6365 0030 FFF7FEFF 		bl	get_fileinfo
 6366              	.LVL948:
 6367 0034 00E0     		b	.L545
ARM GAS  /tmp/ccTP8DMx.s 			page 232


 6368              	.LVL949:
 6369              	.L546:
4359:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {							/* Found an object */
 6370              		.loc 1 4359 0 is_stmt 1
 6371 0036 0624     		movs	r4, #6
 6372              	.LVL950:
 6373              	.L545:
4368:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6374              		.loc 1 4368 0
 6375 0038 2046     		mov	r0, r4
 6376 003a 0FB0     		add	sp, sp, #60
 6377              	.LCFI79:
 6378              		.cfi_def_cfa_offset 12
 6379              		@ sp needed
 6380 003c 30BD     		pop	{r4, r5, pc}
 6381              		.cfi_endproc
 6382              	.LFE172:
 6384 003e 00BF     		.section	.text.f_getfree,"ax",%progbits
 6385              		.align	2
 6386              		.global	f_getfree
 6387              		.thumb
 6388              		.thumb_func
 6390              	f_getfree:
 6391              	.LFB173:
4382:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6392              		.loc 1 4382 0
 6393              		.cfi_startproc
 6394              		@ args = 0, pretend = 0, frame = 32
 6395              		@ frame_needed = 0, uses_anonymous_args = 0
 6396              	.LVL951:
 6397 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6398              	.LCFI80:
 6399              		.cfi_def_cfa_offset 32
 6400              		.cfi_offset 4, -32
 6401              		.cfi_offset 5, -28
 6402              		.cfi_offset 6, -24
 6403              		.cfi_offset 7, -20
 6404              		.cfi_offset 8, -16
 6405              		.cfi_offset 9, -12
 6406              		.cfi_offset 10, -8
 6407              		.cfi_offset 14, -4
 6408 0004 88B0     		sub	sp, sp, #32
 6409              	.LCFI81:
 6410              		.cfi_def_cfa_offset 64
 6411 0006 0190     		str	r0, [sp, #4]
 6412 0008 8A46     		mov	r10, r1
 6413 000a 1446     		mov	r4, r2
4392:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6414              		.loc 1 4392 0
 6415 000c 0022     		movs	r2, #0
 6416              	.LVL952:
 6417 000e 07A9     		add	r1, sp, #28
 6418              	.LVL953:
 6419 0010 01A8     		add	r0, sp, #4
 6420              	.LVL954:
 6421 0012 FFF7FEFF 		bl	find_volume
 6422              	.LVL955:
ARM GAS  /tmp/ccTP8DMx.s 			page 233


4393:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fatfs = fs;				/* Return ptr to the fs object */
 6423              		.loc 1 4393 0
 6424 0016 8146     		mov	r9, r0
 6425 0018 0028     		cmp	r0, #0
 6426 001a 58D1     		bne	.L549
4394:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* If free_clst is valid, return it without full cluster scan */
 6427              		.loc 1 4394 0
 6428 001c 079B     		ldr	r3, [sp, #28]
 6429 001e 2360     		str	r3, [r4]
4396:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = fs->free_clst;
 6430              		.loc 1 4396 0
 6431 0020 1A69     		ldr	r2, [r3, #16]
 6432 0022 5E69     		ldr	r6, [r3, #20]
 6433 0024 B11E     		subs	r1, r6, #2
 6434 0026 8A42     		cmp	r2, r1
 6435 0028 02D8     		bhi	.L550
4397:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 6436              		.loc 1 4397 0
 6437 002a CAF80020 		str	r2, [r10]
 6438 002e 4EE0     		b	.L549
 6439              	.L550:
 6440              	.LVL956:
4401:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = 2; obj.fs = fs;
 6441              		.loc 1 4401 0
 6442 0030 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6443 0032 012A     		cmp	r2, #1
 6444 0034 13D1     		bne	.L551
 6445              	.LVL957:
4402:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
 6446              		.loc 1 4402 0
 6447 0036 0293     		str	r3, [sp, #8]
 6448 0038 0224     		movs	r4, #2
 6449              	.LVL958:
4400:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
 6450              		.loc 1 4400 0
 6451 003a 0027     		movs	r7, #0
 6452              	.LVL959:
 6453              	.L554:
4404:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
 6454              		.loc 1 4404 0
 6455 003c 2146     		mov	r1, r4
 6456 003e 02A8     		add	r0, sp, #8
 6457 0040 FFF7FEFF 		bl	get_fat
 6458              	.LVL960:
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 6459              		.loc 1 4405 0
 6460 0044 B0F1FF3F 		cmp	r0, #-1
 6461 0048 34D0     		beq	.L561
4406:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) nfree++;
 6462              		.loc 1 4406 0
 6463 004a 0128     		cmp	r0, #1
 6464 004c 35D0     		beq	.L562
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
 6465              		.loc 1 4407 0
 6466 004e 00B9     		cbnz	r0, .L553
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
 6467              		.loc 1 4407 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccTP8DMx.s 			page 234


 6468 0050 0137     		adds	r7, r7, #1
 6469              	.LVL961:
 6470              	.L553:
4408:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 6471              		.loc 1 4408 0 is_stmt 1
 6472 0052 0134     		adds	r4, r4, #1
 6473              	.LVL962:
 6474 0054 079B     		ldr	r3, [sp, #28]
 6475 0056 5B69     		ldr	r3, [r3, #20]
 6476 0058 9C42     		cmp	r4, r3
 6477 005a EFD3     		bcc	.L554
 6478 005c 2FE0     		b	.L552
 6479              	.LVL963:
 6480              	.L551:
4429:Middlewares/Third_Party/FatFs/src/ff.c **** 					i = 0; p = 0;
 6481              		.loc 1 4429 0
 6482 005e D3F82080 		ldr	r8, [r3, #32]
 6483              	.LVL964:
4430:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
 6484              		.loc 1 4430 0
 6485 0062 0024     		movs	r4, #0
 6486              	.LVL965:
 6487 0064 2546     		mov	r5, r4
4400:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
 6488              		.loc 1 4400 0
 6489 0066 2746     		mov	r7, r4
 6490              	.LVL966:
 6491              	.L560:
4432:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, sect++);
 6492              		.loc 1 4432 0
 6493 0068 65B9     		cbnz	r5, .L555
4433:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res != FR_OK) break;
 6494              		.loc 1 4433 0
 6495 006a 08F10105 		add	r5, r8, #1
 6496              	.LVL967:
 6497 006e 4146     		mov	r1, r8
 6498 0070 0798     		ldr	r0, [sp, #28]
 6499 0072 FFF7FEFF 		bl	move_window
 6500              	.LVL968:
4434:Middlewares/Third_Party/FatFs/src/ff.c **** 							p = fs->win;
 6501              		.loc 1 4434 0
 6502 0076 8146     		mov	r9, r0
 6503 0078 08BB     		cbnz	r0, .L552
4435:Middlewares/Third_Party/FatFs/src/ff.c **** 							i = SS(fs);
 6504              		.loc 1 4435 0
 6505 007a 079C     		ldr	r4, [sp, #28]
 6506              	.LVL969:
 6507 007c 3034     		adds	r4, r4, #48
 6508              	.LVL970:
4433:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res != FR_OK) break;
 6509              		.loc 1 4433 0
 6510 007e A846     		mov	r8, r5
4436:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 6511              		.loc 1 4436 0
 6512 0080 4FF40075 		mov	r5, #512
 6513              	.LVL971:
 6514              	.L555:
ARM GAS  /tmp/ccTP8DMx.s 			page 235


4438:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (ld_word(p) == 0) nfree++;
 6515              		.loc 1 4438 0
 6516 0084 079B     		ldr	r3, [sp, #28]
 6517 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6518 0088 022B     		cmp	r3, #2
 6519 008a 07D1     		bne	.L556
4439:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 2; i -= 2;
 6520              		.loc 1 4439 0
 6521 008c 2046     		mov	r0, r4
 6522 008e FFF7FEFF 		bl	ld_word
 6523              	.LVL972:
 6524 0092 00B9     		cbnz	r0, .L557
4439:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 2; i -= 2;
 6525              		.loc 1 4439 0 is_stmt 0 discriminator 1
 6526 0094 0137     		adds	r7, r7, #1
 6527              	.LVL973:
 6528              	.L557:
4440:Middlewares/Third_Party/FatFs/src/ff.c **** 						} else {
 6529              		.loc 1 4440 0 is_stmt 1
 6530 0096 0234     		adds	r4, r4, #2
 6531              	.LVL974:
 6532 0098 023D     		subs	r5, r5, #2
 6533              	.LVL975:
 6534 009a 08E0     		b	.L558
 6535              	.L556:
4442:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 4; i -= 4;
 6536              		.loc 1 4442 0
 6537 009c 2046     		mov	r0, r4
 6538 009e FFF7FEFF 		bl	ld_dword
 6539              	.LVL976:
 6540 00a2 20F07040 		bic	r0, r0, #-268435456
 6541 00a6 00B9     		cbnz	r0, .L559
4442:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 4; i -= 4;
 6542              		.loc 1 4442 0 is_stmt 0 discriminator 1
 6543 00a8 0137     		adds	r7, r7, #1
 6544              	.LVL977:
 6545              	.L559:
4443:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 6546              		.loc 1 4443 0 is_stmt 1
 6547 00aa 0434     		adds	r4, r4, #4
 6548              	.LVL978:
 6549 00ac 043D     		subs	r5, r5, #4
 6550              	.LVL979:
 6551              	.L558:
4445:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6552              		.loc 1 4445 0
 6553 00ae 013E     		subs	r6, r6, #1
 6554              	.LVL980:
 6555 00b0 DAD1     		bne	.L560
 6556 00b2 04E0     		b	.L552
 6557              	.LVL981:
 6558              	.L561:
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 6559              		.loc 1 4405 0
 6560 00b4 4FF00109 		mov	r9, #1
 6561 00b8 01E0     		b	.L552
 6562              	.L562:
ARM GAS  /tmp/ccTP8DMx.s 			page 236


4406:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) nfree++;
 6563              		.loc 1 4406 0
 6564 00ba 4FF00209 		mov	r9, #2
 6565              	.LVL982:
 6566              	.L552:
4448:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst = nfree;	/* Now free_clst is valid */
 6567              		.loc 1 4448 0
 6568 00be CAF80070 		str	r7, [r10]
4449:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;		/* FSInfo is to be updated */
 6569              		.loc 1 4449 0
 6570 00c2 079B     		ldr	r3, [sp, #28]
 6571 00c4 1F61     		str	r7, [r3, #16]
4450:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6572              		.loc 1 4450 0
 6573 00c6 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 6574 00c8 42F00102 		orr	r2, r2, #1
 6575 00cc 1A71     		strb	r2, [r3, #4]
 6576              	.LVL983:
 6577              	.L549:
4455:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6578              		.loc 1 4455 0
 6579 00ce 4846     		mov	r0, r9
 6580 00d0 08B0     		add	sp, sp, #32
 6581              	.LCFI82:
 6582              		.cfi_def_cfa_offset 32
 6583              		@ sp needed
 6584 00d2 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 6585              		.cfi_endproc
 6586              	.LFE173:
 6588 00d6 00BF     		.section	.text.f_truncate,"ax",%progbits
 6589              		.align	2
 6590              		.global	f_truncate
 6591              		.thumb
 6592              		.thumb_func
 6594              	f_truncate:
 6595              	.LFB174:
4467:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6596              		.loc 1 4467 0
 6597              		.cfi_startproc
 6598              		@ args = 0, pretend = 0, frame = 8
 6599              		@ frame_needed = 0, uses_anonymous_args = 0
 6600              	.LVL984:
 6601 0000 30B5     		push	{r4, r5, lr}
 6602              	.LCFI83:
 6603              		.cfi_def_cfa_offset 12
 6604              		.cfi_offset 4, -12
 6605              		.cfi_offset 5, -8
 6606              		.cfi_offset 14, -4
 6607 0002 83B0     		sub	sp, sp, #12
 6608              	.LCFI84:
 6609              		.cfi_def_cfa_offset 24
 6610 0004 0546     		mov	r5, r0
4473:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
 6611              		.loc 1 4473 0
 6612 0006 01A9     		add	r1, sp, #4
 6613 0008 FFF7FEFF 		bl	validate
 6614              	.LVL985:
ARM GAS  /tmp/ccTP8DMx.s 			page 237


4474:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 6615              		.loc 1 4474 0
 6616 000c 0028     		cmp	r0, #0
 6617 000e 47D1     		bne	.L571
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 6618              		.loc 1 4474 0 is_stmt 0 discriminator 2
 6619 0010 6C7D     		ldrb	r4, [r5, #21]	@ zero_extendqisi2
 6620              	.LVL986:
 6621 0012 002C     		cmp	r4, #0
 6622 0014 45D1     		bne	.L572
4475:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6623              		.loc 1 4475 0 is_stmt 1
 6624 0016 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 6625 0018 13F0020F 		tst	r3, #2
 6626 001c 43D0     		beq	.L573
4477:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
 6627              		.loc 1 4477 0
 6628 001e AB69     		ldr	r3, [r5, #24]
 6629 0020 EA68     		ldr	r2, [r5, #12]
 6630 0022 9342     		cmp	r3, r2
 6631 0024 41D2     		bcs	.L574
4478:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = remove_chain(&fp->obj, fp->obj.sclust, 0);
 6632              		.loc 1 4478 0
 6633 0026 43B9     		cbnz	r3, .L566
4479:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.sclust = 0;
 6634              		.loc 1 4479 0
 6635 0028 0022     		movs	r2, #0
 6636 002a A968     		ldr	r1, [r5, #8]
 6637 002c 2846     		mov	r0, r5
 6638 002e FFF7FEFF 		bl	remove_chain
 6639              	.LVL987:
 6640 0032 0446     		mov	r4, r0
 6641              	.LVL988:
4480:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* When truncate a part of the file, remove remaining clusters */
 6642              		.loc 1 4480 0
 6643 0034 0023     		movs	r3, #0
 6644 0036 AB60     		str	r3, [r5, #8]
 6645 0038 15E0     		b	.L567
 6646              	.L566:
4482:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
 6647              		.loc 1 4482 0
 6648 003a E969     		ldr	r1, [r5, #28]
 6649 003c 2846     		mov	r0, r5
 6650 003e FFF7FEFF 		bl	get_fat
 6651              	.LVL989:
4484:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
 6652              		.loc 1 4484 0
 6653 0042 B0F1FF3F 		cmp	r0, #-1
 6654 0046 00D1     		bne	.L568
 6655 0048 0124     		movs	r4, #1
 6656              	.L568:
 6657              	.LVL990:
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
 6658              		.loc 1 4485 0
 6659 004a 0128     		cmp	r0, #1
 6660 004c 00D1     		bne	.L569
 6661 004e 0224     		movs	r4, #2
ARM GAS  /tmp/ccTP8DMx.s 			page 238


 6662              	.LVL991:
 6663              	.L569:
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
 6664              		.loc 1 4486 0
 6665 0050 4CB9     		cbnz	r4, .L567
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
 6666              		.loc 1 4486 0 is_stmt 0 discriminator 1
 6667 0052 019B     		ldr	r3, [sp, #4]
 6668 0054 5B69     		ldr	r3, [r3, #20]
 6669 0056 9842     		cmp	r0, r3
 6670 0058 05D2     		bcs	.L567
4487:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6671              		.loc 1 4487 0 is_stmt 1
 6672 005a EA69     		ldr	r2, [r5, #28]
 6673 005c 0146     		mov	r1, r0
 6674 005e 2846     		mov	r0, r5
 6675              	.LVL992:
 6676 0060 FFF7FEFF 		bl	remove_chain
 6677              	.LVL993:
 6678 0064 0446     		mov	r4, r0
 6679              	.LVL994:
 6680              	.L567:
4490:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_MODIFIED;
 6681              		.loc 1 4490 0
 6682 0066 AB69     		ldr	r3, [r5, #24]
 6683 0068 EB60     		str	r3, [r5, #12]
4491:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 6684              		.loc 1 4491 0
 6685 006a 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 6686 006c 43F04003 		orr	r3, r3, #64
 6687 0070 2B75     		strb	r3, [r5, #20]
4493:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
 6688              		.loc 1 4493 0
 6689 0072 8CB9     		cbnz	r4, .L570
4493:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
 6690              		.loc 1 4493 0 is_stmt 0 discriminator 1
 6691 0074 13F0800F 		tst	r3, #128
 6692 0078 0ED0     		beq	.L570
4494:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 6693              		.loc 1 4494 0 is_stmt 1
 6694 007a 0123     		movs	r3, #1
 6695 007c 2A6A     		ldr	r2, [r5, #32]
 6696 007e 05F13001 		add	r1, r5, #48
 6697 0082 0198     		ldr	r0, [sp, #4]
 6698 0084 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 6699 0086 FFF7FEFF 		bl	disk_write
 6700              	.LVL995:
 6701 008a 20B9     		cbnz	r0, .L577
4497:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6702              		.loc 1 4497 0
 6703 008c 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 6704 008e 03F07F03 		and	r3, r3, #127
 6705 0092 2B75     		strb	r3, [r5, #20]
 6706 0094 00E0     		b	.L570
 6707              	.L577:
4495:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 6708              		.loc 1 4495 0
ARM GAS  /tmp/ccTP8DMx.s 			page 239


 6709 0096 0124     		movs	r4, #1
 6710              	.LVL996:
 6711              	.L570:
4501:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 6712              		.loc 1 4501 0
 6713 0098 4CB1     		cbz	r4, .L578
4501:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 6714              		.loc 1 4501 0 is_stmt 0 discriminator 1
 6715 009a 6C75     		strb	r4, [r5, #21]
 6716 009c 2046     		mov	r0, r4
 6717 009e 07E0     		b	.L565
 6718              	.LVL997:
 6719              	.L571:
 6720 00a0 06E0     		b	.L565
 6721              	.LVL998:
 6722              	.L572:
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 6723              		.loc 1 4474 0 is_stmt 1
 6724 00a2 2046     		mov	r0, r4
 6725 00a4 04E0     		b	.L565
 6726              	.L573:
4475:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6727              		.loc 1 4475 0
 6728 00a6 0720     		movs	r0, #7
 6729 00a8 02E0     		b	.L565
 6730              	.L574:
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 6731              		.loc 1 4474 0
 6732 00aa 2046     		mov	r0, r4
 6733 00ac 00E0     		b	.L565
 6734              	.L578:
 6735 00ae 2046     		mov	r0, r4
 6736              	.LVL999:
 6737              	.L565:
4505:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6738              		.loc 1 4505 0
 6739 00b0 03B0     		add	sp, sp, #12
 6740              	.LCFI85:
 6741              		.cfi_def_cfa_offset 12
 6742              		@ sp needed
 6743 00b2 30BD     		pop	{r4, r5, pc}
 6744              		.cfi_endproc
 6745              	.LFE174:
 6747              		.section	.text.f_unlink,"ax",%progbits
 6748              		.align	2
 6749              		.global	f_unlink
 6750              		.thumb
 6751              		.thumb_func
 6753              	f_unlink:
 6754              	.LFB175:
4517:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6755              		.loc 1 4517 0
 6756              		.cfi_startproc
 6757              		@ args = 0, pretend = 0, frame = 112
 6758              		@ frame_needed = 0, uses_anonymous_args = 0
 6759              	.LVL1000:
 6760 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  /tmp/ccTP8DMx.s 			page 240


 6761              	.LCFI86:
 6762              		.cfi_def_cfa_offset 16
 6763              		.cfi_offset 4, -16
 6764              		.cfi_offset 5, -12
 6765              		.cfi_offset 6, -8
 6766              		.cfi_offset 14, -4
 6767 0002 9CB0     		sub	sp, sp, #112
 6768              	.LCFI87:
 6769              		.cfi_def_cfa_offset 128
 6770 0004 0190     		str	r0, [sp, #4]
 6771              	.LVL1001:
4529:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
 6772              		.loc 1 4529 0
 6773 0006 0222     		movs	r2, #2
 6774 0008 03A9     		add	r1, sp, #12
 6775 000a 01A8     		add	r0, sp, #4
 6776              	.LVL1002:
 6777 000c FFF7FEFF 		bl	find_volume
 6778              	.LVL1003:
4530:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6779              		.loc 1 4530 0
 6780 0010 039B     		ldr	r3, [sp, #12]
 6781 0012 1093     		str	r3, [sp, #64]
4531:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 6782              		.loc 1 4531 0
 6783 0014 0446     		mov	r4, r0
 6784 0016 0028     		cmp	r0, #0
 6785 0018 4BD1     		bne	.L581
4533:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT)) {
 6786              		.loc 1 4533 0
 6787 001a 0199     		ldr	r1, [sp, #4]
 6788 001c 10A8     		add	r0, sp, #64
 6789              	.LVL1004:
 6790 001e FFF7FEFF 		bl	follow_path
 6791              	.LVL1005:
4538:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6792              		.loc 1 4538 0
 6793 0022 0446     		mov	r4, r0
 6794 0024 20B9     		cbnz	r0, .L582
4538:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6795              		.loc 1 4538 0 is_stmt 0 discriminator 1
 6796 0026 0221     		movs	r1, #2
 6797 0028 10A8     		add	r0, sp, #64
 6798              	.LVL1006:
 6799 002a FFF7FEFF 		bl	chk_lock
 6800              	.LVL1007:
 6801 002e 0446     		mov	r4, r0
 6802              	.LVL1008:
 6803              	.L582:
4540:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
 6804              		.loc 1 4540 0 is_stmt 1
 6805 0030 002C     		cmp	r4, #0
 6806 0032 3ED1     		bne	.L581
4541:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
 6807              		.loc 1 4541 0
 6808 0034 9DF96F30 		ldrsb	r3, [sp, #111]
 6809 0038 002B     		cmp	r3, #0
ARM GAS  /tmp/ccTP8DMx.s 			page 241


 6810 003a 05DB     		blt	.L587
4544:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
 6811              		.loc 1 4544 0
 6812 003c 9DF84630 		ldrb	r3, [sp, #70]	@ zero_extendqisi2
 6813 0040 13F0010F 		tst	r3, #1
 6814 0044 02D1     		bne	.L588
 6815 0046 02E0     		b	.L583
 6816              	.L587:
4542:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 6817              		.loc 1 4542 0
 6818 0048 0624     		movs	r4, #6
 6819              	.LVL1009:
 6820 004a 00E0     		b	.L583
 6821              	.LVL1010:
 6822              	.L588:
4545:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6823              		.loc 1 4545 0
 6824 004c 0724     		movs	r4, #7
 6825              	.LVL1011:
 6826              	.L583:
4548:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 6827              		.loc 1 4548 0
 6828 004e ECB9     		cbnz	r4, .L589
4558:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6829              		.loc 1 4558 0
 6830 0050 039E     		ldr	r6, [sp, #12]
 6831 0052 1899     		ldr	r1, [sp, #96]
 6832 0054 3046     		mov	r0, r6
 6833 0056 FFF7FEFF 		bl	ld_clust
 6834              	.LVL1012:
 6835 005a 0546     		mov	r5, r0
 6836              	.LVL1013:
4560:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
 6837              		.loc 1 4560 0
 6838 005c 9DF84630 		ldrb	r3, [sp, #70]	@ zero_extendqisi2
 6839 0060 13F0100F 		tst	r3, #16
 6840 0064 13D0     		beq	.L584
4567:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.obj.sclust = dclst;
 6841              		.loc 1 4567 0
 6842 0066 0496     		str	r6, [sp, #16]
4568:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 6843              		.loc 1 4568 0
 6844 0068 0690     		str	r0, [sp, #24]
4575:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
 6845              		.loc 1 4575 0
 6846 006a 0021     		movs	r1, #0
 6847 006c 04A8     		add	r0, sp, #16
 6848              	.LVL1014:
 6849 006e FFF7FEFF 		bl	dir_sdi
 6850              	.LVL1015:
4576:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item */
 6851              		.loc 1 4576 0
 6852 0072 0446     		mov	r4, r0
 6853 0074 58B9     		cbnz	r0, .L584
4577:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? */
 6854              		.loc 1 4577 0
 6855 0076 0021     		movs	r1, #0
ARM GAS  /tmp/ccTP8DMx.s 			page 242


 6856 0078 04A8     		add	r0, sp, #16
 6857              	.LVL1016:
 6858 007a FFF7FEFF 		bl	dir_read
 6859              	.LVL1017:
4578:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
 6860              		.loc 1 4578 0
 6861 007e 0346     		mov	r3, r0
 6862 0080 00B9     		cbnz	r0, .L585
 6863 0082 0723     		movs	r3, #7
 6864              	.L585:
 6865              	.LVL1018:
4579:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 6866              		.loc 1 4579 0
 6867 0084 042B     		cmp	r3, #4
 6868 0086 02D0     		beq	.L584
 6869 0088 1C46     		mov	r4, r3
 6870 008a 00E0     		b	.L584
 6871              	.LVL1019:
 6872              	.L589:
4520:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
 6873              		.loc 1 4520 0
 6874 008c 0025     		movs	r5, #0
 6875              	.LVL1020:
 6876              	.L584:
4584:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&dj);			/* Remove the directory entry */
 6877              		.loc 1 4584 0
 6878 008e 84B9     		cbnz	r4, .L581
4585:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && dclst) {	/* Remove the cluster chain if exist */
 6879              		.loc 1 4585 0
 6880 0090 10A8     		add	r0, sp, #64
 6881 0092 FFF7FEFF 		bl	dir_remove
 6882              	.LVL1021:
4586:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 6883              		.loc 1 4586 0
 6884 0096 0446     		mov	r4, r0
 6885 0098 30B9     		cbnz	r0, .L586
4586:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 6886              		.loc 1 4586 0 is_stmt 0 discriminator 1
 6887 009a 2DB1     		cbz	r5, .L586
4590:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6888              		.loc 1 4590 0 is_stmt 1
 6889 009c 0022     		movs	r2, #0
 6890 009e 2946     		mov	r1, r5
 6891 00a0 10A8     		add	r0, sp, #64
 6892              	.LVL1022:
 6893 00a2 FFF7FEFF 		bl	remove_chain
 6894              	.LVL1023:
 6895 00a6 0446     		mov	r4, r0
 6896              	.LVL1024:
 6897              	.L586:
4593:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6898              		.loc 1 4593 0
 6899 00a8 1CB9     		cbnz	r4, .L581
4593:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6900              		.loc 1 4593 0 is_stmt 0 discriminator 1
 6901 00aa 0398     		ldr	r0, [sp, #12]
 6902 00ac FFF7FEFF 		bl	sync_fs
ARM GAS  /tmp/ccTP8DMx.s 			page 243


 6903              	.LVL1025:
 6904 00b0 0446     		mov	r4, r0
 6905              	.LVL1026:
 6906              	.L581:
4600:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6907              		.loc 1 4600 0 is_stmt 1
 6908 00b2 2046     		mov	r0, r4
 6909 00b4 1CB0     		add	sp, sp, #112
 6910              	.LCFI88:
 6911              		.cfi_def_cfa_offset 16
 6912              		@ sp needed
 6913 00b6 70BD     		pop	{r4, r5, r6, pc}
 6914              		.cfi_endproc
 6915              	.LFE175:
 6917              		.section	.text.f_mkdir,"ax",%progbits
 6918              		.align	2
 6919              		.global	f_mkdir
 6920              		.thumb
 6921              		.thumb_func
 6923              	f_mkdir:
 6924              	.LFB176:
4612:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6925              		.loc 1 4612 0
 6926              		.cfi_startproc
 6927              		@ args = 0, pretend = 0, frame = 64
 6928              		@ frame_needed = 0, uses_anonymous_args = 0
 6929              	.LVL1027:
 6930 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6931              	.LCFI89:
 6932              		.cfi_def_cfa_offset 36
 6933              		.cfi_offset 4, -36
 6934              		.cfi_offset 5, -32
 6935              		.cfi_offset 6, -28
 6936              		.cfi_offset 7, -24
 6937              		.cfi_offset 8, -20
 6938              		.cfi_offset 9, -16
 6939              		.cfi_offset 10, -12
 6940              		.cfi_offset 11, -8
 6941              		.cfi_offset 14, -4
 6942 0004 91B0     		sub	sp, sp, #68
 6943              	.LCFI90:
 6944              		.cfi_def_cfa_offset 104
 6945 0006 0190     		str	r0, [sp, #4]
4623:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
 6946              		.loc 1 4623 0
 6947 0008 0222     		movs	r2, #2
 6948 000a 03A9     		add	r1, sp, #12
 6949 000c 01A8     		add	r0, sp, #4
 6950              	.LVL1028:
 6951 000e FFF7FEFF 		bl	find_volume
 6952              	.LVL1029:
4624:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6953              		.loc 1 4624 0
 6954 0012 039B     		ldr	r3, [sp, #12]
 6955 0014 0493     		str	r3, [sp, #16]
4625:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 6956              		.loc 1 4625 0
ARM GAS  /tmp/ccTP8DMx.s 			page 244


 6957 0016 0446     		mov	r4, r0
 6958 0018 0028     		cmp	r0, #0
 6959 001a 40F09A80 		bne	.L593
4627:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 6960              		.loc 1 4627 0
 6961 001e 0199     		ldr	r1, [sp, #4]
 6962 0020 04A8     		add	r0, sp, #16
 6963              	.LVL1030:
 6964 0022 FFF7FEFF 		bl	follow_path
 6965              	.LVL1031:
4628:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
 6966              		.loc 1 4628 0
 6967 0026 0346     		mov	r3, r0
 6968 0028 00B9     		cbnz	r0, .L594
 6969 002a 0823     		movs	r3, #8
 6970              	.L594:
 6971              	.LVL1032:
4632:Middlewares/Third_Party/FatFs/src/ff.c **** 			dcl = create_chain(&dj.obj, 0);		/* Allocate a cluster for the new directory table */
 6972              		.loc 1 4632 0
 6973 002c 042B     		cmp	r3, #4
 6974 002e 40F08F80 		bne	.L606
4633:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.obj.objsize = (DWORD)fs->csize * SS(fs);
 6975              		.loc 1 4633 0
 6976 0032 0021     		movs	r1, #0
 6977 0034 04A8     		add	r0, sp, #16
 6978 0036 FFF7FEFF 		bl	create_chain
 6979              	.LVL1033:
4634:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
 6980              		.loc 1 4634 0
 6981 003a 039A     		ldr	r2, [sp, #12]
 6982 003c 5389     		ldrh	r3, [r2, #10]
 6983 003e 5B02     		lsls	r3, r3, #9
 6984 0040 0793     		str	r3, [sp, #28]
 6985              	.LVL1034:
4636:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
 6986              		.loc 1 4636 0
 6987 0042 8046     		mov	r8, r0
 6988 0044 00B9     		cbnz	r0, .L595
 6989 0046 0724     		movs	r4, #7
 6990              	.L595:
 6991              	.LVL1035:
4637:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 6992              		.loc 1 4637 0
 6993 0048 B8F1010F 		cmp	r8, #1
 6994 004c 00D1     		bne	.L596
 6995 004e 0224     		movs	r4, #2
 6996              	.LVL1036:
 6997              	.L596:
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
 6998              		.loc 1 4638 0
 6999 0050 B8F1FF3F 		cmp	r8, #-1
 7000 0054 00D1     		bne	.L597
 7001 0056 0124     		movs	r4, #1
 7002              	.LVL1037:
 7003              	.L597:
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();
 7004              		.loc 1 4639 0
ARM GAS  /tmp/ccTP8DMx.s 			page 245


 7005 0058 1CB9     		cbnz	r4, .L598
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();
 7006              		.loc 1 4639 0 is_stmt 0 discriminator 1
 7007 005a 1046     		mov	r0, r2
 7008              	.LVL1038:
 7009 005c FFF7FEFF 		bl	sync_window
 7010              	.LVL1039:
 7011 0060 0446     		mov	r4, r0
 7012              	.LVL1040:
 7013              	.L598:
4640:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
 7014              		.loc 1 4640 0 is_stmt 1
 7015 0062 FFF7FEFF 		bl	get_fattime
 7016              	.LVL1041:
 7017 0066 8246     		mov	r10, r0
 7018              	.LVL1042:
4641:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, dcl);
 7019              		.loc 1 4641 0
 7020 0068 002C     		cmp	r4, #0
 7021 006a 4FD1     		bne	.L599
4642:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = fs->win;
 7022              		.loc 1 4642 0
 7023 006c 039D     		ldr	r5, [sp, #12]
 7024 006e 4146     		mov	r1, r8
 7025 0070 2846     		mov	r0, r5
 7026              	.LVL1043:
 7027 0072 FFF7FEFF 		bl	clust2sect
 7028              	.LVL1044:
 7029 0076 0646     		mov	r6, r0
 7030              	.LVL1045:
4643:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir, 0, SS(fs));
 7031              		.loc 1 4643 0
 7032 0078 05F13009 		add	r9, r5, #48
 7033              	.LVL1046:
4644:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 7034              		.loc 1 4644 0
 7035 007c 4FF40072 		mov	r2, #512
 7036 0080 0021     		movs	r1, #0
 7037 0082 4846     		mov	r0, r9
 7038              	.LVL1047:
 7039 0084 FFF7FEFF 		bl	mem_set
 7040              	.LVL1048:
4646:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Name] = '.';
 7041              		.loc 1 4646 0
 7042 0088 0B22     		movs	r2, #11
 7043 008a 2021     		movs	r1, #32
 7044 008c 4846     		mov	r0, r9
 7045 008e FFF7FEFF 		bl	mem_set
 7046              	.LVL1049:
4647:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;
 7047              		.loc 1 4647 0
 7048 0092 4FF02E0B 		mov	fp, #46
 7049 0096 85F830B0 		strb	fp, [r5, #48]
4648:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);
 7050              		.loc 1 4648 0
 7051 009a 1023     		movs	r3, #16
 7052 009c 85F83B30 		strb	r3, [r5, #59]
ARM GAS  /tmp/ccTP8DMx.s 			page 246


4649:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);
 7053              		.loc 1 4649 0
 7054 00a0 5146     		mov	r1, r10
 7055 00a2 05F14600 		add	r0, r5, #70
 7056 00a6 FFF7FEFF 		bl	st_dword
 7057              	.LVL1050:
4650:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dir + SZDIRE, dir, SZDIRE); 	/* Create ".." entry */
 7058              		.loc 1 4650 0
 7059 00aa 4246     		mov	r2, r8
 7060 00ac 4946     		mov	r1, r9
 7061 00ae 0398     		ldr	r0, [sp, #12]
 7062 00b0 FFF7FEFF 		bl	st_clust
 7063              	.LVL1051:
4651:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[SZDIRE + 1] = '.'; pcl = dj.obj.sclust;
 7064              		.loc 1 4651 0
 7065 00b4 05F15007 		add	r7, r5, #80
 7066 00b8 2022     		movs	r2, #32
 7067 00ba 4946     		mov	r1, r9
 7068 00bc 3846     		mov	r0, r7
 7069 00be FFF7FEFF 		bl	mem_cpy
 7070              	.LVL1052:
4652:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_FAT32 && pcl == fs->dirbase) pcl = 0;
 7071              		.loc 1 4652 0
 7072 00c2 85F851B0 		strb	fp, [r5, #81]
 7073 00c6 069A     		ldr	r2, [sp, #24]
 7074              	.LVL1053:
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 7075              		.loc 1 4653 0
 7076 00c8 0398     		ldr	r0, [sp, #12]
 7077 00ca 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 7078 00cc 032B     		cmp	r3, #3
 7079 00ce 03D1     		bne	.L600
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 7080              		.loc 1 4653 0 is_stmt 0 discriminator 1
 7081 00d0 436A     		ldr	r3, [r0, #36]
 7082 00d2 9A42     		cmp	r2, r3
 7083 00d4 00D1     		bne	.L600
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 7084              		.loc 1 4653 0
 7085 00d6 0022     		movs	r2, #0
 7086              	.LVL1054:
 7087              	.L600:
4654:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7088              		.loc 1 4654 0 is_stmt 1
 7089 00d8 3946     		mov	r1, r7
 7090 00da FFF7FEFF 		bl	st_clust
 7091              	.LVL1055:
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
 7092              		.loc 1 4656 0
 7093 00de 039B     		ldr	r3, [sp, #12]
 7094 00e0 5D89     		ldrh	r5, [r3, #10]
 7095              	.LVL1056:
 7096 00e2 11E0     		b	.L601
 7097              	.L602:
4657:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 7098              		.loc 1 4657 0
 7099 00e4 039B     		ldr	r3, [sp, #12]
ARM GAS  /tmp/ccTP8DMx.s 			page 247


 7100 00e6 771C     		adds	r7, r6, #1
 7101              	.LVL1057:
 7102 00e8 DE62     		str	r6, [r3, #44]
4658:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_window(fs);
 7103              		.loc 1 4658 0
 7104 00ea 0122     		movs	r2, #1
 7105 00ec DA70     		strb	r2, [r3, #3]
4659:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
 7106              		.loc 1 4659 0
 7107 00ee 0398     		ldr	r0, [sp, #12]
 7108 00f0 FFF7FEFF 		bl	sync_window
 7109              	.LVL1058:
4660:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir, 0, SS(fs));
 7110              		.loc 1 4660 0
 7111 00f4 0446     		mov	r4, r0
 7112 00f6 48B9     		cbnz	r0, .L599
4661:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7113              		.loc 1 4661 0 discriminator 2
 7114 00f8 4FF40072 		mov	r2, #512
 7115 00fc 0021     		movs	r1, #0
 7116 00fe 4846     		mov	r0, r9
 7117              	.LVL1059:
 7118 0100 FFF7FEFF 		bl	mem_set
 7119              	.LVL1060:
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
 7120              		.loc 1 4656 0 discriminator 2
 7121 0104 013D     		subs	r5, r5, #1
 7122              	.LVL1061:
4657:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 7123              		.loc 1 4657 0 discriminator 2
 7124 0106 3E46     		mov	r6, r7
 7125              	.LVL1062:
 7126              	.L601:
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
 7127              		.loc 1 4656 0 discriminator 1
 7128 0108 002D     		cmp	r5, #0
 7129 010a EBD1     		bne	.L602
 7130              	.LVL1063:
 7131              	.L599:
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_register(&dj);	/* Register the object to the directoy */
 7132              		.loc 1 4664 0
 7133 010c 1CB9     		cbnz	r4, .L603
4665:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7134              		.loc 1 4665 0
 7135 010e 04A8     		add	r0, sp, #16
 7136 0110 FFF7FEFF 		bl	dir_register
 7137              	.LVL1064:
 7138 0114 0446     		mov	r4, r0
 7139              	.LVL1065:
 7140              	.L603:
4667:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7141              		.loc 1 4667 0
 7142 0116 ACB9     		cbnz	r4, .L604
4680:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);	/* Created time */
 7143              		.loc 1 4680 0
 7144 0118 0C9D     		ldr	r5, [sp, #48]
 7145              	.LVL1066:
ARM GAS  /tmp/ccTP8DMx.s 			page 248


4681:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);				/* Table start cluster */
 7146              		.loc 1 4681 0
 7147 011a 5146     		mov	r1, r10
 7148 011c 05F11600 		add	r0, r5, #22
 7149 0120 FFF7FEFF 		bl	st_dword
 7150              	.LVL1067:
4682:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;				/* Attribute */
 7151              		.loc 1 4682 0
 7152 0124 4246     		mov	r2, r8
 7153 0126 2946     		mov	r1, r5
 7154 0128 0398     		ldr	r0, [sp, #12]
 7155 012a FFF7FEFF 		bl	st_clust
 7156              	.LVL1068:
4683:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 7157              		.loc 1 4683 0
 7158 012e 1023     		movs	r3, #16
 7159 0130 EB72     		strb	r3, [r5, #11]
4684:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7160              		.loc 1 4684 0
 7161 0132 0122     		movs	r2, #1
 7162 0134 039B     		ldr	r3, [sp, #12]
 7163 0136 DA70     		strb	r2, [r3, #3]
4686:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
 7164              		.loc 1 4686 0
 7165 0138 5CB9     		cbnz	r4, .L593
4687:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7166              		.loc 1 4687 0
 7167 013a 0398     		ldr	r0, [sp, #12]
 7168 013c FFF7FEFF 		bl	sync_fs
 7169              	.LVL1069:
 7170 0140 0446     		mov	r4, r0
 7171              	.LVL1070:
 7172 0142 06E0     		b	.L593
 7173              	.LVL1071:
 7174              	.L604:
4690:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7175              		.loc 1 4690 0
 7176 0144 0022     		movs	r2, #0
 7177 0146 4146     		mov	r1, r8
 7178 0148 04A8     		add	r0, sp, #16
 7179 014a FFF7FEFF 		bl	remove_chain
 7180              	.LVL1072:
 7181 014e 00E0     		b	.L593
 7182              	.LVL1073:
 7183              	.L606:
 7184 0150 1C46     		mov	r4, r3
 7185              	.LVL1074:
 7186              	.L593:
4697:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7187              		.loc 1 4697 0
 7188 0152 2046     		mov	r0, r4
 7189 0154 11B0     		add	sp, sp, #68
 7190              	.LCFI91:
 7191              		.cfi_def_cfa_offset 36
 7192              		@ sp needed
 7193 0156 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7194              		.cfi_endproc
ARM GAS  /tmp/ccTP8DMx.s 			page 249


 7195              	.LFE176:
 7197 015a 00BF     		.section	.text.f_rename,"ax",%progbits
 7198              		.align	2
 7199              		.global	f_rename
 7200              		.thumb
 7201              		.thumb_func
 7203              	f_rename:
 7204              	.LFB177:
4710:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7205              		.loc 1 4710 0
 7206              		.cfi_startproc
 7207              		@ args = 0, pretend = 0, frame = 136
 7208              		@ frame_needed = 0, uses_anonymous_args = 0
 7209              	.LVL1075:
 7210 0000 30B5     		push	{r4, r5, lr}
 7211              	.LCFI92:
 7212              		.cfi_def_cfa_offset 12
 7213              		.cfi_offset 4, -12
 7214              		.cfi_offset 5, -8
 7215              		.cfi_offset 14, -4
 7216 0002 A3B0     		sub	sp, sp, #140
 7217              	.LCFI93:
 7218              		.cfi_def_cfa_offset 152
 7219 0004 0190     		str	r0, [sp, #4]
 7220 0006 22A8     		add	r0, sp, #136
 7221              	.LVL1076:
 7222 0008 40F8881D 		str	r1, [r0, #-136]!
4719:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path_old, &fs, FA_WRITE);	/* Get logical drive of the old object */
 7223              		.loc 1 4719 0
 7224 000c FFF7FEFF 		bl	get_ldnumber
 7225              	.LVL1077:
4720:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7226              		.loc 1 4720 0
 7227 0010 0222     		movs	r2, #2
 7228 0012 09A9     		add	r1, sp, #36
 7229 0014 01A8     		add	r0, sp, #4
 7230              	.LVL1078:
 7231 0016 FFF7FEFF 		bl	find_volume
 7232              	.LVL1079:
4721:Middlewares/Third_Party/FatFs/src/ff.c **** 		djo.obj.fs = fs;
 7233              		.loc 1 4721 0
 7234 001a 0446     		mov	r4, r0
 7235 001c 0028     		cmp	r0, #0
 7236 001e 7DD1     		bne	.L613
4722:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 7237              		.loc 1 4722 0
 7238 0020 099B     		ldr	r3, [sp, #36]
 7239 0022 1693     		str	r3, [sp, #88]
4724:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (djo.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check vali
 7240              		.loc 1 4724 0
 7241 0024 0199     		ldr	r1, [sp, #4]
 7242 0026 16A8     		add	r0, sp, #88
 7243              	.LVL1080:
 7244 0028 FFF7FEFF 		bl	follow_path
 7245              	.LVL1081:
4725:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 7246              		.loc 1 4725 0
ARM GAS  /tmp/ccTP8DMx.s 			page 250


 7247 002c 0446     		mov	r4, r0
 7248 002e 28B9     		cbnz	r0, .L614
4725:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 7249              		.loc 1 4725 0 is_stmt 0 discriminator 1
 7250 0030 9DF88730 		ldrb	r3, [sp, #135]	@ zero_extendqisi2
 7251 0034 13F0A00F 		tst	r3, #160
 7252 0038 00D0     		beq	.L614
4725:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 7253              		.loc 1 4725 0
 7254 003a 0624     		movs	r4, #6
 7255              	.L614:
 7256              	.LVL1082:
4727:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = chk_lock(&djo, 2);
 7257              		.loc 1 4727 0 is_stmt 1
 7258 003c 24B9     		cbnz	r4, .L615
4728:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 7259              		.loc 1 4728 0
 7260 003e 0221     		movs	r1, #2
 7261 0040 16A8     		add	r0, sp, #88
 7262 0042 FFF7FEFF 		bl	chk_lock
 7263              	.LVL1083:
 7264 0046 0446     		mov	r4, r0
 7265              	.LVL1084:
 7266              	.L615:
4731:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7267              		.loc 1 4731 0
 7268 0048 002C     		cmp	r4, #0
 7269 004a 67D1     		bne	.L613
4758:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
 7270              		.loc 1 4758 0
 7271 004c 1522     		movs	r2, #21
 7272 004e 1E99     		ldr	r1, [sp, #120]
 7273 0050 0B31     		adds	r1, r1, #11
 7274 0052 03A8     		add	r0, sp, #12
 7275 0054 FFF7FEFF 		bl	mem_cpy
 7276              	.LVL1085:
4759:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
 7277              		.loc 1 4759 0
 7278 0058 3022     		movs	r2, #48
 7279 005a 16A9     		add	r1, sp, #88
 7280 005c 0AA8     		add	r0, sp, #40
 7281 005e FFF7FEFF 		bl	mem_cpy
 7282              	.LVL1086:
4760:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
 7283              		.loc 1 4760 0
 7284 0062 0099     		ldr	r1, [sp]
 7285 0064 0AA8     		add	r0, sp, #40
 7286 0066 FFF7FEFF 		bl	follow_path
 7287              	.LVL1087:
4761:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
 7288              		.loc 1 4761 0
 7289 006a 0446     		mov	r4, r0
 7290 006c 60B9     		cbnz	r0, .L616
4762:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7291              		.loc 1 4762 0
 7292 006e 189B     		ldr	r3, [sp, #96]
 7293 0070 0C9A     		ldr	r2, [sp, #48]
ARM GAS  /tmp/ccTP8DMx.s 			page 251


 7294 0072 9A42     		cmp	r2, r3
 7295 0074 05D1     		bne	.L619
4762:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7296              		.loc 1 4762 0 is_stmt 0 discriminator 1
 7297 0076 1B9B     		ldr	r3, [sp, #108]
 7298 0078 0F9A     		ldr	r2, [sp, #60]
 7299 007a 9A42     		cmp	r2, r3
 7300 007c 03D0     		beq	.L620
4762:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7301              		.loc 1 4762 0
 7302 007e 0824     		movs	r4, #8
 7303 0080 02E0     		b	.L616
 7304              	.L619:
 7305 0082 0824     		movs	r4, #8
 7306 0084 00E0     		b	.L616
 7307              	.L620:
 7308 0086 0424     		movs	r4, #4
 7309              	.L616:
 7310              	.LVL1088:
4764:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
 7311              		.loc 1 4764 0 is_stmt 1
 7312 0088 042C     		cmp	r4, #4
 7313 008a 3DD1     		bne	.L617
4765:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
 7314              		.loc 1 4765 0
 7315 008c 0AA8     		add	r0, sp, #40
 7316 008e FFF7FEFF 		bl	dir_register
 7317              	.LVL1089:
4766:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir = djn.dir;					/* Copy information about object except name */
 7318              		.loc 1 4766 0
 7319 0092 0446     		mov	r4, r0
 7320 0094 0028     		cmp	r0, #0
 7321 0096 37D1     		bne	.L617
4767:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
 7322              		.loc 1 4767 0
 7323 0098 129D     		ldr	r5, [sp, #72]
 7324              	.LVL1090:
4768:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
 7325              		.loc 1 4768 0
 7326 009a 1322     		movs	r2, #19
 7327 009c 0DF10E01 		add	r1, sp, #14
 7328 00a0 05F10D00 		add	r0, r5, #13
 7329              	.LVL1091:
 7330 00a4 FFF7FEFF 		bl	mem_cpy
 7331              	.LVL1092:
4769:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 7332              		.loc 1 4769 0
 7333 00a8 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
 7334 00ac 43F02003 		orr	r3, r3, #32
 7335 00b0 EB72     		strb	r3, [r5, #11]
4770:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.obj.sclust != djn.obj.sclust) {	/* Update .. entry in the
 7336              		.loc 1 4770 0
 7337 00b2 0122     		movs	r2, #1
 7338 00b4 099B     		ldr	r3, [sp, #36]
 7339 00b6 DA70     		strb	r2, [r3, #3]
4771:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
 7340              		.loc 1 4771 0
ARM GAS  /tmp/ccTP8DMx.s 			page 252


 7341 00b8 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 7342 00ba 13F0100F 		tst	r3, #16
 7343 00be 23D0     		beq	.L617
4771:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
 7344              		.loc 1 4771 0 is_stmt 0 discriminator 1
 7345 00c0 0C9B     		ldr	r3, [sp, #48]
 7346 00c2 189A     		ldr	r2, [sp, #96]
 7347 00c4 9A42     		cmp	r2, r3
 7348 00c6 1FD0     		beq	.L617
4772:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!dw) {
 7349              		.loc 1 4772 0 is_stmt 1
 7350 00c8 099C     		ldr	r4, [sp, #36]
 7351 00ca 2946     		mov	r1, r5
 7352 00cc 2046     		mov	r0, r4
 7353 00ce FFF7FEFF 		bl	ld_clust
 7354              	.LVL1093:
 7355 00d2 0146     		mov	r1, r0
 7356 00d4 2046     		mov	r0, r4
 7357 00d6 FFF7FEFF 		bl	clust2sect
 7358              	.LVL1094:
4773:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = FR_INT_ERR;
 7359              		.loc 1 4773 0
 7360 00da 0146     		mov	r1, r0
 7361 00dc 98B1     		cbz	r0, .L621
4777:Middlewares/Third_Party/FatFs/src/ff.c **** 								dir = fs->win + SZDIRE * 1;	/* Ptr to .. entry */
 7362              		.loc 1 4777 0
 7363 00de 2046     		mov	r0, r4
 7364              	.LVL1095:
 7365 00e0 FFF7FEFF 		bl	move_window
 7366              	.LVL1096:
4778:Middlewares/Third_Party/FatFs/src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
 7367              		.loc 1 4778 0
 7368 00e4 099B     		ldr	r3, [sp, #36]
 7369 00e6 03F15001 		add	r1, r3, #80
 7370              	.LVL1097:
4779:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
 7371              		.loc 1 4779 0
 7372 00ea 0446     		mov	r4, r0
 7373 00ec 60B9     		cbnz	r0, .L617
4779:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
 7374              		.loc 1 4779 0 is_stmt 0 discriminator 1
 7375 00ee 93F85120 		ldrb	r2, [r3, #81]	@ zero_extendqisi2
 7376 00f2 2E2A     		cmp	r2, #46
 7377 00f4 08D1     		bne	.L617
4780:Middlewares/Third_Party/FatFs/src/ff.c **** 									fs->wflag = 1;
 7378              		.loc 1 4780 0 is_stmt 1
 7379 00f6 0C9A     		ldr	r2, [sp, #48]
 7380 00f8 1846     		mov	r0, r3
 7381              	.LVL1098:
 7382 00fa FFF7FEFF 		bl	st_clust
 7383              	.LVL1099:
4781:Middlewares/Third_Party/FatFs/src/ff.c **** 								}
 7384              		.loc 1 4781 0
 7385 00fe 0122     		movs	r2, #1
 7386 0100 099B     		ldr	r3, [sp, #36]
 7387 0102 DA70     		strb	r2, [r3, #3]
 7388 0104 00E0     		b	.L617
ARM GAS  /tmp/ccTP8DMx.s 			page 253


 7389              	.LVL1100:
 7390              	.L621:
4774:Middlewares/Third_Party/FatFs/src/ff.c **** 							} else {
 7391              		.loc 1 4774 0
 7392 0106 0224     		movs	r4, #2
 7393              	.LVL1101:
 7394              	.L617:
4788:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&djo);		/* Remove old entry */
 7395              		.loc 1 4788 0
 7396 0108 44B9     		cbnz	r4, .L613
4789:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
 7397              		.loc 1 4789 0
 7398 010a 16A8     		add	r0, sp, #88
 7399 010c FFF7FEFF 		bl	dir_remove
 7400              	.LVL1102:
4790:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
 7401              		.loc 1 4790 0
 7402 0110 0446     		mov	r4, r0
 7403 0112 18B9     		cbnz	r0, .L613
4791:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7404              		.loc 1 4791 0
 7405 0114 0998     		ldr	r0, [sp, #36]
 7406              	.LVL1103:
 7407 0116 FFF7FEFF 		bl	sync_fs
 7408              	.LVL1104:
 7409 011a 0446     		mov	r4, r0
 7410              	.LVL1105:
 7411              	.L613:
4800:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7412              		.loc 1 4800 0
 7413 011c 2046     		mov	r0, r4
 7414 011e 23B0     		add	sp, sp, #140
 7415              	.LCFI94:
 7416              		.cfi_def_cfa_offset 12
 7417              		@ sp needed
 7418 0120 30BD     		pop	{r4, r5, pc}
 7419              		.cfi_endproc
 7420              	.LFE177:
 7422 0122 00BF     		.section	.text.f_mkfs,"ax",%progbits
 7423              		.align	2
 7424              		.global	f_mkfs
 7425              		.thumb
 7426              		.thumb_func
 7428              	f_mkfs:
 7429              	.LFB178:
5297:Middlewares/Third_Party/FatFs/src/ff.c **** 	const UINT n_fats = 1;		/* Number of FATs for FAT12/16/32 volume (1 or 2) */
 7430              		.loc 1 5297 0
 7431              		.cfi_startproc
 7432              		@ args = 4, pretend = 0, frame = 40
 7433              		@ frame_needed = 0, uses_anonymous_args = 0
 7434              	.LVL1106:
 7435 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7436              	.LCFI95:
 7437              		.cfi_def_cfa_offset 36
 7438              		.cfi_offset 4, -36
 7439              		.cfi_offset 5, -32
 7440              		.cfi_offset 6, -28
ARM GAS  /tmp/ccTP8DMx.s 			page 254


 7441              		.cfi_offset 7, -24
 7442              		.cfi_offset 8, -20
 7443              		.cfi_offset 9, -16
 7444              		.cfi_offset 10, -12
 7445              		.cfi_offset 11, -8
 7446              		.cfi_offset 14, -4
 7447 0004 8BB0     		sub	sp, sp, #44
 7448              	.LCFI96:
 7449              		.cfi_def_cfa_offset 80
 7450 0006 0AAC     		add	r4, sp, #40
 7451 0008 44F80C0D 		str	r0, [r4, #-12]!
 7452 000c 0E46     		mov	r6, r1
 7453 000e 1746     		mov	r7, r2
 7454 0010 1D46     		mov	r5, r3
 7455              	.LVL1107:
5316:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 7456              		.loc 1 5316 0
 7457 0012 2046     		mov	r0, r4
 7458              	.LVL1108:
 7459 0014 FFF7FEFF 		bl	get_ldnumber
 7460              	.LVL1109:
5317:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
 7461              		.loc 1 5317 0
 7462 0018 0028     		cmp	r0, #0
 7463 001a C0F2C082 		blt	.L667
5318:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
 7464              		.loc 1 5318 0
 7465 001e B04B     		ldr	r3, .L706
 7466 0020 53F82030 		ldr	r3, [r3, r0, lsl #2]
 7467 0024 0BB1     		cbz	r3, .L625
5318:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
 7468              		.loc 1 5318 0 is_stmt 0 discriminator 1
 7469 0026 0022     		movs	r2, #0
 7470 0028 1A70     		strb	r2, [r3]
 7471              	.L625:
5319:Middlewares/Third_Party/FatFs/src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:create as new, 1-4:get from partition table) */
 7472              		.loc 1 5319 0 is_stmt 1
 7473 002a C4B2     		uxtb	r4, r0
 7474              	.LVL1110:
5323:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
 7475              		.loc 1 5323 0
 7476 002c 2046     		mov	r0, r4
 7477              	.LVL1111:
 7478 002e FFF7FEFF 		bl	disk_initialize
 7479              	.LVL1112:
5324:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
 7480              		.loc 1 5324 0
 7481 0032 10F0010F 		tst	r0, #1
 7482 0036 40F0B482 		bne	.L668
5325:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
 7483              		.loc 1 5325 0
 7484 003a 10F0040F 		tst	r0, #4
 7485 003e 40F0B282 		bne	.L669
5326:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 7486              		.loc 1 5326 0
 7487 0042 09AA     		add	r2, sp, #36
 7488 0044 0321     		movs	r1, #3
ARM GAS  /tmp/ccTP8DMx.s 			page 255


 7489 0046 2046     		mov	r0, r4
 7490              	.LVL1113:
 7491 0048 FFF7FEFF 		bl	disk_ioctl
 7492              	.LVL1114:
 7493 004c 38B9     		cbnz	r0, .L626
5326:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 7494              		.loc 1 5326 0 is_stmt 0 discriminator 2
 7495 004e 099B     		ldr	r3, [sp, #36]
 7496 0050 2BB1     		cbz	r3, .L626
5326:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 7497              		.loc 1 5326 0 discriminator 4
 7498 0052 B3F5004F 		cmp	r3, #32768
 7499 0056 02D8     		bhi	.L626
5326:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 7500              		.loc 1 5326 0 discriminator 6
 7501 0058 5A1E     		subs	r2, r3, #1
 7502 005a 1342     		tst	r3, r2
 7503 005c 01D0     		beq	.L627
 7504              	.L626:
5326:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 7505              		.loc 1 5326 0 discriminator 7
 7506 005e 0123     		movs	r3, #1
 7507 0060 0993     		str	r3, [sp, #36]
 7508              	.L627:
 7509              	.LVL1115:
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 7510              		.loc 1 5333 0 is_stmt 1
 7511 0062 1FB1     		cbz	r7, .L628
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 7512              		.loc 1 5333 0 is_stmt 0 discriminator 1
 7513 0064 B7F5007F 		cmp	r7, #512
 7514 0068 C0F09F82 		bcc	.L670
 7515              	.L628:
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 7516              		.loc 1 5333 0 discriminator 4
 7517 006c B7F1807F 		cmp	r7, #16777216
 7518 0070 00F29D82 		bhi	.L671
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 7519              		.loc 1 5333 0 discriminator 6
 7520 0074 7B1E     		subs	r3, r7, #1
 7521 0076 1F42     		tst	r7, r3
 7522 0078 40F09B82 		bne	.L672
5334:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7523              		.loc 1 5334 0 is_stmt 1
 7524 007c 4FEA5729 		lsr	r9, r7, #9
 7525              	.LVL1116:
5338:Middlewares/Third_Party/FatFs/src/ff.c **** 	szb_buf = sz_buf * ss;	/* Size of working buffer (byte) */
 7526              		.loc 1 5338 0
 7527 0080 149B     		ldr	r3, [sp, #80]
 7528 0082 5B0A     		lsrs	r3, r3, #9
 7529 0084 0393     		str	r3, [sp, #12]
 7530              	.LVL1117:
5340:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7531              		.loc 1 5340 0
 7532 0086 5A02     		lsls	r2, r3, #9
 7533              	.LVL1118:
 7534 0088 0492     		str	r2, [sp, #16]
ARM GAS  /tmp/ccTP8DMx.s 			page 256


 7535 008a 002B     		cmp	r3, #0
 7536 008c 00F09382 		beq	.L673
5353:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
 7537              		.loc 1 5353 0
 7538 0090 08AA     		add	r2, sp, #32
 7539              	.LVL1119:
 7540 0092 0121     		movs	r1, #1
 7541 0094 2046     		mov	r0, r4
 7542 0096 FFF7FEFF 		bl	disk_ioctl
 7543              	.LVL1120:
 7544 009a 0028     		cmp	r0, #0
 7545 009c 40F08D82 		bne	.L674
 7546 00a0 06F00803 		and	r3, r6, #8
5354:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
 7547              		.loc 1 5354 0
 7548 00a4 03F0FF02 		and	r2, r3, #255
 7549 00a8 0692     		str	r2, [sp, #24]
 7550 00aa 13B1     		cbz	r3, .L675
 7551 00ac 4FF00008 		mov	r8, #0
 7552 00b0 01E0     		b	.L629
 7553              	.L675:
 7554 00b2 4FF03F08 		mov	r8, #63
 7555              	.L629:
 7556              	.LVL1121:
5355:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
 7557              		.loc 1 5355 0 discriminator 4
 7558 00b6 089A     		ldr	r2, [sp, #32]
 7559 00b8 9045     		cmp	r8, r2
 7560 00ba 00F28082 		bhi	.L676
5356:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7561              		.loc 1 5356 0
 7562 00be C8EB0202 		rsb	r2, r8, r2
 7563 00c2 0892     		str	r2, [sp, #32]
5358:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7564              		.loc 1 5358 0
 7565 00c4 7F2A     		cmp	r2, #127
 7566 00c6 40F27C82 		bls	.L677
5367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
 7567              		.loc 1 5367 0
 7568 00ca B9F1800F 		cmp	r9, #128
 7569 00ce 00F27A82 		bhi	.L678
 7570 00d2 06F00203 		and	r3, r6, #2
5368:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((opt & FM_ANY) == FM_FAT32 || !(opt & FM_FAT)) {	/* FAT32 only or no-FAT? */
 7571              		.loc 1 5368 0
 7572 00d6 03F0FF01 		and	r1, r3, #255
 7573 00da 33B1     		cbz	r3, .L630
5369:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_FAT32; break;
 7574              		.loc 1 5369 0
 7575 00dc 06F00703 		and	r3, r6, #7
 7576 00e0 022B     		cmp	r3, #2
 7577 00e2 09D0     		beq	.L679
5369:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_FAT32; break;
 7578              		.loc 1 5369 0 is_stmt 0 discriminator 1
 7579 00e4 16F0010F 		tst	r6, #1
 7580 00e8 09D0     		beq	.L680
 7581              	.L630:
5373:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT16;
ARM GAS  /tmp/ccTP8DMx.s 			page 257


 7582              		.loc 1 5373 0 is_stmt 1
 7583 00ea 16F0010F 		tst	r6, #1
 7584 00ee 00F06C82 		beq	.L681
5374:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (0);
 7585              		.loc 1 5374 0
 7586 00f2 0227     		movs	r7, #2
 7587 00f4 4846     		mov	r0, r9
 7588 00f6 08E0     		b	.L632
 7589              	.L679:
5370:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7590              		.loc 1 5370 0
 7591 00f8 0327     		movs	r7, #3
 7592 00fa 4846     		mov	r0, r9
 7593 00fc 05E0     		b	.L632
 7594              	.L680:
 7595 00fe 0327     		movs	r7, #3
 7596 0100 4846     		mov	r0, r9
 7597 0102 02E0     		b	.L632
 7598              	.LVL1122:
 7599              	.L687:
5593:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 7600              		.loc 1 5593 0
 7601 0104 1846     		mov	r0, r3
 7602              	.LVL1123:
 7603 0106 00E0     		b	.L632
 7604              	.LVL1124:
 7605              	.L688:
5596:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 7606              		.loc 1 5596 0
 7607 0108 0327     		movs	r7, #3
 7608              	.LVL1125:
 7609              	.L632:
5544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!pau) {	/* au auto-selection */
 7610              		.loc 1 5544 0
 7611 010a 032F     		cmp	r7, #3
 7612 010c 29D1     		bne	.L633
5545:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x20000;	/* Volume size in unit of 128KS */
 7613              		.loc 1 5545 0
 7614 010e 80B9     		cbnz	r0, .L682
5546:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst32[i] && cst32[i] <= n; i++, pau <<= 1) ;	/* Get from table */
 7615              		.loc 1 5546 0
 7616 0110 4FEA524C 		lsr	ip, r2, #17
 7617              	.LVL1126:
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7618              		.loc 1 5547 0
 7619 0114 0023     		movs	r3, #0
 7620 0116 0126     		movs	r6, #1
 7621 0118 01E0     		b	.L635
 7622              	.LVL1127:
 7623              	.L636:
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7624              		.loc 1 5547 0 is_stmt 0 discriminator 4
 7625 011a 0133     		adds	r3, r3, #1
 7626              	.LVL1128:
 7627 011c 7600     		lsls	r6, r6, #1
 7628              	.LVL1129:
 7629              	.L635:
ARM GAS  /tmp/ccTP8DMx.s 			page 258


5547:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7630              		.loc 1 5547 0 discriminator 1
 7631 011e DFF8C8E1 		ldr	lr, .L706+8
 7632 0122 3EF813E0 		ldrh	lr, [lr, r3, lsl #1]
 7633 0126 BEF1000F 		cmp	lr, #0
 7634 012a 03D0     		beq	.L634
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7635              		.loc 1 5547 0 discriminator 3
 7636 012c F445     		cmp	ip, lr
 7637 012e F4D2     		bcs	.L636
 7638 0130 00E0     		b	.L634
 7639              	.LVL1130:
 7640              	.L682:
5542:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Pre-determine number of clusters and FAT sub-type */
 7641              		.loc 1 5542 0 is_stmt 1
 7642 0132 0646     		mov	r6, r0
 7643              	.LVL1131:
 7644              	.L634:
5549:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat = (n_clst * 4 + 8 + ss - 1) / ss;	/* FAT size [sector] */
 7645              		.loc 1 5549 0
 7646 0134 B2FBF6FE 		udiv	lr, r2, r6
 7647              	.LVL1132:
5550:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 32;	/* Number of reserved sectors */
 7648              		.loc 1 5550 0
 7649 0138 0EF10203 		add	r3, lr, #2
 7650 013c 9B00     		lsls	r3, r3, #2
 7651 013e 03F2FF13 		addw	r3, r3, #511
 7652 0142 5B0A     		lsrs	r3, r3, #9
 7653 0144 0093     		str	r3, [sp]
 7654              	.LVL1133:
5553:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* FAT12/16 volume */
 7655              		.loc 1 5553 0
 7656 0146 AEF57F4E 		sub	lr, lr, #65280
 7657              	.LVL1134:
 7658 014a AEF1F60E 		sub	lr, lr, #246
 7659              	.LVL1135:
 7660 014e DFF89CC1 		ldr	ip, .L706+12
 7661 0152 E645     		cmp	lr, ip
 7662 0154 00F23B82 		bhi	.L683
5552:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16 || n_clst > MAX_FAT32) return FR_MKFS_ABORTED;
 7663              		.loc 1 5552 0
 7664 0158 0023     		movs	r3, #0
 7665              	.LVL1136:
 7666 015a 0293     		str	r3, [sp, #8]
5551:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = 0;		/* No static directory */
 7667              		.loc 1 5551 0
 7668 015c 4FF0200B 		mov	fp, #32
 7669 0160 29E0     		b	.L637
 7670              	.LVL1137:
 7671              	.L633:
5555:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x1000;	/* Volume size in unit of 4KS */
 7672              		.loc 1 5555 0
 7673 0162 80B9     		cbnz	r0, .L684
5556:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst[i] && cst[i] <= n; i++, pau <<= 1) ;	/* Get from table */
 7674              		.loc 1 5556 0
 7675 0164 4FEA123C 		lsr	ip, r2, #12
 7676              	.LVL1138:
ARM GAS  /tmp/ccTP8DMx.s 			page 259


5557:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7677              		.loc 1 5557 0
 7678 0168 0023     		movs	r3, #0
 7679 016a 0126     		movs	r6, #1
 7680 016c 01E0     		b	.L639
 7681              	.LVL1139:
 7682              	.L640:
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7683              		.loc 1 5557 0 is_stmt 0 discriminator 4
 7684 016e 0133     		adds	r3, r3, #1
 7685              	.LVL1140:
 7686 0170 7600     		lsls	r6, r6, #1
 7687              	.LVL1141:
 7688              	.L639:
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7689              		.loc 1 5557 0 discriminator 1
 7690 0172 DFF87CE1 		ldr	lr, .L706+16
 7691 0176 3EF813E0 		ldrh	lr, [lr, r3, lsl #1]
 7692 017a BEF1000F 		cmp	lr, #0
 7693 017e 03D0     		beq	.L638
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7694              		.loc 1 5557 0 discriminator 3
 7695 0180 F445     		cmp	ip, lr
 7696 0182 F4D2     		bcs	.L640
 7697 0184 00E0     		b	.L638
 7698              	.LVL1142:
 7699              	.L684:
5542:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Pre-determine number of clusters and FAT sub-type */
 7700              		.loc 1 5542 0 is_stmt 1
 7701 0186 0646     		mov	r6, r0
 7702              	.LVL1143:
 7703              	.L638:
5559:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT12) {
 7704              		.loc 1 5559 0
 7705 0188 B2FBF6F3 		udiv	r3, r2, r6
 7706              	.LVL1144:
5560:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = n_clst * 2 + 4;		/* FAT size [byte] */
 7707              		.loc 1 5560 0
 7708 018c 40F6F57E 		movw	lr, #4085
 7709 0190 7345     		cmp	r3, lr
 7710 0192 02D9     		bls	.L641
5561:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 7711              		.loc 1 5561 0
 7712 0194 0233     		adds	r3, r3, #2
 7713              	.LVL1145:
 7714 0196 5B00     		lsls	r3, r3, #1
 7715              	.LVL1146:
 7716 0198 05E0     		b	.L642
 7717              	.LVL1147:
 7718              	.L641:
5564:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7719              		.loc 1 5564 0
 7720 019a 03EB4303 		add	r3, r3, r3, lsl #1
 7721              	.LVL1148:
 7722 019e 0133     		adds	r3, r3, #1
 7723 01a0 5B08     		lsrs	r3, r3, #1
 7724 01a2 0333     		adds	r3, r3, #3
ARM GAS  /tmp/ccTP8DMx.s 			page 260


 7725              	.LVL1149:
5563:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = (n_clst * 3 + 1) / 2 + 3;	/* FAT size [byte] */
 7726              		.loc 1 5563 0
 7727 01a4 0127     		movs	r7, #1
 7728              	.LVL1150:
 7729              	.L642:
5566:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 1;						/* Number of reserved sectors */
 7730              		.loc 1 5566 0
 7731 01a6 03F2FF13 		addw	r3, r3, #511
 7732              	.LVL1151:
 7733 01aa 5B0A     		lsrs	r3, r3, #9
 7734              	.LVL1152:
 7735 01ac 0093     		str	r3, [sp]
 7736              	.LVL1153:
5568:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7737              		.loc 1 5568 0
 7738 01ae 2023     		movs	r3, #32
 7739              	.LVL1154:
 7740 01b0 0293     		str	r3, [sp, #8]
5567:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = (DWORD)n_rootdir * SZDIRE / ss;	/* Rootdir size [sector] */
 7741              		.loc 1 5567 0
 7742 01b2 4FF0010B 		mov	fp, #1
 7743              	.LVL1155:
 7744              	.L637:
5570:Middlewares/Third_Party/FatFs/src/ff.c **** 			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
 7745              		.loc 1 5570 0
 7746 01b6 0BEB0809 		add	r9, fp, r8
 7747              	.LVL1156:
5571:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7748              		.loc 1 5571 0
 7749 01ba 009B     		ldr	r3, [sp]
 7750 01bc 03EB090C 		add	ip, r3, r9
 7751 01c0 029B     		ldr	r3, [sp, #8]
 7752 01c2 9C44     		add	ip, ip, r3
 7753              	.LVL1157:
5574:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
 7754              		.loc 1 5574 0
 7755 01c4 DDF824E0 		ldr	lr, [sp, #36]
 7756 01c8 0CEB0E0A 		add	r10, ip, lr
 7757 01cc 0AF1FF3A 		add	r10, r10, #-1
 7758 01d0 CEF1000E 		rsb	lr, lr, #0
 7759 01d4 0AEA0E0E 		and	lr, r10, lr
 7760 01d8 CCEB0E0E 		rsb	lr, ip, lr
 7761              	.LVL1158:
5575:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv += n; b_fat += n;
 7762              		.loc 1 5575 0
 7763 01dc 032F     		cmp	r7, #3
 7764 01de 02D1     		bne	.L643
5576:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* FAT12/16: Expand FAT size */
 7765              		.loc 1 5576 0
 7766 01e0 F344     		add	fp, fp, lr
 7767              	.LVL1159:
 7768 01e2 F144     		add	r9, r9, lr
 7769              	.LVL1160:
 7770 01e4 02E0     		b	.L644
 7771              	.L643:
5578:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  /tmp/ccTP8DMx.s 			page 261


 7772              		.loc 1 5578 0
 7773 01e6 009B     		ldr	r3, [sp]
 7774 01e8 7344     		add	r3, r3, lr
 7775 01ea 0093     		str	r3, [sp]
 7776              	.LVL1161:
 7777              	.L644:
5582:Middlewares/Third_Party/FatFs/src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
 7778              		.loc 1 5582 0
 7779 01ec 0CEB061E 		add	lr, ip, r6, lsl #4
 7780              	.LVL1162:
 7781 01f0 C8EB0E0E 		rsb	lr, r8, lr
 7782 01f4 7245     		cmp	r2, lr
 7783 01f6 C0F0EC81 		bcc	.L685
5583:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 7784              		.loc 1 5583 0
 7785 01fa CBEB020A 		rsb	r10, fp, r2
 7786              	.LVL1163:
 7787 01fe 009B     		ldr	r3, [sp]
 7788 0200 C3EB0A0A 		rsb	r10, r3, r10
 7789 0204 029B     		ldr	r3, [sp, #8]
 7790 0206 C3EB0A0A 		rsb	r10, r3, r10
 7791 020a BAFBF6FA 		udiv	r10, r10, r6
 7792              	.LVL1164:
5584:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16) {	/* Too few clusters for FAT32 */
 7793              		.loc 1 5584 0
 7794 020e 032F     		cmp	r7, #3
 7795 0210 0BD1     		bne	.L645
5585:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau / 2) != 0) continue;	/* Adjust cluster size and retry */
 7796              		.loc 1 5585 0
 7797 0212 4FF6F57E 		movw	lr, #65525
 7798 0216 F245     		cmp	r10, lr
 7799 0218 07D8     		bhi	.L645
5586:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 7800              		.loc 1 5586 0
 7801 021a 0028     		cmp	r0, #0
 7802 021c 40F0DB81 		bne	.L686
 7803              	.LVL1165:
5586:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 7804              		.loc 1 5586 0 is_stmt 0 discriminator 1
 7805 0220 7008     		lsrs	r0, r6, #1
 7806              	.LVL1166:
 7807 0222 7FF472AF 		bne	.L632
5587:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7808              		.loc 1 5587 0 is_stmt 1
 7809 0226 0E20     		movs	r0, #14
 7810              	.LVL1167:
 7811 0228 E6E1     		b	.L624
 7812              	.LVL1168:
 7813              	.L645:
5590:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT16) {	/* Too many clusters for FAT16 */
 7814              		.loc 1 5590 0
 7815 022a 022F     		cmp	r7, #2
 7816 022c 21D1     		bne	.L647
5591:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (pau * 2) <= 64) {
 7817              		.loc 1 5591 0
 7818 022e 4FF6F57E 		movw	lr, #65525
 7819 0232 F245     		cmp	r10, lr
ARM GAS  /tmp/ccTP8DMx.s 			page 262


 7820 0234 10D9     		bls	.L648
5592:Middlewares/Third_Party/FatFs/src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
 7821              		.loc 1 5592 0
 7822 0236 18B9     		cbnz	r0, .L649
5592:Middlewares/Third_Party/FatFs/src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
 7823              		.loc 1 5592 0 is_stmt 0 discriminator 1
 7824 0238 7300     		lsls	r3, r6, #1
 7825 023a 402B     		cmp	r3, #64
 7826 023c 7FF662AF 		bls	.L687
 7827              	.L649:
5595:Middlewares/Third_Party/FatFs/src/ff.c **** 						fmt = FS_FAT32; continue;	/* Switch type to FAT32 and retry */
 7828              		.loc 1 5595 0 is_stmt 1
 7829 0240 0029     		cmp	r1, #0
 7830 0242 7FF461AF 		bne	.L688
5598:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 7831              		.loc 1 5598 0
 7832 0246 0028     		cmp	r0, #0
 7833 0248 40F0C781 		bne	.L689
5598:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 7834              		.loc 1 5598 0 is_stmt 0 discriminator 1
 7835 024c 7000     		lsls	r0, r6, #1
 7836              	.LVL1169:
 7837 024e 8028     		cmp	r0, #128
 7838 0250 7FF65BAF 		bls	.L632
5599:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7839              		.loc 1 5599 0 is_stmt 1
 7840 0254 0E20     		movs	r0, #14
 7841              	.LVL1170:
 7842 0256 CFE1     		b	.L624
 7843              	.LVL1171:
 7844              	.L648:
5601:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
 7845              		.loc 1 5601 0
 7846 0258 40F6F57E 		movw	lr, #4085
 7847 025c F245     		cmp	r10, lr
 7848 025e 08D8     		bhi	.L647
5602:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 7849              		.loc 1 5602 0
 7850 0260 0028     		cmp	r0, #0
 7851 0262 40F0BC81 		bne	.L690
5602:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 7852              		.loc 1 5602 0 is_stmt 0 discriminator 1
 7853 0266 7000     		lsls	r0, r6, #1
 7854              	.LVL1172:
 7855 0268 8028     		cmp	r0, #128
 7856 026a 7FF64EAF 		bls	.L632
5603:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7857              		.loc 1 5603 0 is_stmt 1
 7858 026e 0E20     		movs	r0, #14
 7859              	.LVL1173:
 7860 0270 C2E1     		b	.L624
 7861              	.LVL1174:
 7862              	.L647:
 7863 0272 CDF80490 		str	r9, [sp, #4]
5606:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7864              		.loc 1 5606 0
 7865 0276 012F     		cmp	r7, #1
ARM GAS  /tmp/ccTP8DMx.s 			page 263


 7866 0278 04D1     		bne	.L650
5606:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7867              		.loc 1 5606 0 is_stmt 0 discriminator 1
 7868 027a 40F6F573 		movw	r3, #4085
 7869 027e 9A45     		cmp	r10, r3
 7870 0280 00F2AF81 		bhi	.L691
 7871              	.L650:
5617:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(buf + BS_JmpBoot, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code (x86), OEM name */
 7872              		.loc 1 5617 0 is_stmt 1
 7873 0284 4FF40072 		mov	r2, #512
 7874 0288 0021     		movs	r1, #0
 7875 028a 2846     		mov	r0, r5
 7876              	.LVL1175:
 7877 028c FFF7FEFF 		bl	mem_set
 7878              	.LVL1176:
5618:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_BytsPerSec, ss);				/* Sector size [byte] */
 7879              		.loc 1 5618 0
 7880 0290 0B22     		movs	r2, #11
 7881 0292 1449     		ldr	r1, .L706+4
 7882 0294 2846     		mov	r0, r5
 7883 0296 FFF7FEFF 		bl	mem_cpy
 7884              	.LVL1177:
5619:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_SecPerClus] = (BYTE)pau;				/* Cluster size [sector] */
 7885              		.loc 1 5619 0
 7886 029a 4FF40071 		mov	r1, #512
 7887 029e 05F10B00 		add	r0, r5, #11
 7888 02a2 FFF7FEFF 		bl	st_word
 7889              	.LVL1178:
5620:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RsvdSecCnt, (WORD)sz_rsv);	/* Size of reserved area */
 7890              		.loc 1 5620 0
 7891 02a6 6E73     		strb	r6, [r5, #13]
5621:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_NumFATs] = (BYTE)n_fats;				/* Number of FATs */
 7892              		.loc 1 5621 0
 7893 02a8 1FFA8BF1 		uxth	r1, fp
 7894 02ac 05F10E00 		add	r0, r5, #14
 7895 02b0 FFF7FEFF 		bl	st_word
 7896              	.LVL1179:
5622:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RootEntCnt, (WORD)((fmt == FS_FAT32) ? 0 : n_rootdir));	/* Number of root direc
 7897              		.loc 1 5622 0
 7898 02b4 0123     		movs	r3, #1
 7899 02b6 2B74     		strb	r3, [r5, #16]
5623:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
 7900              		.loc 1 5623 0
 7901 02b8 05F11100 		add	r0, r5, #17
 7902 02bc 032F     		cmp	r7, #3
 7903 02be 02D0     		beq	.L692
 7904 02c0 4FF40071 		mov	r1, #512
 7905 02c4 00E0     		b	.L651
 7906              	.L692:
 7907 02c6 0021     		movs	r1, #0
 7908              	.L651:
5623:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
 7909              		.loc 1 5623 0 is_stmt 0 discriminator 4
 7910 02c8 FFF7FEFF 		bl	st_word
 7911              	.LVL1180:
5624:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_TotSec16, (WORD)sz_vol);	/* Volume size in 16-bit LBA */
 7912              		.loc 1 5624 0 is_stmt 1 discriminator 4
ARM GAS  /tmp/ccTP8DMx.s 			page 264


 7913 02cc 0899     		ldr	r1, [sp, #32]
 7914 02ce B1F5803F 		cmp	r1, #65536
 7915 02d2 0FD2     		bcs	.L652
5625:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 7916              		.loc 1 5625 0
 7917 02d4 89B2     		uxth	r1, r1
 7918 02d6 05F11300 		add	r0, r5, #19
 7919 02da FFF7FEFF 		bl	st_word
 7920              	.LVL1181:
 7921 02de 0DE0     		b	.L653
 7922              	.L707:
 7923              		.align	2
 7924              	.L706:
 7925 02e0 00000000 		.word	.LANCHOR2
 7926 02e4 10000000 		.word	.LC1
 7927 02e8 00000000 		.word	.LANCHOR4
 7928 02ec FFFFFE0F 		.word	268369919
 7929 02f0 00000000 		.word	.LANCHOR5
 7930              	.L652:
5627:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 7931              		.loc 1 5627 0
 7932 02f4 05F12000 		add	r0, r5, #32
 7933 02f8 FFF7FEFF 		bl	st_dword
 7934              	.LVL1182:
 7935              	.L653:
5629:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_SecPerTrk, 63);				/* Number of sectors per track (for int13) */
 7936              		.loc 1 5629 0
 7937 02fc F823     		movs	r3, #248
 7938 02fe 6B75     		strb	r3, [r5, #21]
5630:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_NumHeads, 255);				/* Number of heads (for int13) */
 7939              		.loc 1 5630 0
 7940 0300 3F21     		movs	r1, #63
 7941 0302 05F11800 		add	r0, r5, #24
 7942 0306 FFF7FEFF 		bl	st_word
 7943              	.LVL1183:
5631:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + BPB_HiddSec, b_vol);				/* Volume offset in the physical drive [sector] */
 7944              		.loc 1 5631 0
 7945 030a FF21     		movs	r1, #255
 7946 030c 05F11A00 		add	r0, r5, #26
 7947 0310 FFF7FEFF 		bl	st_word
 7948              	.LVL1184:
5632:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
 7949              		.loc 1 5632 0
 7950 0314 4146     		mov	r1, r8
 7951 0316 05F11C00 		add	r0, r5, #28
 7952 031a FFF7FEFF 		bl	st_dword
 7953              	.LVL1185:
5633:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BS_VolID32, GET_FATTIME());	/* VSN */
 7954              		.loc 1 5633 0
 7955 031e 032F     		cmp	r7, #3
 7956 0320 27D1     		bne	.L654
5634:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FATSz32, sz_fat);		/* FAT size [sector] */
 7957              		.loc 1 5634 0
 7958 0322 FFF7FEFF 		bl	get_fattime
 7959              	.LVL1186:
 7960 0326 0146     		mov	r1, r0
 7961 0328 05F14300 		add	r0, r5, #67
ARM GAS  /tmp/ccTP8DMx.s 			page 265


 7962 032c FFF7FEFF 		bl	st_dword
 7963              	.LVL1187:
5635:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_RootClus32, 2);			/* Root directory cluster # (2) */
 7964              		.loc 1 5635 0
 7965 0330 0099     		ldr	r1, [sp]
 7966 0332 05F12400 		add	r0, r5, #36
 7967 0336 FFF7FEFF 		bl	st_dword
 7968              	.LVL1188:
5636:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FSInfo32, 1);				/* Offset of FSINFO sector (VBR + 1) */
 7969              		.loc 1 5636 0
 7970 033a 0221     		movs	r1, #2
 7971 033c 05F12C00 		add	r0, r5, #44
 7972 0340 FFF7FEFF 		bl	st_dword
 7973              	.LVL1189:
5637:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_BkBootSec32, 6);			/* Offset of backup VBR (VBR + 6) */
 7974              		.loc 1 5637 0
 7975 0344 0121     		movs	r1, #1
 7976 0346 05F13000 		add	r0, r5, #48
 7977 034a FFF7FEFF 		bl	st_word
 7978              	.LVL1190:
5638:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum32] = 0x80;					/* Drive number (for int13) */
 7979              		.loc 1 5638 0
 7980 034e 0621     		movs	r1, #6
 7981 0350 05F13200 		add	r0, r5, #50
 7982 0354 FFF7FEFF 		bl	st_word
 7983              	.LVL1191:
5639:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig32] = 0x29;					/* Extended boot signature */
 7984              		.loc 1 5639 0
 7985 0358 8023     		movs	r3, #128
 7986 035a 85F84030 		strb	r3, [r5, #64]
5640:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
 7987              		.loc 1 5640 0
 7988 035e 2923     		movs	r3, #41
 7989 0360 85F84230 		strb	r3, [r5, #66]
5641:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 7990              		.loc 1 5641 0
 7991 0364 1322     		movs	r2, #19
 7992 0366 A649     		ldr	r1, .L708
 7993 0368 05F14700 		add	r0, r5, #71
 7994 036c FFF7FEFF 		bl	mem_cpy
 7995              	.LVL1192:
 7996 0370 18E0     		b	.L655
 7997              	.L654:
5643:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FATSz16, (WORD)sz_fat);	/* FAT size [sector] */
 7998              		.loc 1 5643 0
 7999 0372 FFF7FEFF 		bl	get_fattime
 8000              	.LVL1193:
 8001 0376 0146     		mov	r1, r0
 8002 0378 05F12700 		add	r0, r5, #39
 8003 037c FFF7FEFF 		bl	st_dword
 8004              	.LVL1194:
5644:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum] = 0x80;						/* Drive number (for int13) */
 8005              		.loc 1 5644 0
 8006 0380 BDF80010 		ldrh	r1, [sp]
 8007 0384 05F11600 		add	r0, r5, #22
 8008 0388 FFF7FEFF 		bl	st_word
 8009              	.LVL1195:
ARM GAS  /tmp/ccTP8DMx.s 			page 266


5645:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig] = 0x29;						/* Extended boot signature */
 8010              		.loc 1 5645 0
 8011 038c 8023     		movs	r3, #128
 8012 038e 85F82430 		strb	r3, [r5, #36]
5646:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
 8013              		.loc 1 5646 0
 8014 0392 2923     		movs	r3, #41
 8015 0394 85F82630 		strb	r3, [r5, #38]
5647:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8016              		.loc 1 5647 0
 8017 0398 1322     		movs	r2, #19
 8018 039a 9A49     		ldr	r1, .L708+4
 8019 039c 05F12B00 		add	r0, r5, #43
 8020 03a0 FFF7FEFF 		bl	mem_cpy
 8021              	.LVL1196:
 8022              	.L655:
5649:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, buf, b_vol, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the VBR sector 
 8023              		.loc 1 5649 0
 8024 03a4 05F5FF73 		add	r3, r5, #510
 8025 03a8 0593     		str	r3, [sp, #20]
 8026 03aa 4AF65521 		movw	r1, #43605
 8027 03ae 1846     		mov	r0, r3
 8028 03b0 FFF7FEFF 		bl	st_word
 8029              	.LVL1197:
5650:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8030              		.loc 1 5650 0
 8031 03b4 0123     		movs	r3, #1
 8032 03b6 4246     		mov	r2, r8
 8033 03b8 2946     		mov	r1, r5
 8034 03ba 2046     		mov	r0, r4
 8035 03bc FFF7FEFF 		bl	disk_write
 8036              	.LVL1198:
 8037 03c0 0028     		cmp	r0, #0
 8038 03c2 40F01081 		bne	.L693
5653:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 6, 1);		/* Write backup VBR (VBR + 6) */
 8039              		.loc 1 5653 0
 8040 03c6 032F     		cmp	r7, #3
 8041 03c8 33D1     		bne	.L656
5654:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
 8042              		.loc 1 5654 0
 8043 03ca 0123     		movs	r3, #1
 8044 03cc 08F10602 		add	r2, r8, #6
 8045 03d0 2946     		mov	r1, r5
 8046 03d2 2046     		mov	r0, r4
 8047 03d4 FFF7FEFF 		bl	disk_write
 8048              	.LVL1199:
5655:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_LeadSig, 0x41615252);
 8049              		.loc 1 5655 0
 8050 03d8 4FF40072 		mov	r2, #512
 8051 03dc 0021     		movs	r1, #0
 8052 03de 2846     		mov	r0, r5
 8053 03e0 FFF7FEFF 		bl	mem_set
 8054              	.LVL1200:
5656:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_StrucSig, 0x61417272);
 8055              		.loc 1 5656 0
 8056 03e4 8849     		ldr	r1, .L708+8
 8057 03e6 2846     		mov	r0, r5
ARM GAS  /tmp/ccTP8DMx.s 			page 267


 8058 03e8 FFF7FEFF 		bl	st_dword
 8059              	.LVL1201:
5657:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
 8060              		.loc 1 5657 0
 8061 03ec 8749     		ldr	r1, .L708+12
 8062 03ee 05F5F270 		add	r0, r5, #484
 8063 03f2 FFF7FEFF 		bl	st_dword
 8064              	.LVL1202:
5658:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
 8065              		.loc 1 5658 0
 8066 03f6 0AF1FF31 		add	r1, r10, #-1
 8067 03fa 05F5F470 		add	r0, r5, #488
 8068 03fe FFF7FEFF 		bl	st_dword
 8069              	.LVL1203:
5659:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);
 8070              		.loc 1 5659 0
 8071 0402 0221     		movs	r1, #2
 8072 0404 05F5F670 		add	r0, r5, #492
 8073 0408 FFF7FEFF 		bl	st_dword
 8074              	.LVL1204:
5660:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 7, 1);		/* Write backup FSINFO (VBR + 7) */
 8075              		.loc 1 5660 0
 8076 040c 4AF65521 		movw	r1, #43605
 8077 0410 0598     		ldr	r0, [sp, #20]
 8078 0412 FFF7FEFF 		bl	st_word
 8079              	.LVL1205:
5661:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 1, 1);		/* Write original FSINFO (VBR + 1) */
 8080              		.loc 1 5661 0
 8081 0416 0123     		movs	r3, #1
 8082 0418 08F10702 		add	r2, r8, #7
 8083 041c 2946     		mov	r1, r5
 8084 041e 2046     		mov	r0, r4
 8085 0420 FFF7FEFF 		bl	disk_write
 8086              	.LVL1206:
5662:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8087              		.loc 1 5662 0
 8088 0424 0123     		movs	r3, #1
 8089 0426 08EB0302 		add	r2, r8, r3
 8090 042a 2946     		mov	r1, r5
 8091 042c 2046     		mov	r0, r4
 8092 042e FFF7FEFF 		bl	disk_write
 8093              	.LVL1207:
 8094              	.L656:
5666:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_fat;		/* FAT start sector */
 8095              		.loc 1 5666 0
 8096 0432 049A     		ldr	r2, [sp, #16]
 8097 0434 0021     		movs	r1, #0
 8098 0436 2846     		mov	r0, r5
 8099 0438 FFF7FEFF 		bl	mem_set
 8100              	.LVL1208:
5668:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 8101              		.loc 1 5668 0
 8102 043c 4FF0000B 		mov	fp, #0
 8103              	.LVL1209:
 8104 0440 3AE0     		b	.L657
 8105              	.LVL1210:
 8106              	.L662:
ARM GAS  /tmp/ccTP8DMx.s 			page 268


5669:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 0, 0xFFFFFFF8);	/* Entry 0 */
 8107              		.loc 1 5669 0
 8108 0442 032F     		cmp	r7, #3
 8109 0444 10D1     		bne	.L658
5670:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 4, 0xFFFFFFFF);	/* Entry 1 */
 8110              		.loc 1 5670 0
 8111 0446 6FF00701 		mvn	r1, #7
 8112 044a 2846     		mov	r0, r5
 8113 044c FFF7FEFF 		bl	st_dword
 8114              	.LVL1211:
5671:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 8, 0x0FFFFFFF);	/* Entry 2 (root directory) */
 8115              		.loc 1 5671 0
 8116 0450 4FF0FF31 		mov	r1, #-1
 8117 0454 281D     		adds	r0, r5, #4
 8118 0456 FFF7FEFF 		bl	st_dword
 8119              	.LVL1212:
5672:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 8120              		.loc 1 5672 0
 8121 045a 6FF07041 		mvn	r1, #-268435456
 8122 045e 05F10800 		add	r0, r5, #8
 8123 0462 FFF7FEFF 		bl	st_dword
 8124              	.LVL1213:
 8125 0466 08E0     		b	.L659
 8126              	.L658:
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8127              		.loc 1 5674 0
 8128 0468 012F     		cmp	r7, #1
 8129 046a 01D1     		bne	.L694
 8130 046c 6849     		ldr	r1, .L708+16
 8131 046e 01E0     		b	.L660
 8132              	.L694:
 8133 0470 6FF00701 		mvn	r1, #7
 8134              	.L660:
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8135              		.loc 1 5674 0 is_stmt 0 discriminator 4
 8136 0474 2846     		mov	r0, r5
 8137 0476 FFF7FEFF 		bl	st_dword
 8138              	.LVL1214:
 8139              	.L659:
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8140              		.loc 1 5674 0
 8141 047a DDF80090 		ldr	r9, [sp]
 8142 047e BA46     		mov	r10, r7
 8143              	.L661:
 8144              	.LVL1215:
5678:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
 8145              		.loc 1 5678 0 is_stmt 1
 8146 0480 039B     		ldr	r3, [sp, #12]
 8147 0482 4B45     		cmp	r3, r9
 8148 0484 28BF     		it	cs
 8149 0486 4B46     		movcs	r3, r9
 8150 0488 1F46     		mov	r7, r3
 8151              	.LVL1216:
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(buf, 0, ss);
 8152              		.loc 1 5679 0
 8153 048a 019A     		ldr	r2, [sp, #4]
 8154 048c 2946     		mov	r1, r5
ARM GAS  /tmp/ccTP8DMx.s 			page 269


 8155 048e 2046     		mov	r0, r4
 8156 0490 FFF7FEFF 		bl	disk_write
 8157              	.LVL1217:
 8158 0494 0028     		cmp	r0, #0
 8159 0496 40F0A880 		bne	.L695
5680:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect += n; nsect -= n;
 8160              		.loc 1 5680 0
 8161 049a 4FF40072 		mov	r2, #512
 8162 049e 0021     		movs	r1, #0
 8163 04a0 2846     		mov	r0, r5
 8164 04a2 FFF7FEFF 		bl	mem_set
 8165              	.LVL1218:
5681:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (nsect);
 8166              		.loc 1 5681 0
 8167 04a6 019B     		ldr	r3, [sp, #4]
 8168 04a8 3B44     		add	r3, r3, r7
 8169 04aa 0193     		str	r3, [sp, #4]
 8170              	.LVL1219:
5682:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8171              		.loc 1 5682 0
 8172 04ac B9EB0709 		subs	r9, r9, r7
 8173              	.LVL1220:
 8174 04b0 E6D1     		bne	.L661
 8175 04b2 5746     		mov	r7, r10
 8176              	.LVL1221:
5668:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 8177              		.loc 1 5668 0 discriminator 2
 8178 04b4 0BF1010B 		add	fp, fp, #1
 8179              	.LVL1222:
 8180              	.L657:
5668:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 8181              		.loc 1 5668 0 is_stmt 0 discriminator 1
 8182 04b8 BBF1000F 		cmp	fp, #0
 8183 04bc C1D0     		beq	.L662
5686:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 8184              		.loc 1 5686 0 is_stmt 1
 8185 04be 032F     		cmp	r7, #3
 8186 04c0 03D1     		bne	.L704
 8187 04c2 DDF804A0 		ldr	r10, [sp, #4]
 8188 04c6 B146     		mov	r9, r6
 8189 04c8 03E0     		b	.L664
 8190              	.L704:
 8191 04ca DDF804A0 		ldr	r10, [sp, #4]
 8192 04ce DDF80890 		ldr	r9, [sp, #8]
 8193              	.LVL1223:
 8194              	.L664:
5688:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
 8195              		.loc 1 5688 0
 8196 04d2 039B     		ldr	r3, [sp, #12]
 8197 04d4 4B45     		cmp	r3, r9
 8198 04d6 28BF     		it	cs
 8199 04d8 4B46     		movcs	r3, r9
 8200 04da 1E46     		mov	r6, r3
 8201              	.LVL1224:
5689:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
 8202              		.loc 1 5689 0
 8203 04dc 5246     		mov	r2, r10
ARM GAS  /tmp/ccTP8DMx.s 			page 270


 8204 04de 2946     		mov	r1, r5
 8205 04e0 2046     		mov	r0, r4
 8206 04e2 FFF7FEFF 		bl	disk_write
 8207              	.LVL1225:
 8208 04e6 0028     		cmp	r0, #0
 8209 04e8 40F08180 		bne	.L696
5690:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
 8210              		.loc 1 5690 0
 8211 04ec B244     		add	r10, r10, r6
 8212              	.LVL1226:
5691:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8213              		.loc 1 5691 0
 8214 04ee B9EB0609 		subs	r9, r9, r6
 8215              	.LVL1227:
 8216 04f2 EED1     		bne	.L664
5698:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x0C;		/* FAT32X */
 8217              		.loc 1 5698 0
 8218 04f4 032F     		cmp	r7, #3
 8219 04f6 08D0     		beq	.L697
5701:Middlewares/Third_Party/FatFs/src/ff.c **** 				sys = 0x06;	/* FAT12/16 (>=64KS) */
 8220              		.loc 1 5701 0
 8221 04f8 089B     		ldr	r3, [sp, #32]
 8222 04fa B3F5803F 		cmp	r3, #65536
 8223 04fe 07D2     		bcs	.L698
5704:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8224              		.loc 1 5704 0
 8225 0500 022F     		cmp	r7, #2
 8226 0502 08D1     		bne	.L699
 8227 0504 4FF00409 		mov	r9, #4
 8228              	.LVL1228:
 8229 0508 07E0     		b	.L665
 8230              	.LVL1229:
 8231              	.L697:
5699:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 8232              		.loc 1 5699 0
 8233 050a 4FF00C09 		mov	r9, #12
 8234              	.LVL1230:
 8235 050e 04E0     		b	.L665
 8236              	.LVL1231:
 8237              	.L698:
5702:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 8238              		.loc 1 5702 0
 8239 0510 4FF00609 		mov	r9, #6
 8240              	.LVL1232:
 8241 0514 01E0     		b	.L665
 8242              	.LVL1233:
 8243              	.L699:
5704:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8244              		.loc 1 5704 0
 8245 0516 4FF00109 		mov	r9, #1
 8246              	.LVL1234:
 8247              	.L665:
5716:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
 8248              		.loc 1 5716 0
 8249 051a 069B     		ldr	r3, [sp, #24]
 8250 051c BBBB     		cbnz	r3, .L666
5717:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);		/* MBR signature */
ARM GAS  /tmp/ccTP8DMx.s 			page 271


 8251              		.loc 1 5717 0
 8252 051e 4FF40072 		mov	r2, #512
 8253 0522 0021     		movs	r1, #0
 8254 0524 2846     		mov	r0, r5
 8255 0526 FFF7FEFF 		bl	mem_set
 8256              	.LVL1235:
5718:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte = buf + MBR_Table;				/* Create partition table for single partition in the drive */
 8257              		.loc 1 5718 0
 8258 052a 4AF65521 		movw	r1, #43605
 8259 052e 0598     		ldr	r0, [sp, #20]
 8260 0530 FFF7FEFF 		bl	st_word
 8261              	.LVL1236:
5720:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StHead] = 1;				/* Start head */
 8262              		.loc 1 5720 0
 8263 0534 0026     		movs	r6, #0
 8264              	.LVL1237:
 8265 0536 85F8BE61 		strb	r6, [r5, #446]
5721:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StSec] = 1;					/* Start sector */
 8266              		.loc 1 5721 0
 8267 053a 0127     		movs	r7, #1
 8268 053c 85F8BF71 		strb	r7, [r5, #447]
5722:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StCyl] = 0;					/* Start cylinder */
 8269              		.loc 1 5722 0
 8270 0540 85F8C071 		strb	r7, [r5, #448]
5723:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_System] = sys;				/* System type */
 8271              		.loc 1 5723 0
 8272 0544 85F8C161 		strb	r6, [r5, #449]
5724:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (b_vol + sz_vol) / (63 * 255);	/* (End CHS may be invalid) */
 8273              		.loc 1 5724 0
 8274 0548 85F8C291 		strb	r9, [r5, #450]
5725:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdHead] = 254;				/* End head */
 8275              		.loc 1 5725 0
 8276 054c 089B     		ldr	r3, [sp, #32]
 8277 054e 4344     		add	r3, r3, r8
 8278 0550 43F6C162 		movw	r2, #16065
 8279 0554 B3FBF2F3 		udiv	r3, r3, r2
 8280              	.LVL1238:
5726:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdSec] = (BYTE)(n >> 2 | 63);	/* End sector */
 8281              		.loc 1 5726 0
 8282 0558 FE22     		movs	r2, #254
 8283 055a 85F8C321 		strb	r2, [r5, #451]
5727:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdCyl] = (BYTE)n;			/* End cylinder */
 8284              		.loc 1 5727 0
 8285 055e 9A08     		lsrs	r2, r3, #2
 8286 0560 42F03F02 		orr	r2, r2, #63
 8287 0564 85F8C421 		strb	r2, [r5, #452]
5728:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_StLba, b_vol);	/* Start offset in LBA */
 8288              		.loc 1 5728 0
 8289 0568 85F8C531 		strb	r3, [r5, #453]
5729:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_SizLba, sz_vol);	/* Size in sectors */
 8290              		.loc 1 5729 0
 8291 056c 4146     		mov	r1, r8
 8292 056e 05F5E370 		add	r0, r5, #454
 8293 0572 FFF7FEFF 		bl	st_dword
 8294              	.LVL1239:
5730:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the MBR */
 8295              		.loc 1 5730 0
ARM GAS  /tmp/ccTP8DMx.s 			page 272


 8296 0576 0899     		ldr	r1, [sp, #32]
 8297 0578 05F5E570 		add	r0, r5, #458
 8298 057c FFF7FEFF 		bl	st_dword
 8299              	.LVL1240:
5731:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8300              		.loc 1 5731 0
 8301 0580 3B46     		mov	r3, r7
 8302 0582 3246     		mov	r2, r6
 8303 0584 2946     		mov	r1, r5
 8304 0586 2046     		mov	r0, r4
 8305 0588 FFF7FEFF 		bl	disk_write
 8306              	.LVL1241:
 8307 058c 88BB     		cbnz	r0, .L700
 8308              	.LVL1242:
 8309              	.L666:
5735:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8310              		.loc 1 5735 0
 8311 058e 0022     		movs	r2, #0
 8312 0590 1146     		mov	r1, r2
 8313 0592 2046     		mov	r0, r4
 8314 0594 FFF7FEFF 		bl	disk_ioctl
 8315              	.LVL1243:
 8316 0598 68B3     		cbz	r0, .L701
 8317 059a 0120     		movs	r0, #1
 8318 059c 2CE0     		b	.L624
 8319              	.LVL1244:
 8320              	.L667:
5317:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
 8321              		.loc 1 5317 0
 8322 059e 0B20     		movs	r0, #11
 8323              	.LVL1245:
 8324 05a0 2AE0     		b	.L624
 8325              	.LVL1246:
 8326              	.L668:
5324:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
 8327              		.loc 1 5324 0
 8328 05a2 0320     		movs	r0, #3
 8329              	.LVL1247:
 8330 05a4 28E0     		b	.L624
 8331              	.LVL1248:
 8332              	.L669:
5325:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
 8333              		.loc 1 5325 0
 8334 05a6 0A20     		movs	r0, #10
 8335              	.LVL1249:
 8336 05a8 26E0     		b	.L624
 8337              	.LVL1250:
 8338              	.L670:
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 8339              		.loc 1 5333 0
 8340 05aa 1320     		movs	r0, #19
 8341 05ac 24E0     		b	.L624
 8342              	.L671:
 8343 05ae 1320     		movs	r0, #19
 8344 05b0 22E0     		b	.L624
 8345              	.L672:
 8346 05b2 1320     		movs	r0, #19
ARM GAS  /tmp/ccTP8DMx.s 			page 273


 8347 05b4 20E0     		b	.L624
 8348              	.LVL1251:
 8349              	.L673:
5340:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8350              		.loc 1 5340 0
 8351 05b6 0E20     		movs	r0, #14
 8352 05b8 1EE0     		b	.L624
 8353              	.LVL1252:
 8354              	.L674:
5353:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
 8355              		.loc 1 5353 0
 8356 05ba 0120     		movs	r0, #1
 8357 05bc 1CE0     		b	.L624
 8358              	.LVL1253:
 8359              	.L676:
5355:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
 8360              		.loc 1 5355 0
 8361 05be 0E20     		movs	r0, #14
 8362 05c0 1AE0     		b	.L624
 8363              	.L677:
5358:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8364              		.loc 1 5358 0
 8365 05c2 0E20     		movs	r0, #14
 8366 05c4 18E0     		b	.L624
 8367              	.L678:
5367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
 8368              		.loc 1 5367 0
 8369 05c6 1320     		movs	r0, #19
 8370 05c8 16E0     		b	.L624
 8371              	.L681:
5373:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT16;
 8372              		.loc 1 5373 0
 8373 05ca 1320     		movs	r0, #19
 8374 05cc 14E0     		b	.L624
 8375              	.LVL1254:
 8376              	.L683:
5553:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* FAT12/16 volume */
 8377              		.loc 1 5553 0
 8378 05ce 0E20     		movs	r0, #14
 8379              	.LVL1255:
 8380 05d0 12E0     		b	.L624
 8381              	.LVL1256:
 8382              	.L685:
5582:Middlewares/Third_Party/FatFs/src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
 8383              		.loc 1 5582 0
 8384 05d2 0E20     		movs	r0, #14
 8385              	.LVL1257:
 8386 05d4 10E0     		b	.L624
 8387              	.LVL1258:
 8388              	.L686:
5587:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8389              		.loc 1 5587 0
 8390 05d6 0E20     		movs	r0, #14
 8391              	.LVL1259:
 8392 05d8 0EE0     		b	.L624
 8393              	.LVL1260:
 8394              	.L689:
ARM GAS  /tmp/ccTP8DMx.s 			page 274


5599:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8395              		.loc 1 5599 0
 8396 05da 0E20     		movs	r0, #14
 8397              	.LVL1261:
 8398 05dc 0CE0     		b	.L624
 8399              	.LVL1262:
 8400              	.L690:
5603:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8401              		.loc 1 5603 0
 8402 05de 0E20     		movs	r0, #14
 8403              	.LVL1263:
 8404 05e0 0AE0     		b	.L624
 8405              	.LVL1264:
 8406              	.L691:
5606:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8407              		.loc 1 5606 0
 8408 05e2 0E20     		movs	r0, #14
 8409              	.LVL1265:
 8410 05e4 08E0     		b	.L624
 8411              	.LVL1266:
 8412              	.L693:
5650:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8413              		.loc 1 5650 0
 8414 05e6 0120     		movs	r0, #1
 8415 05e8 06E0     		b	.L624
 8416              	.LVL1267:
 8417              	.L695:
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(buf, 0, ss);
 8418              		.loc 1 5679 0
 8419 05ea 0120     		movs	r0, #1
 8420 05ec 04E0     		b	.L624
 8421              	.LVL1268:
 8422              	.L696:
5689:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
 8423              		.loc 1 5689 0
 8424 05ee 0120     		movs	r0, #1
 8425 05f0 02E0     		b	.L624
 8426              	.LVL1269:
 8427              	.L700:
5731:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8428              		.loc 1 5731 0
 8429 05f2 0120     		movs	r0, #1
 8430 05f4 00E0     		b	.L624
 8431              	.LVL1270:
 8432              	.L701:
5737:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8433              		.loc 1 5737 0
 8434 05f6 0020     		movs	r0, #0
 8435              	.LVL1271:
 8436              	.L624:
5738:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8437              		.loc 1 5738 0
 8438 05f8 0BB0     		add	sp, sp, #44
 8439              	.LCFI97:
 8440              		.cfi_def_cfa_offset 36
 8441              		@ sp needed
 8442 05fa BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
ARM GAS  /tmp/ccTP8DMx.s 			page 275


 8443              	.LVL1272:
 8444              	.L709:
 8445 05fe 00BF     		.align	2
 8446              	.L708:
 8447 0600 1C000000 		.word	.LC2
 8448 0604 30000000 		.word	.LC3
 8449 0608 52526141 		.word	1096897106
 8450 060c 72724161 		.word	1631679090
 8451 0610 F8FFFF00 		.word	16777208
 8452              		.cfi_endproc
 8453              	.LFE178:
 8455              		.section	.text.f_gets,"ax",%progbits
 8456              		.align	2
 8457              		.global	f_gets
 8458              		.thumb
 8459              		.thumb_func
 8461              	f_gets:
 8462              	.LFB179:
5824:Middlewares/Third_Party/FatFs/src/ff.c **** 	int n = 0;
 8463              		.loc 1 5824 0
 8464              		.cfi_startproc
 8465              		@ args = 0, pretend = 0, frame = 8
 8466              		@ frame_needed = 0, uses_anonymous_args = 0
 8467              	.LVL1273:
 8468 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 8469              	.LCFI98:
 8470              		.cfi_def_cfa_offset 24
 8471              		.cfi_offset 4, -24
 8472              		.cfi_offset 5, -20
 8473              		.cfi_offset 6, -16
 8474              		.cfi_offset 7, -12
 8475              		.cfi_offset 8, -8
 8476              		.cfi_offset 14, -4
 8477 0004 82B0     		sub	sp, sp, #8
 8478              	.LCFI99:
 8479              		.cfi_def_cfa_offset 32
 8480 0006 8046     		mov	r8, r0
 8481 0008 0E46     		mov	r6, r1
 8482 000a 1746     		mov	r7, r2
 8483              	.LVL1274:
5826:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s[2];
 8484              		.loc 1 5826 0
 8485 000c 0546     		mov	r5, r0
5825:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, *p = buff;
 8486              		.loc 1 5825 0
 8487 000e 0024     		movs	r4, #0
5831:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
 8488              		.loc 1 5831 0
 8489 0010 12E0     		b	.L711
 8490              	.LVL1275:
 8491              	.L714:
5876:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
 8492              		.loc 1 5876 0
 8493 0012 6B46     		mov	r3, sp
 8494 0014 0122     		movs	r2, #1
 8495 0016 01A9     		add	r1, sp, #4
 8496 0018 3846     		mov	r0, r7
ARM GAS  /tmp/ccTP8DMx.s 			page 276


 8497 001a FFF7FEFF 		bl	f_read
 8498              	.LVL1276:
5877:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
 8499              		.loc 1 5877 0
 8500 001e 009B     		ldr	r3, [sp]
 8501 0020 012B     		cmp	r3, #1
 8502 0022 0ED1     		bne	.L712
5878:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 8503              		.loc 1 5878 0
 8504 0024 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 8505              	.LVL1277:
5880:Middlewares/Third_Party/FatFs/src/ff.c **** 		*p++ = c;
 8506              		.loc 1 5880 0
 8507 0028 0D2B     		cmp	r3, #13
 8508 002a 05D0     		beq	.L711
5881:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
 8509              		.loc 1 5881 0
 8510 002c 6A1C     		adds	r2, r5, #1
 8511              	.LVL1278:
 8512 002e 2B70     		strb	r3, [r5]
5882:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
 8513              		.loc 1 5882 0
 8514 0030 0134     		adds	r4, r4, #1
 8515              	.LVL1279:
5883:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8516              		.loc 1 5883 0
 8517 0032 0A2B     		cmp	r3, #10
 8518 0034 04D0     		beq	.L716
5881:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
 8519              		.loc 1 5881 0
 8520 0036 1546     		mov	r5, r2
 8521              	.LVL1280:
 8522              	.L711:
5831:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
 8523              		.loc 1 5831 0
 8524 0038 731E     		subs	r3, r6, #1
 8525 003a 9C42     		cmp	r4, r3
 8526 003c E9DB     		blt	.L714
 8527 003e 00E0     		b	.L712
 8528              	.LVL1281:
 8529              	.L716:
5881:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
 8530              		.loc 1 5881 0
 8531 0040 1546     		mov	r5, r2
 8532              	.LVL1282:
 8533              	.L712:
5885:Middlewares/Third_Party/FatFs/src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
 8534              		.loc 1 5885 0
 8535 0042 0023     		movs	r3, #0
 8536 0044 2B70     		strb	r3, [r5]
5886:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8537              		.loc 1 5886 0
 8538 0046 0CB9     		cbnz	r4, .L717
 8539 0048 1846     		mov	r0, r3
 8540 004a 00E0     		b	.L715
 8541              	.L717:
 8542 004c 4046     		mov	r0, r8
ARM GAS  /tmp/ccTP8DMx.s 			page 277


 8543              	.L715:
5887:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8544              		.loc 1 5887 0 discriminator 4
 8545 004e 02B0     		add	sp, sp, #8
 8546              	.LCFI100:
 8547              		.cfi_def_cfa_offset 24
 8548              		@ sp needed
 8549 0050 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 8550              		.cfi_endproc
 8551              	.LFE179:
 8553              		.section	.text.f_putc,"ax",%progbits
 8554              		.align	2
 8555              		.global	f_putc
 8556              		.thumb
 8557              		.thumb_func
 8559              	f_putc:
 8560              	.LFB183:
5983:Middlewares/Third_Party/FatFs/src/ff.c **** }
5984:Middlewares/Third_Party/FatFs/src/ff.c **** 
5985:Middlewares/Third_Party/FatFs/src/ff.c **** 
5986:Middlewares/Third_Party/FatFs/src/ff.c **** 
5987:Middlewares/Third_Party/FatFs/src/ff.c **** int f_putc (
5988:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c,	/* A character to be output */
5989:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
5990:Middlewares/Third_Party/FatFs/src/ff.c **** )
5991:Middlewares/Third_Party/FatFs/src/ff.c **** {
 8561              		.loc 1 5991 0
 8562              		.cfi_startproc
 8563              		@ args = 0, pretend = 0, frame = 80
 8564              		@ frame_needed = 0, uses_anonymous_args = 0
 8565              	.LVL1283:
 8566 0000 10B5     		push	{r4, lr}
 8567              	.LCFI101:
 8568              		.cfi_def_cfa_offset 8
 8569              		.cfi_offset 4, -8
 8570              		.cfi_offset 14, -4
 8571 0002 94B0     		sub	sp, sp, #80
 8572              	.LCFI102:
 8573              		.cfi_def_cfa_offset 88
 8574 0004 0446     		mov	r4, r0
5992:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
5993:Middlewares/Third_Party/FatFs/src/ff.c **** 
5994:Middlewares/Third_Party/FatFs/src/ff.c **** 
5995:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_init(&pb, fp);
 8575              		.loc 1 5995 0
 8576 0006 01A8     		add	r0, sp, #4
 8577              	.LVL1284:
 8578 0008 FFF7FEFF 		bl	putc_init
 8579              	.LVL1285:
5996:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_bfd(&pb, c);	/* Put the character */
 8580              		.loc 1 5996 0
 8581 000c 2146     		mov	r1, r4
 8582 000e 01A8     		add	r0, sp, #4
 8583 0010 FFF7FEFF 		bl	putc_bfd
 8584              	.LVL1286:
5997:Middlewares/Third_Party/FatFs/src/ff.c **** 	return putc_flush(&pb);
 8585              		.loc 1 5997 0
ARM GAS  /tmp/ccTP8DMx.s 			page 278


 8586 0014 01A8     		add	r0, sp, #4
 8587 0016 FFF7FEFF 		bl	putc_flush
 8588              	.LVL1287:
5998:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8589              		.loc 1 5998 0
 8590 001a 14B0     		add	sp, sp, #80
 8591              	.LCFI103:
 8592              		.cfi_def_cfa_offset 8
 8593              		@ sp needed
 8594 001c 10BD     		pop	{r4, pc}
 8595              		.cfi_endproc
 8596              	.LFE183:
 8598 001e 00BF     		.section	.text.f_puts,"ax",%progbits
 8599              		.align	2
 8600              		.global	f_puts
 8601              		.thumb
 8602              		.thumb_func
 8604              	f_puts:
 8605              	.LFB184:
5999:Middlewares/Third_Party/FatFs/src/ff.c **** 
6000:Middlewares/Third_Party/FatFs/src/ff.c **** 
6001:Middlewares/Third_Party/FatFs/src/ff.c **** 
6002:Middlewares/Third_Party/FatFs/src/ff.c **** 
6003:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6004:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a string to the file                                              */
6005:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6006:Middlewares/Third_Party/FatFs/src/ff.c **** 
6007:Middlewares/Third_Party/FatFs/src/ff.c **** int f_puts (
6008:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* str,	/* Pointer to the string to be output */
6009:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp				/* Pointer to the file object */
6010:Middlewares/Third_Party/FatFs/src/ff.c **** )
6011:Middlewares/Third_Party/FatFs/src/ff.c **** {
 8606              		.loc 1 6011 0
 8607              		.cfi_startproc
 8608              		@ args = 0, pretend = 0, frame = 80
 8609              		@ frame_needed = 0, uses_anonymous_args = 0
 8610              	.LVL1288:
 8611 0000 10B5     		push	{r4, lr}
 8612              	.LCFI104:
 8613              		.cfi_def_cfa_offset 8
 8614              		.cfi_offset 4, -8
 8615              		.cfi_offset 14, -4
 8616 0002 94B0     		sub	sp, sp, #80
 8617              	.LCFI105:
 8618              		.cfi_def_cfa_offset 88
 8619 0004 0446     		mov	r4, r0
6012:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
6013:Middlewares/Third_Party/FatFs/src/ff.c **** 
6014:Middlewares/Third_Party/FatFs/src/ff.c **** 
6015:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_init(&pb, fp);
 8620              		.loc 1 6015 0
 8621 0006 01A8     		add	r0, sp, #4
 8622              	.LVL1289:
 8623 0008 FFF7FEFF 		bl	putc_init
 8624              	.LVL1290:
6016:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (*str) putc_bfd(&pb, *str++);		/* Put the string */
 8625              		.loc 1 6016 0
ARM GAS  /tmp/ccTP8DMx.s 			page 279


 8626 000c 03E0     		b	.L722
 8627              	.L723:
 8628              		.loc 1 6016 0 is_stmt 0 discriminator 2
 8629 000e 0134     		adds	r4, r4, #1
 8630              	.LVL1291:
 8631 0010 01A8     		add	r0, sp, #4
 8632 0012 FFF7FEFF 		bl	putc_bfd
 8633              	.LVL1292:
 8634              	.L722:
 8635              		.loc 1 6016 0 discriminator 1
 8636 0016 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 8637 0018 0029     		cmp	r1, #0
 8638 001a F8D1     		bne	.L723
6017:Middlewares/Third_Party/FatFs/src/ff.c **** 	return putc_flush(&pb);
 8639              		.loc 1 6017 0 is_stmt 1
 8640 001c 01A8     		add	r0, sp, #4
 8641 001e FFF7FEFF 		bl	putc_flush
 8642              	.LVL1293:
6018:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8643              		.loc 1 6018 0
 8644 0022 14B0     		add	sp, sp, #80
 8645              	.LCFI106:
 8646              		.cfi_def_cfa_offset 8
 8647              		@ sp needed
 8648 0024 10BD     		pop	{r4, pc}
 8649              		.cfi_endproc
 8650              	.LFE184:
 8652 0026 00BF     		.section	.text.f_printf,"ax",%progbits
 8653              		.align	2
 8654              		.global	f_printf
 8655              		.thumb
 8656              		.thumb_func
 8658              	f_printf:
 8659              	.LFB185:
6019:Middlewares/Third_Party/FatFs/src/ff.c **** 
6020:Middlewares/Third_Party/FatFs/src/ff.c **** 
6021:Middlewares/Third_Party/FatFs/src/ff.c **** 
6022:Middlewares/Third_Party/FatFs/src/ff.c **** 
6023:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6024:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a formatted string to the file                                    */
6025:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6026:Middlewares/Third_Party/FatFs/src/ff.c **** 
6027:Middlewares/Third_Party/FatFs/src/ff.c **** int f_printf (
6028:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
6029:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* fmt,	/* Pointer to the format string */
6030:Middlewares/Third_Party/FatFs/src/ff.c **** 	...					/* Optional arguments... */
6031:Middlewares/Third_Party/FatFs/src/ff.c **** )
6032:Middlewares/Third_Party/FatFs/src/ff.c **** {
 8660              		.loc 1 6032 0
 8661              		.cfi_startproc
 8662              		@ args = 4, pretend = 12, frame = 112
 8663              		@ frame_needed = 0, uses_anonymous_args = 1
 8664              	.LVL1294:
 8665 0000 0EB4     		push	{r1, r2, r3}
 8666              	.LCFI107:
 8667              		.cfi_def_cfa_offset 12
 8668              		.cfi_offset 1, -12
ARM GAS  /tmp/ccTP8DMx.s 			page 280


 8669              		.cfi_offset 2, -8
 8670              		.cfi_offset 3, -4
 8671 0002 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 8672              	.LCFI108:
 8673              		.cfi_def_cfa_offset 44
 8674              		.cfi_offset 4, -44
 8675              		.cfi_offset 5, -40
 8676              		.cfi_offset 6, -36
 8677              		.cfi_offset 7, -32
 8678              		.cfi_offset 8, -28
 8679              		.cfi_offset 9, -24
 8680              		.cfi_offset 10, -20
 8681              		.cfi_offset 14, -16
 8682 0006 9DB0     		sub	sp, sp, #116
 8683              	.LCFI109:
 8684              		.cfi_def_cfa_offset 160
 8685 0008 25AC     		add	r4, sp, #148
 8686 000a 54F8046B 		ldr	r6, [r4], #4
6033:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_list arp;
6034:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
6035:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE f, r;
6036:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j, w;
6037:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD v;
6038:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, d, str[32], *p;
6039:Middlewares/Third_Party/FatFs/src/ff.c **** 
6040:Middlewares/Third_Party/FatFs/src/ff.c **** 
6041:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_init(&pb, fp);
 8687              		.loc 1 6041 0
 8688 000e 0146     		mov	r1, r0
 8689 0010 08A8     		add	r0, sp, #32
 8690              	.LVL1295:
 8691 0012 FFF7FEFF 		bl	putc_init
 8692              	.LVL1296:
6042:Middlewares/Third_Party/FatFs/src/ff.c **** 
6043:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_start(arp, fmt);
 8693              		.loc 1 6043 0
 8694 0016 1B94     		str	r4, [sp, #108]
 8695              	.LVL1297:
 8696              	.L726:
6044:Middlewares/Third_Party/FatFs/src/ff.c **** 
6045:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
6046:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 8697              		.loc 1 6046 0
 8698 0018 741C     		adds	r4, r6, #1
 8699              	.LVL1298:
 8700 001a 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 8701              	.LVL1299:
6047:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
 8702              		.loc 1 6047 0
 8703 001c 0029     		cmp	r1, #0
 8704 001e 00F00481 		beq	.L727
6048:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '%') {				/* Non escape character */
 8705              		.loc 1 6048 0
 8706 0022 2529     		cmp	r1, #37
 8707 0024 04D0     		beq	.L728
6049:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c);
 8708              		.loc 1 6049 0
ARM GAS  /tmp/ccTP8DMx.s 			page 281


 8709 0026 08A8     		add	r0, sp, #32
 8710 0028 FFF7FEFF 		bl	putc_bfd
 8711              	.LVL1300:
6046:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
 8712              		.loc 1 6046 0
 8713 002c 2646     		mov	r6, r4
6050:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
 8714              		.loc 1 6050 0
 8715 002e F3E7     		b	.L726
 8716              	.LVL1301:
 8717              	.L728:
6051:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6052:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = f = 0;
6053:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 8718              		.loc 1 6053 0
 8719 0030 B31C     		adds	r3, r6, #2
 8720              	.LVL1302:
 8721 0032 7178     		ldrb	r1, [r6, #1]	@ zero_extendqisi2
 8722              	.LVL1303:
6054:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '0') {				/* Flag: '0' padding */
 8723              		.loc 1 6054 0
 8724 0034 3029     		cmp	r1, #48
 8725 0036 03D1     		bne	.L730
 8726              	.LVL1304:
6055:Middlewares/Third_Party/FatFs/src/ff.c **** 			f = 1; c = *fmt++;
 8727              		.loc 1 6055 0
 8728 0038 F31C     		adds	r3, r6, #3
 8729              	.LVL1305:
 8730 003a B178     		ldrb	r1, [r6, #2]	@ zero_extendqisi2
 8731              	.LVL1306:
 8732 003c 0127     		movs	r7, #1
 8733 003e 06E0     		b	.L731
 8734              	.LVL1307:
 8735              	.L730:
6056:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
6057:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == '-') {			/* Flag: left justified */
 8736              		.loc 1 6057 0
 8737 0040 2D29     		cmp	r1, #45
 8738 0042 03D1     		bne	.L770
 8739              	.LVL1308:
6058:Middlewares/Third_Party/FatFs/src/ff.c **** 				f = 2; c = *fmt++;
 8740              		.loc 1 6058 0
 8741 0044 F31C     		adds	r3, r6, #3
 8742              	.LVL1309:
 8743 0046 B178     		ldrb	r1, [r6, #2]	@ zero_extendqisi2
 8744              	.LVL1310:
 8745 0048 0227     		movs	r7, #2
 8746 004a 00E0     		b	.L731
 8747              	.LVL1311:
 8748              	.L770:
6052:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 8749              		.loc 1 6052 0
 8750 004c 0027     		movs	r7, #0
 8751              	.LVL1312:
 8752              	.L731:
6055:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 8753              		.loc 1 6055 0
ARM GAS  /tmp/ccTP8DMx.s 			page 282


 8754 004e 1E46     		mov	r6, r3
 8755 0050 0025     		movs	r5, #0
 8756 0052 06E0     		b	.L732
 8757              	.LVL1313:
 8758              	.L733:
6059:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
6060:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6061:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (IsDigit(c)) {		/* Precision */
6062:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
 8759              		.loc 1 6062 0
 8760 0054 05EB8505 		add	r5, r5, r5, lsl #2
 8761              	.LVL1314:
 8762 0058 6B00     		lsls	r3, r5, #1
 8763 005a CD18     		adds	r5, r1, r3
 8764 005c 303D     		subs	r5, r5, #48
 8765              	.LVL1315:
6063:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = *fmt++;
 8766              		.loc 1 6063 0
 8767 005e 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 8768              	.LVL1316:
 8769 0060 0136     		adds	r6, r6, #1
 8770              	.LVL1317:
 8771              	.L732:
6061:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
 8772              		.loc 1 6061 0
 8773 0062 A1F13002 		sub	r2, r1, #48
 8774 0066 D2B2     		uxtb	r2, r2
 8775 0068 092A     		cmp	r2, #9
 8776 006a F3D9     		bls	.L733
6064:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6065:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 'l' || c == 'L') {	/* Prefix: Size is long int */
 8777              		.loc 1 6065 0
 8778 006c 6C29     		cmp	r1, #108
 8779 006e 01D0     		beq	.L734
 8780              		.loc 1 6065 0 is_stmt 0 discriminator 1
 8781 0070 4C29     		cmp	r1, #76
 8782 0072 03D1     		bne	.L735
 8783              	.L734:
6066:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 4; c = *fmt++;
 8784              		.loc 1 6066 0 is_stmt 1
 8785 0074 47F00407 		orr	r7, r7, #4
 8786              	.LVL1318:
 8787 0078 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 8788              	.LVL1319:
 8789 007a 0136     		adds	r6, r6, #1
 8790              	.LVL1320:
 8791              	.L735:
6067:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6068:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) break;
 8792              		.loc 1 6068 0
 8793 007c 0029     		cmp	r1, #0
 8794 007e 00F0D480 		beq	.L727
 8795              	.LVL1321:
6069:Middlewares/Third_Party/FatFs/src/ff.c **** 		d = c;
6070:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsLower(d)) d -= 0x20;
 8796              		.loc 1 6070 0
 8797 0082 A1F16103 		sub	r3, r1, #97
ARM GAS  /tmp/ccTP8DMx.s 			page 283


 8798 0086 DBB2     		uxtb	r3, r3
 8799 0088 192B     		cmp	r3, #25
 8800 008a 03D8     		bhi	.L771
 8801              		.loc 1 6070 0 is_stmt 0 discriminator 1
 8802 008c A1F12003 		sub	r3, r1, #32
 8803 0090 DBB2     		uxtb	r3, r3
 8804              	.LVL1322:
 8805 0092 00E0     		b	.L736
 8806              	.LVL1323:
 8807              	.L771:
6069:Middlewares/Third_Party/FatFs/src/ff.c **** 		d = c;
 8808              		.loc 1 6069 0 is_stmt 1
 8809 0094 0B46     		mov	r3, r1
 8810              	.LVL1324:
 8811              	.L736:
6071:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (d) {				/* Type is... */
 8812              		.loc 1 6071 0
 8813 0096 A3F14202 		sub	r2, r3, #66
 8814 009a 162A     		cmp	r2, #22
 8815 009c 4AD8     		bhi	.L737
 8816 009e DFE802F0 		tbb	[pc, r2]
 8817              	.L739:
 8818 00a2 4D       		.byte	(.L738-.L739)/2
 8819 00a3 3B       		.byte	(.L740-.L739)/2
 8820 00a4 43       		.byte	(.L741-.L739)/2
 8821 00a5 49       		.byte	(.L737-.L739)/2
 8822 00a6 49       		.byte	(.L737-.L739)/2
 8823 00a7 49       		.byte	(.L737-.L739)/2
 8824 00a8 49       		.byte	(.L737-.L739)/2
 8825 00a9 49       		.byte	(.L737-.L739)/2
 8826 00aa 49       		.byte	(.L737-.L739)/2
 8827 00ab 49       		.byte	(.L737-.L739)/2
 8828 00ac 49       		.byte	(.L737-.L739)/2
 8829 00ad 49       		.byte	(.L737-.L739)/2
 8830 00ae 49       		.byte	(.L737-.L739)/2
 8831 00af 50       		.byte	(.L772-.L739)/2
 8832 00b0 49       		.byte	(.L737-.L739)/2
 8833 00b1 49       		.byte	(.L737-.L739)/2
 8834 00b2 49       		.byte	(.L737-.L739)/2
 8835 00b3 0C       		.byte	(.L743-.L739)/2
 8836 00b4 49       		.byte	(.L737-.L739)/2
 8837 00b5 43       		.byte	(.L741-.L739)/2
 8838 00b6 49       		.byte	(.L737-.L739)/2
 8839 00b7 49       		.byte	(.L737-.L739)/2
 8840 00b8 46       		.byte	(.L744-.L739)/2
 8841 00b9 00       		.p2align 1
 8842              	.L743:
6072:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'S' :					/* String */
6073:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = va_arg(arp, TCHAR*);
 8843              		.loc 1 6073 0
 8844 00ba 1B9B     		ldr	r3, [sp, #108]
 8845              	.LVL1325:
 8846 00bc 1A1D     		adds	r2, r3, #4
 8847 00be 1B92     		str	r2, [sp, #108]
 8848 00c0 D3F80080 		ldr	r8, [r3]
 8849              	.LVL1326:
6074:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (j = 0; p[j]; j++) ;
ARM GAS  /tmp/ccTP8DMx.s 			page 284


 8850              		.loc 1 6074 0
 8851 00c4 0024     		movs	r4, #0
 8852 00c6 00E0     		b	.L745
 8853              	.LVL1327:
 8854              	.L746:
 8855              		.loc 1 6074 0 is_stmt 0 discriminator 3
 8856 00c8 0134     		adds	r4, r4, #1
 8857              	.LVL1328:
 8858              	.L745:
 8859              		.loc 1 6074 0 discriminator 1
 8860 00ca 18F80430 		ldrb	r3, [r8, r4]	@ zero_extendqisi2
 8861 00ce 002B     		cmp	r3, #0
 8862 00d0 FAD1     		bne	.L746
6075:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(f & 2)) {
 8863              		.loc 1 6075 0 is_stmt 1
 8864 00d2 17F0020F 		tst	r7, #2
 8865 00d6 06D0     		beq	.L747
 8866 00d8 0FE0     		b	.L750
 8867              	.LVL1329:
 8868              	.L749:
6076:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (j++ < w) putc_bfd(&pb, ' ');
 8869              		.loc 1 6076 0 discriminator 2
 8870 00da 2021     		movs	r1, #32
 8871 00dc 0DEB0100 		add	r0, sp, r1
 8872 00e0 FFF7FEFF 		bl	putc_bfd
 8873              	.LVL1330:
 8874 00e4 3C46     		mov	r4, r7
 8875              	.LVL1331:
 8876              	.L747:
 8877              		.loc 1 6076 0 is_stmt 0 discriminator 1
 8878 00e6 671C     		adds	r7, r4, #1
 8879              	.LVL1332:
 8880 00e8 AC42     		cmp	r4, r5
 8881 00ea F6D3     		bcc	.L749
 8882              		.loc 1 6076 0
 8883 00ec 3C46     		mov	r4, r7
 8884 00ee 04E0     		b	.L750
 8885              	.LVL1333:
 8886              	.L751:
6077:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
6078:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (*p) putc_bfd(&pb, *p++);
 8887              		.loc 1 6078 0 is_stmt 1 discriminator 2
 8888 00f0 08F10108 		add	r8, r8, #1
 8889              	.LVL1334:
 8890 00f4 08A8     		add	r0, sp, #32
 8891 00f6 FFF7FEFF 		bl	putc_bfd
 8892              	.LVL1335:
 8893              	.L750:
 8894              		.loc 1 6078 0 is_stmt 0 discriminator 1
 8895 00fa 98F80010 		ldrb	r1, [r8]	@ zero_extendqisi2
 8896 00fe 0029     		cmp	r1, #0
 8897 0100 F6D1     		bne	.L751
 8898 0102 05E0     		b	.L752
 8899              	.LVL1336:
 8900              	.L753:
6079:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (j++ < w) putc_bfd(&pb, ' ');
 8901              		.loc 1 6079 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/ccTP8DMx.s 			page 285


 8902 0104 2021     		movs	r1, #32
 8903 0106 0DEB0100 		add	r0, sp, r1
 8904 010a FFF7FEFF 		bl	putc_bfd
 8905              	.LVL1337:
 8906 010e 3C46     		mov	r4, r7
 8907              	.LVL1338:
 8908              	.L752:
 8909              		.loc 1 6079 0 is_stmt 0 discriminator 1
 8910 0110 671C     		adds	r7, r4, #1
 8911              	.LVL1339:
 8912 0112 AC42     		cmp	r4, r5
 8913 0114 F6D3     		bcc	.L753
 8914 0116 7FE7     		b	.L726
 8915              	.LVL1340:
 8916              	.L740:
6080:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
6081:Middlewares/Third_Party/FatFs/src/ff.c **** 
6082:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'C' :					/* Character */
6083:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, (TCHAR)va_arg(arp, int)); continue;
 8917              		.loc 1 6083 0 is_stmt 1
 8918 0118 1B9B     		ldr	r3, [sp, #108]
 8919              	.LVL1341:
 8920 011a 1A1D     		adds	r2, r3, #4
 8921 011c 1B92     		str	r2, [sp, #108]
 8922 011e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 8923              	.LVL1342:
 8924 0120 08A8     		add	r0, sp, #32
 8925 0122 FFF7FEFF 		bl	putc_bfd
 8926              	.LVL1343:
 8927 0126 77E7     		b	.L726
 8928              	.LVL1344:
 8929              	.L741:
6084:Middlewares/Third_Party/FatFs/src/ff.c **** 
6085:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'B' :					/* Binary */
6086:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 2; break;
6087:Middlewares/Third_Party/FatFs/src/ff.c **** 
6088:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'O' :					/* Octal */
6089:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 8; break;
6090:Middlewares/Third_Party/FatFs/src/ff.c **** 
6091:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'D' :					/* Signed decimal */
6092:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'U' :					/* Unsigned decimal */
6093:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 10; break;
 8930              		.loc 1 6093 0
 8931 0128 4FF00A08 		mov	r8, #10
 8932 012c 0BE0     		b	.L742
 8933              	.LVL1345:
 8934              	.L744:
6094:Middlewares/Third_Party/FatFs/src/ff.c **** 
6095:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'X' :					/* Hexdecimal */
6096:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 16; break;
 8935              		.loc 1 6096 0
 8936 012e 4FF01008 		mov	r8, #16
 8937 0132 08E0     		b	.L742
 8938              	.LVL1346:
 8939              	.L737:
6097:Middlewares/Third_Party/FatFs/src/ff.c **** 
6098:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:					/* Unknown type (pass-through) */
ARM GAS  /tmp/ccTP8DMx.s 			page 286


6099:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c); continue;
 8940              		.loc 1 6099 0
 8941 0134 08A8     		add	r0, sp, #32
 8942 0136 FFF7FEFF 		bl	putc_bfd
 8943              	.LVL1347:
 8944 013a 6DE7     		b	.L726
 8945              	.LVL1348:
 8946              	.L738:
6086:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8947              		.loc 1 6086 0
 8948 013c 4FF00208 		mov	r8, #2
 8949 0140 01E0     		b	.L742
 8950              	.L772:
6089:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8951              		.loc 1 6089 0
 8952 0142 4FF00808 		mov	r8, #8
 8953              	.L742:
 8954              	.LVL1349:
6100:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6101:Middlewares/Third_Party/FatFs/src/ff.c **** 
6102:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get an argument and put it in numeral */
6103:Middlewares/Third_Party/FatFs/src/ff.c **** 		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_
 8955              		.loc 1 6103 0
 8956 0146 17F0040F 		tst	r7, #4
 8957 014a 05D0     		beq	.L754
 8958              		.loc 1 6103 0 is_stmt 0 discriminator 1
 8959 014c 1B9A     		ldr	r2, [sp, #108]
 8960 014e 101D     		adds	r0, r2, #4
 8961 0150 1B90     		str	r0, [sp, #108]
 8962 0152 D2F800E0 		ldr	lr, [r2]
 8963 0156 0CE0     		b	.L755
 8964              	.L754:
 8965              		.loc 1 6103 0 discriminator 2
 8966 0158 442B     		cmp	r3, #68
 8967 015a 05D1     		bne	.L756
 8968              		.loc 1 6103 0 discriminator 4
 8969 015c 1B9A     		ldr	r2, [sp, #108]
 8970 015e 101D     		adds	r0, r2, #4
 8971 0160 1B90     		str	r0, [sp, #108]
 8972 0162 D2F800E0 		ldr	lr, [r2]
 8973 0166 04E0     		b	.L755
 8974              	.L756:
 8975              		.loc 1 6103 0 discriminator 5
 8976 0168 1B9A     		ldr	r2, [sp, #108]
 8977 016a 101D     		adds	r0, r2, #4
 8978 016c 1B90     		str	r0, [sp, #108]
 8979 016e D2F800E0 		ldr	lr, [r2]
 8980              	.L755:
 8981              	.LVL1350:
6104:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 8982              		.loc 1 6104 0 is_stmt 1 discriminator 8
 8983 0172 442B     		cmp	r3, #68
 8984 0174 06D1     		bne	.L757
 8985              		.loc 1 6104 0 is_stmt 0 discriminator 1
 8986 0176 BEF1000F 		cmp	lr, #0
 8987 017a 03DA     		bge	.L757
6105:Middlewares/Third_Party/FatFs/src/ff.c **** 			v = 0 - v;
ARM GAS  /tmp/ccTP8DMx.s 			page 287


 8988              		.loc 1 6105 0 is_stmt 1
 8989 017c CEF1000E 		rsb	lr, lr, #0
 8990              	.LVL1351:
6106:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 8;
 8991              		.loc 1 6106 0
 8992 0180 47F00807 		orr	r7, r7, #8
 8993              	.LVL1352:
 8994              	.L757:
6107:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6108:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0;
 8995              		.loc 1 6108 0
 8996 0184 4FF0000C 		mov	ip, #0
 8997 0188 00E0     		b	.L761
 8998              	.LVL1353:
 8999              	.L774:
6109:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
6110:Middlewares/Third_Party/FatFs/src/ff.c **** 			d = (TCHAR)(v % r); v /= r;
6111:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
6112:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9000              		.loc 1 6112 0
 9001 018a A446     		mov	ip, r4
 9002              	.LVL1354:
 9003              	.L761:
6110:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 9004              		.loc 1 6110 0
 9005 018c BEFBF8F0 		udiv	r0, lr, r8
 9006 0190 08FB10E3 		mls	r3, r8, r0, lr
 9007 0194 DBB2     		uxtb	r3, r3
 9008              	.LVL1355:
 9009 0196 8646     		mov	lr, r0
 9010              	.LVL1356:
6111:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9011              		.loc 1 6111 0
 9012 0198 092B     		cmp	r3, #9
 9013 019a 06D9     		bls	.L758
6111:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9014              		.loc 1 6111 0 is_stmt 0 discriminator 1
 9015 019c 7829     		cmp	r1, #120
 9016 019e 01D1     		bne	.L773
6111:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9017              		.loc 1 6111 0
 9018 01a0 2722     		movs	r2, #39
 9019 01a2 00E0     		b	.L759
 9020              	.L773:
 9021 01a4 0722     		movs	r2, #7
 9022              	.L759:
6111:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9023              		.loc 1 6111 0 discriminator 5
 9024 01a6 1A44     		add	r2, r2, r3
 9025 01a8 D3B2     		uxtb	r3, r2
 9026              	.LVL1357:
 9027              	.L758:
 9028              		.loc 1 6112 0 is_stmt 1
 9029 01aa 0CF10104 		add	r4, ip, #1
 9030              	.LVL1358:
 9031 01ae 3033     		adds	r3, r3, #48
 9032              	.LVL1359:
ARM GAS  /tmp/ccTP8DMx.s 			page 288


 9033 01b0 1CAA     		add	r2, sp, #112
 9034 01b2 6244     		add	r2, r2, ip
 9035 01b4 02F8703C 		strb	r3, [r2, #-112]
6113:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (v && i < sizeof str / sizeof str[0]);
 9036              		.loc 1 6113 0
 9037 01b8 08B1     		cbz	r0, .L760
 9038              		.loc 1 6113 0 is_stmt 0 discriminator 1
 9039 01ba 1F2C     		cmp	r4, #31
 9040 01bc E5D9     		bls	.L774
 9041              	.L760:
6114:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (f & 8) str[i++] = '-';
 9042              		.loc 1 6114 0 is_stmt 1
 9043 01be 17F0080F 		tst	r7, #8
 9044 01c2 06D0     		beq	.L762
 9045              	.LVL1360:
 9046              		.loc 1 6114 0 is_stmt 0 discriminator 1
 9047 01c4 1CAB     		add	r3, sp, #112
 9048 01c6 1C44     		add	r4, r4, r3
 9049 01c8 2D23     		movs	r3, #45
 9050 01ca 04F8703C 		strb	r3, [r4, #-112]
 9051 01ce 0CF10204 		add	r4, ip, #2
 9052              	.LVL1361:
 9053              	.L762:
6115:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 9054              		.loc 1 6115 0 is_stmt 1
 9055 01d2 17F0010F 		tst	r7, #1
 9056 01d6 02D0     		beq	.L775
 9057 01d8 4FF0300A 		mov	r10, #48
 9058 01dc 01E0     		b	.L763
 9059              	.L775:
 9060 01de 4FF0200A 		mov	r10, #32
 9061              	.L763:
 9062              	.LVL1362:
 9063              		.loc 1 6115 0 is_stmt 0 discriminator 4
 9064 01e2 A046     		mov	r8, r4
 9065              	.LVL1363:
6116:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (!(f & 2) && j++ < w) putc_bfd(&pb, d);
 9066              		.loc 1 6116 0 is_stmt 1 discriminator 4
 9067 01e4 04E0     		b	.L764
 9068              	.LVL1364:
 9069              	.L766:
 9070              		.loc 1 6116 0 is_stmt 0 discriminator 3
 9071 01e6 5146     		mov	r1, r10
 9072 01e8 08A8     		add	r0, sp, #32
 9073 01ea FFF7FEFF 		bl	putc_bfd
 9074              	.LVL1365:
 9075 01ee C846     		mov	r8, r9
 9076              	.LVL1366:
 9077              	.L764:
 9078              		.loc 1 6116 0 discriminator 1
 9079 01f0 17F0020F 		tst	r7, #2
 9080 01f4 04D1     		bne	.L767
 9081              		.loc 1 6116 0 discriminator 2
 9082 01f6 08F10109 		add	r9, r8, #1
 9083              	.LVL1367:
 9084 01fa A845     		cmp	r8, r5
 9085 01fc F3D3     		bcc	.L766
ARM GAS  /tmp/ccTP8DMx.s 			page 289


 9086              		.loc 1 6116 0
 9087 01fe C846     		mov	r8, r9
 9088              	.LVL1368:
 9089              	.L767:
6117:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
6118:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, str[--i]);
 9090              		.loc 1 6118 0 is_stmt 1 discriminator 1
 9091 0200 013C     		subs	r4, r4, #1
 9092              	.LVL1369:
 9093 0202 1CAB     		add	r3, sp, #112
 9094 0204 2344     		add	r3, r3, r4
 9095 0206 13F8701C 		ldrb	r1, [r3, #-112]	@ zero_extendqisi2
 9096 020a 08A8     		add	r0, sp, #32
 9097 020c FFF7FEFF 		bl	putc_bfd
 9098              	.LVL1370:
6119:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (i);
 9099              		.loc 1 6119 0 discriminator 1
 9100 0210 002C     		cmp	r4, #0
 9101 0212 F5D1     		bne	.L767
 9102 0214 04E0     		b	.L768
 9103              	.LVL1371:
 9104              	.L769:
6120:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (j++ < w) putc_bfd(&pb, d);
 9105              		.loc 1 6120 0 discriminator 2
 9106 0216 5146     		mov	r1, r10
 9107 0218 08A8     		add	r0, sp, #32
 9108 021a FFF7FEFF 		bl	putc_bfd
 9109              	.LVL1372:
 9110 021e A046     		mov	r8, r4
 9111              	.LVL1373:
 9112              	.L768:
 9113              		.loc 1 6120 0 is_stmt 0 discriminator 1
 9114 0220 08F10104 		add	r4, r8, #1
 9115              	.LVL1374:
 9116 0224 A845     		cmp	r8, r5
 9117 0226 F6D3     		bcc	.L769
 9118 0228 F6E6     		b	.L726
 9119              	.LVL1375:
 9120              	.L727:
6121:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
6122:Middlewares/Third_Party/FatFs/src/ff.c **** 
6123:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_end(arp);
6124:Middlewares/Third_Party/FatFs/src/ff.c **** 
6125:Middlewares/Third_Party/FatFs/src/ff.c **** 	return putc_flush(&pb);
 9121              		.loc 1 6125 0 is_stmt 1
 9122 022a 08A8     		add	r0, sp, #32
 9123 022c FFF7FEFF 		bl	putc_flush
 9124              	.LVL1376:
6126:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9125              		.loc 1 6126 0
 9126 0230 1DB0     		add	sp, sp, #116
 9127              	.LCFI110:
 9128              		.cfi_def_cfa_offset 44
 9129              		@ sp needed
 9130 0232 BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 9131              	.LCFI111:
 9132              		.cfi_restore 14
ARM GAS  /tmp/ccTP8DMx.s 			page 290


 9133              		.cfi_restore 10
 9134              		.cfi_restore 9
 9135              		.cfi_restore 8
 9136              		.cfi_restore 7
 9137              		.cfi_restore 6
 9138              		.cfi_restore 5
 9139              		.cfi_restore 4
 9140              		.cfi_def_cfa_offset 12
 9141 0236 03B0     		add	sp, sp, #12
 9142              	.LCFI112:
 9143              		.cfi_restore 3
 9144              		.cfi_restore 2
 9145              		.cfi_restore 1
 9146              		.cfi_def_cfa_offset 0
 9147 0238 7047     		bx	lr
 9148              		.cfi_endproc
 9149              	.LFE185:
 9151 023a 00BF     		.section	.rodata.ExCvt,"a",%progbits
 9152              		.align	2
 9153              		.set	.LANCHOR1,. + 0
 9156              	ExCvt:
 9157 0000 43       		.byte	67
 9158 0001 55       		.byte	85
 9159 0002 45       		.byte	69
 9160 0003 41       		.byte	65
 9161 0004 41       		.byte	65
 9162 0005 41       		.byte	65
 9163 0006 41       		.byte	65
 9164 0007 43       		.byte	67
 9165 0008 45       		.byte	69
 9166 0009 45       		.byte	69
 9167 000a 45       		.byte	69
 9168 000b 49       		.byte	73
 9169 000c 49       		.byte	73
 9170 000d 49       		.byte	73
 9171 000e 41       		.byte	65
 9172 000f 41       		.byte	65
 9173 0010 45       		.byte	69
 9174 0011 92       		.byte	-110
 9175 0012 92       		.byte	-110
 9176 0013 4F       		.byte	79
 9177 0014 4F       		.byte	79
 9178 0015 4F       		.byte	79
 9179 0016 55       		.byte	85
 9180 0017 55       		.byte	85
 9181 0018 59       		.byte	89
 9182 0019 4F       		.byte	79
 9183 001a 55       		.byte	85
 9184 001b 4F       		.byte	79
 9185 001c 9C       		.byte	-100
 9186 001d 4F       		.byte	79
 9187 001e 9E       		.byte	-98
 9188 001f 9F       		.byte	-97
 9189 0020 41       		.byte	65
 9190 0021 49       		.byte	73
 9191 0022 4F       		.byte	79
 9192 0023 55       		.byte	85
ARM GAS  /tmp/ccTP8DMx.s 			page 291


 9193 0024 A5       		.byte	-91
 9194 0025 A5       		.byte	-91
 9195 0026 A6       		.byte	-90
 9196 0027 A7       		.byte	-89
 9197 0028 A8       		.byte	-88
 9198 0029 A9       		.byte	-87
 9199 002a AA       		.byte	-86
 9200 002b AB       		.byte	-85
 9201 002c AC       		.byte	-84
 9202 002d AD       		.byte	-83
 9203 002e AE       		.byte	-82
 9204 002f AF       		.byte	-81
 9205 0030 B0       		.byte	-80
 9206 0031 B1       		.byte	-79
 9207 0032 B2       		.byte	-78
 9208 0033 B3       		.byte	-77
 9209 0034 B4       		.byte	-76
 9210 0035 41       		.byte	65
 9211 0036 41       		.byte	65
 9212 0037 41       		.byte	65
 9213 0038 B8       		.byte	-72
 9214 0039 B9       		.byte	-71
 9215 003a BA       		.byte	-70
 9216 003b BB       		.byte	-69
 9217 003c BC       		.byte	-68
 9218 003d BD       		.byte	-67
 9219 003e BE       		.byte	-66
 9220 003f BF       		.byte	-65
 9221 0040 C0       		.byte	-64
 9222 0041 C1       		.byte	-63
 9223 0042 C2       		.byte	-62
 9224 0043 C3       		.byte	-61
 9225 0044 C4       		.byte	-60
 9226 0045 C5       		.byte	-59
 9227 0046 41       		.byte	65
 9228 0047 41       		.byte	65
 9229 0048 C8       		.byte	-56
 9230 0049 C9       		.byte	-55
 9231 004a CA       		.byte	-54
 9232 004b CB       		.byte	-53
 9233 004c CC       		.byte	-52
 9234 004d CD       		.byte	-51
 9235 004e CE       		.byte	-50
 9236 004f CF       		.byte	-49
 9237 0050 D1       		.byte	-47
 9238 0051 D1       		.byte	-47
 9239 0052 45       		.byte	69
 9240 0053 45       		.byte	69
 9241 0054 45       		.byte	69
 9242 0055 49       		.byte	73
 9243 0056 49       		.byte	73
 9244 0057 49       		.byte	73
 9245 0058 49       		.byte	73
 9246 0059 D9       		.byte	-39
 9247 005a DA       		.byte	-38
 9248 005b DB       		.byte	-37
 9249 005c DC       		.byte	-36
ARM GAS  /tmp/ccTP8DMx.s 			page 292


 9250 005d DD       		.byte	-35
 9251 005e 49       		.byte	73
 9252 005f DF       		.byte	-33
 9253 0060 4F       		.byte	79
 9254 0061 E1       		.byte	-31
 9255 0062 4F       		.byte	79
 9256 0063 4F       		.byte	79
 9257 0064 4F       		.byte	79
 9258 0065 4F       		.byte	79
 9259 0066 E6       		.byte	-26
 9260 0067 E8       		.byte	-24
 9261 0068 E8       		.byte	-24
 9262 0069 55       		.byte	85
 9263 006a 55       		.byte	85
 9264 006b 55       		.byte	85
 9265 006c 59       		.byte	89
 9266 006d 59       		.byte	89
 9267 006e EE       		.byte	-18
 9268 006f EF       		.byte	-17
 9269 0070 F0       		.byte	-16
 9270 0071 F1       		.byte	-15
 9271 0072 F2       		.byte	-14
 9272 0073 F3       		.byte	-13
 9273 0074 F4       		.byte	-12
 9274 0075 F5       		.byte	-11
 9275 0076 F6       		.byte	-10
 9276 0077 F7       		.byte	-9
 9277 0078 F8       		.byte	-8
 9278 0079 F9       		.byte	-7
 9279 007a FA       		.byte	-6
 9280 007b FB       		.byte	-5
 9281 007c FC       		.byte	-4
 9282 007d FD       		.byte	-3
 9283 007e FE       		.byte	-2
 9284 007f FF       		.byte	-1
 9285              		.section	.rodata.str1.4,"aMS",%progbits,1
 9286              		.align	2
 9287              	.LC0:
 9288 0000 222A2B2C 		.ascii	"\"*+,:;<=>?[]|\177\000"
 9288      3A3B3C3D 
 9288      3E3F5B5D 
 9288      7C7F00
 9289 000f 00       		.space	1
 9290              	.LC1:
 9291 0010 EBFE904D 		.ascii	"\353\376\220MSDOS5.0\000"
 9291      53444F53 
 9291      352E3000 
 9292              	.LC2:
 9293 001c 4E4F204E 		.ascii	"NO NAME    FAT32   \000"
 9293      414D4520 
 9293      20202046 
 9293      41543332 
 9293      20202000 
 9294              	.LC3:
 9295 0030 4E4F204E 		.ascii	"NO NAME    FAT     \000"
 9295      414D4520 
 9295      20202046 
ARM GAS  /tmp/ccTP8DMx.s 			page 293


 9295      41542020 
 9295      20202000 
 9296              		.section	.rodata.cst.9576,"a",%progbits
 9297              		.align	2
 9298              		.set	.LANCHOR5,. + 0
 9301              	cst.9576:
 9302 0000 0100     		.short	1
 9303 0002 0400     		.short	4
 9304 0004 1000     		.short	16
 9305 0006 4000     		.short	64
 9306 0008 0001     		.short	256
 9307 000a 0002     		.short	512
 9308 000c 0000     		.short	0
 9309              		.section	.bss.Files,"aw",%nobits
 9310              		.align	2
 9311              		.set	.LANCHOR0,. + 0
 9314              	Files:
 9315 0000 00000000 		.space	32
 9315      00000000 
 9315      00000000 
 9315      00000000 
 9315      00000000 
 9316              		.section	.bss.Fsid,"aw",%nobits
 9317              		.align	1
 9318              		.set	.LANCHOR3,. + 0
 9321              	Fsid:
 9322 0000 0000     		.space	2
 9323              		.section	.bss.FatFs,"aw",%nobits
 9324              		.align	2
 9325              		.set	.LANCHOR2,. + 0
 9328              	FatFs:
 9329 0000 00000000 		.space	8
 9329      00000000 
 9330              		.section	.rodata.cst32.9577,"a",%progbits
 9331              		.align	2
 9332              		.set	.LANCHOR4,. + 0
 9335              	cst32.9577:
 9336 0000 0100     		.short	1
 9337 0002 0200     		.short	2
 9338 0004 0400     		.short	4
 9339 0006 0800     		.short	8
 9340 0008 1000     		.short	16
 9341 000a 2000     		.short	32
 9342 000c 0000     		.short	0
 9343              		.text
 9344              	.Letext0:
 9345              		.file 2 "Middlewares/Third_Party/FatFs/src/integer.h"
 9346              		.file 3 "/home/ada/Downloads/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_t
 9347              		.file 4 "/home/ada/Downloads/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 9348              		.file 5 "/home/ada/Downloads/gcc-arm-none-eabi-5_4-2016q3/lib/gcc/arm-none-eabi/5.4.1/include/stda
 9349              		.file 6 "/home/ada/Downloads/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/stdio.h"
 9350              		.file 7 "Middlewares/Third_Party/FatFs/src/ff.h"
 9351              		.file 8 "Middlewares/Third_Party/FatFs/src/diskio.h"
 9352              		.file 9 "<built-in>"
 9353              		.file 10 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/ccTP8DMx.s 			page 294


DEFINED SYMBOLS
                            *ABS*:00000000 ff.c
     /tmp/ccTP8DMx.s:22     .text.ld_word:00000000 $t
     /tmp/ccTP8DMx.s:26     .text.ld_word:00000000 ld_word
     /tmp/ccTP8DMx.s:49     .text.ld_dword:00000000 $t
     /tmp/ccTP8DMx.s:53     .text.ld_dword:00000000 ld_dword
     /tmp/ccTP8DMx.s:83     .text.st_word:00000000 $t
     /tmp/ccTP8DMx.s:87     .text.st_word:00000000 st_word
     /tmp/ccTP8DMx.s:107    .text.st_dword:00000000 $t
     /tmp/ccTP8DMx.s:111    .text.st_dword:00000000 st_dword
     /tmp/ccTP8DMx.s:139    .text.mem_cpy:00000000 $t
     /tmp/ccTP8DMx.s:143    .text.mem_cpy:00000000 mem_cpy
     /tmp/ccTP8DMx.s:174    .text.mem_set:00000000 $t
     /tmp/ccTP8DMx.s:178    .text.mem_set:00000000 mem_set
     /tmp/ccTP8DMx.s:202    .text.mem_cmp:00000000 $t
     /tmp/ccTP8DMx.s:206    .text.mem_cmp:00000000 mem_cmp
     /tmp/ccTP8DMx.s:256    .text.chk_chr:00000000 $t
     /tmp/ccTP8DMx.s:260    .text.chk_chr:00000000 chk_chr
     /tmp/ccTP8DMx.s:290    .text.chk_lock:00000000 $t
     /tmp/ccTP8DMx.s:294    .text.chk_lock:00000000 chk_lock
     /tmp/ccTP8DMx.s:413    .text.chk_lock:00000070 $d
     /tmp/ccTP8DMx.s:418    .text.enq_lock:00000000 $t
     /tmp/ccTP8DMx.s:422    .text.enq_lock:00000000 enq_lock
     /tmp/ccTP8DMx.s:459    .text.enq_lock:0000001c $d
     /tmp/ccTP8DMx.s:464    .text.inc_lock:00000000 $t
     /tmp/ccTP8DMx.s:468    .text.inc_lock:00000000 inc_lock
     /tmp/ccTP8DMx.s:616    .text.inc_lock:000000a0 $d
     /tmp/ccTP8DMx.s:621    .text.dec_lock:00000000 $t
     /tmp/ccTP8DMx.s:625    .text.dec_lock:00000000 dec_lock
     /tmp/ccTP8DMx.s:688    .text.dec_lock:00000038 $d
     /tmp/ccTP8DMx.s:693    .text.clear_lock:00000000 $t
     /tmp/ccTP8DMx.s:697    .text.clear_lock:00000000 clear_lock
     /tmp/ccTP8DMx.s:742    .text.clear_lock:00000024 $d
     /tmp/ccTP8DMx.s:747    .text.clust2sect:00000000 $t
     /tmp/ccTP8DMx.s:751    .text.clust2sect:00000000 clust2sect
     /tmp/ccTP8DMx.s:784    .text.clmt_clust:00000000 $t
     /tmp/ccTP8DMx.s:788    .text.clmt_clust:00000000 clmt_clust
     /tmp/ccTP8DMx.s:841    .text.ld_clust:00000000 $t
     /tmp/ccTP8DMx.s:845    .text.ld_clust:00000000 ld_clust
     /tmp/ccTP8DMx.s:886    .text.st_clust:00000000 $t
     /tmp/ccTP8DMx.s:890    .text.st_clust:00000000 st_clust
     /tmp/ccTP8DMx.s:929    .text.get_fileinfo:00000000 $t
     /tmp/ccTP8DMx.s:933    .text.get_fileinfo:00000000 get_fileinfo
     /tmp/ccTP8DMx.s:1040   .text.create_name:00000000 $t
     /tmp/ccTP8DMx.s:1044   .text.create_name:00000000 create_name
     /tmp/ccTP8DMx.s:1223   .text.create_name:000000cc $d
     /tmp/ccTP8DMx.s:1229   .text.get_ldnumber:00000000 $t
     /tmp/ccTP8DMx.s:1233   .text.get_ldnumber:00000000 get_ldnumber
     /tmp/ccTP8DMx.s:1341   .text.putc_init:00000000 $t
     /tmp/ccTP8DMx.s:1345   .text.putc_init:00000000 putc_init
     /tmp/ccTP8DMx.s:1364   .text.validate:00000000 $t
     /tmp/ccTP8DMx.s:1368   .text.validate:00000000 validate
     /tmp/ccTP8DMx.s:1429   .text.sync_window:00000000 $t
     /tmp/ccTP8DMx.s:1433   .text.sync_window:00000000 sync_window
     /tmp/ccTP8DMx.s:1523   .text.move_window:00000000 $t
     /tmp/ccTP8DMx.s:1527   .text.move_window:00000000 move_window
     /tmp/ccTP8DMx.s:1585   .text.check_fs:00000000 $t
ARM GAS  /tmp/ccTP8DMx.s 			page 295


     /tmp/ccTP8DMx.s:1589   .text.check_fs:00000000 check_fs
     /tmp/ccTP8DMx.s:1676   .text.check_fs:00000070 $d
     /tmp/ccTP8DMx.s:1683   .text.find_volume:00000000 $t
     /tmp/ccTP8DMx.s:1687   .text.find_volume:00000000 find_volume
     /tmp/ccTP8DMx.s:2231   .text.find_volume:000002cc $d
     /tmp/ccTP8DMx.s:2239   .text.put_fat:00000000 $t
     /tmp/ccTP8DMx.s:2243   .text.put_fat:00000000 put_fat
     /tmp/ccTP8DMx.s:2434   .text.get_fat:00000000 $t
     /tmp/ccTP8DMx.s:2438   .text.get_fat:00000000 get_fat
     /tmp/ccTP8DMx.s:2604   .text.dir_sdi:00000000 $t
     /tmp/ccTP8DMx.s:2608   .text.dir_sdi:00000000 dir_sdi
     /tmp/ccTP8DMx.s:2762   .text.create_chain:00000000 $t
     /tmp/ccTP8DMx.s:2766   .text.create_chain:00000000 create_chain
     /tmp/ccTP8DMx.s:2951   .text.remove_chain:00000000 $t
     /tmp/ccTP8DMx.s:2955   .text.remove_chain:00000000 remove_chain
     /tmp/ccTP8DMx.s:3086   .text.dir_remove:00000000 $t
     /tmp/ccTP8DMx.s:3090   .text.dir_remove:00000000 dir_remove
     /tmp/ccTP8DMx.s:3133   .text.dir_next:00000000 $t
     /tmp/ccTP8DMx.s:3137   .text.dir_next:00000000 dir_next
     /tmp/ccTP8DMx.s:3368   .text.dir_find:00000000 $t
     /tmp/ccTP8DMx.s:3372   .text.dir_find:00000000 dir_find
     /tmp/ccTP8DMx.s:3460   .text.follow_path:00000000 $t
     /tmp/ccTP8DMx.s:3464   .text.follow_path:00000000 follow_path
     /tmp/ccTP8DMx.s:3590   .text.dir_alloc:00000000 $t
     /tmp/ccTP8DMx.s:3594   .text.dir_alloc:00000000 dir_alloc
     /tmp/ccTP8DMx.s:3679   .text.dir_register:00000000 $t
     /tmp/ccTP8DMx.s:3683   .text.dir_register:00000000 dir_register
     /tmp/ccTP8DMx.s:3742   .text.dir_read:00000000 $t
     /tmp/ccTP8DMx.s:3746   .text.dir_read:00000000 dir_read
     /tmp/ccTP8DMx.s:3846   .text.sync_fs:00000000 $t
     /tmp/ccTP8DMx.s:3850   .text.sync_fs:00000000 sync_fs
     /tmp/ccTP8DMx.s:3944   .text.sync_fs:00000084 $d
     /tmp/ccTP8DMx.s:3950   .text.f_mount:00000000 $t
     /tmp/ccTP8DMx.s:3955   .text.f_mount:00000000 f_mount
     /tmp/ccTP8DMx.s:4051   .text.f_mount:0000005c $d
     /tmp/ccTP8DMx.s:4056   .text.f_open:00000000 $t
     /tmp/ccTP8DMx.s:4061   .text.f_open:00000000 f_open
     /tmp/ccTP8DMx.s:4479   .text.f_read:00000000 $t
     /tmp/ccTP8DMx.s:4484   .text.f_read:00000000 f_read
     /tmp/ccTP8DMx.s:4774   .text.f_write:00000000 $t
     /tmp/ccTP8DMx.s:4779   .text.f_write:00000000 f_write
     /tmp/ccTP8DMx.s:5103   .text.putc_bfd:00000000 $t
     /tmp/ccTP8DMx.s:5107   .text.putc_bfd:00000000 putc_bfd
     /tmp/ccTP8DMx.s:5186   .text.putc_flush:00000000 $t
     /tmp/ccTP8DMx.s:5190   .text.putc_flush:00000000 putc_flush
     /tmp/ccTP8DMx.s:5260   .text.f_sync:00000000 $t
     /tmp/ccTP8DMx.s:5265   .text.f_sync:00000000 f_sync
     /tmp/ccTP8DMx.s:5390   .text.f_close:00000000 $t
     /tmp/ccTP8DMx.s:5395   .text.f_close:00000000 f_close
     /tmp/ccTP8DMx.s:5450   .text.f_lseek:00000000 $t
     /tmp/ccTP8DMx.s:5455   .text.f_lseek:00000000 f_lseek
     /tmp/ccTP8DMx.s:6021   .text.f_opendir:00000000 $t
     /tmp/ccTP8DMx.s:6026   .text.f_opendir:00000000 f_opendir
     /tmp/ccTP8DMx.s:6168   .text.f_closedir:00000000 $t
     /tmp/ccTP8DMx.s:6173   .text.f_closedir:00000000 f_closedir
     /tmp/ccTP8DMx.s:6224   .text.f_readdir:00000000 $t
     /tmp/ccTP8DMx.s:6229   .text.f_readdir:00000000 f_readdir
ARM GAS  /tmp/ccTP8DMx.s 			page 296


     /tmp/ccTP8DMx.s:6312   .text.f_stat:00000000 $t
     /tmp/ccTP8DMx.s:6317   .text.f_stat:00000000 f_stat
     /tmp/ccTP8DMx.s:6385   .text.f_getfree:00000000 $t
     /tmp/ccTP8DMx.s:6390   .text.f_getfree:00000000 f_getfree
     /tmp/ccTP8DMx.s:6589   .text.f_truncate:00000000 $t
     /tmp/ccTP8DMx.s:6594   .text.f_truncate:00000000 f_truncate
     /tmp/ccTP8DMx.s:6748   .text.f_unlink:00000000 $t
     /tmp/ccTP8DMx.s:6753   .text.f_unlink:00000000 f_unlink
     /tmp/ccTP8DMx.s:6918   .text.f_mkdir:00000000 $t
     /tmp/ccTP8DMx.s:6923   .text.f_mkdir:00000000 f_mkdir
     /tmp/ccTP8DMx.s:7198   .text.f_rename:00000000 $t
     /tmp/ccTP8DMx.s:7203   .text.f_rename:00000000 f_rename
     /tmp/ccTP8DMx.s:7423   .text.f_mkfs:00000000 $t
     /tmp/ccTP8DMx.s:7428   .text.f_mkfs:00000000 f_mkfs
     /tmp/ccTP8DMx.s:7925   .text.f_mkfs:000002e0 $d
     /tmp/ccTP8DMx.s:7932   .text.f_mkfs:000002f4 $t
     /tmp/ccTP8DMx.s:8447   .text.f_mkfs:00000600 $d
     /tmp/ccTP8DMx.s:8456   .text.f_gets:00000000 $t
     /tmp/ccTP8DMx.s:8461   .text.f_gets:00000000 f_gets
     /tmp/ccTP8DMx.s:8554   .text.f_putc:00000000 $t
     /tmp/ccTP8DMx.s:8559   .text.f_putc:00000000 f_putc
     /tmp/ccTP8DMx.s:8599   .text.f_puts:00000000 $t
     /tmp/ccTP8DMx.s:8604   .text.f_puts:00000000 f_puts
     /tmp/ccTP8DMx.s:8653   .text.f_printf:00000000 $t
     /tmp/ccTP8DMx.s:8658   .text.f_printf:00000000 f_printf
     /tmp/ccTP8DMx.s:8818   .text.f_printf:000000a2 $d
     /tmp/ccTP8DMx.s:9152   .rodata.ExCvt:00000000 $d
     /tmp/ccTP8DMx.s:9156   .rodata.ExCvt:00000000 ExCvt
     /tmp/ccTP8DMx.s:9286   .rodata.str1.4:00000000 $d
     /tmp/ccTP8DMx.s:9297   .rodata.cst.9576:00000000 $d
     /tmp/ccTP8DMx.s:9301   .rodata.cst.9576:00000000 cst.9576
     /tmp/ccTP8DMx.s:9310   .bss.Files:00000000 $d
     /tmp/ccTP8DMx.s:9314   .bss.Files:00000000 Files
     /tmp/ccTP8DMx.s:9317   .bss.Fsid:00000000 $d
     /tmp/ccTP8DMx.s:9321   .bss.Fsid:00000000 Fsid
     /tmp/ccTP8DMx.s:9324   .bss.FatFs:00000000 $d
     /tmp/ccTP8DMx.s:9328   .bss.FatFs:00000000 FatFs
     /tmp/ccTP8DMx.s:9331   .rodata.cst32.9577:00000000 $d
     /tmp/ccTP8DMx.s:9335   .rodata.cst32.9577:00000000 cst32.9577
                     .debug_frame:00000010 $d
     /tmp/ccTP8DMx.s:8841   .text.f_printf:000000b9 $d
     /tmp/ccTP8DMx.s:8841   .text.f_printf:000000ba $t

UNDEFINED SYMBOLS
disk_status
disk_write
disk_read
disk_initialize
disk_ioctl
get_fattime
